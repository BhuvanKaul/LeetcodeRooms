{'title': 'Two Sum', 'titleSlug': 'two-sum', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}]}
{'title': 'Add Two Numbers', 'titleSlug': 'add-two-numbers', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Recursion', 'slug': 'recursion'}]}
{'title': 'Longest Substring Without Repeating Characters', 'titleSlug': 'longest-substring-without-repeating-characters', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Median of Two Sorted Arrays', 'titleSlug': 'median-of-two-sorted-arrays', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}]}
{'title': 'Longest Palindromic Substring', 'titleSlug': 'longest-palindromic-substring', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Zigzag Conversion', 'titleSlug': 'zigzag-conversion', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Reverse Integer', 'titleSlug': 'reverse-integer', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'String to Integer (atoi)', 'titleSlug': 'string-to-integer-atoi', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Palindrome Number', 'titleSlug': 'palindrome-number', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Regular Expression Matching', 'titleSlug': 'regular-expression-matching', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Recursion', 'slug': 'recursion'}]}
{'title': 'Container With Most Water', 'titleSlug': 'container-with-most-water', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Integer to Roman', 'titleSlug': 'integer-to-roman', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Roman to Integer', 'titleSlug': 'roman-to-integer', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Longest Common Prefix', 'titleSlug': 'longest-common-prefix', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Trie', 'slug': 'trie'}]}
{'title': '3Sum', 'titleSlug': '3sum', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': '3Sum Closest', 'titleSlug': '3sum-closest', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Letter Combinations of a Phone Number', 'titleSlug': 'letter-combinations-of-a-phone-number', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Backtracking', 'slug': 'backtracking'}]}
{'title': '4Sum', 'titleSlug': '4sum', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Remove Nth Node From End of List', 'titleSlug': 'remove-nth-node-from-end-of-list', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}]}
{'title': 'Valid Parentheses', 'titleSlug': 'valid-parentheses', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}]}
{'title': 'Merge Two Sorted Lists', 'titleSlug': 'merge-two-sorted-lists', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Recursion', 'slug': 'recursion'}]}
{'title': 'Generate Parentheses', 'titleSlug': 'generate-parentheses', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Backtracking', 'slug': 'backtracking'}]}
{'title': 'Merge k Sorted Lists', 'titleSlug': 'merge-k-sorted-lists', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Merge Sort', 'slug': 'merge-sort'}]}
{'title': 'Swap Nodes in Pairs', 'titleSlug': 'swap-nodes-in-pairs', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Recursion', 'slug': 'recursion'}]}
{'title': 'Reverse Nodes in k-Group', 'titleSlug': 'reverse-nodes-in-k-group', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Recursion', 'slug': 'recursion'}]}
{'title': 'Remove Duplicates from Sorted Array', 'titleSlug': 'remove-duplicates-from-sorted-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}]}
{'title': 'Remove Element', 'titleSlug': 'remove-element', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}]}
{'title': 'Find the Index of the First Occurrence in a String', 'titleSlug': 'find-the-index-of-the-first-occurrence-in-a-string', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'String Matching', 'slug': 'string-matching'}]}
{'title': 'Divide Two Integers', 'titleSlug': 'divide-two-integers', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Substring with Concatenation of All Words', 'titleSlug': 'substring-with-concatenation-of-all-words', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Next Permutation', 'titleSlug': 'next-permutation', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}]}
{'title': 'Longest Valid Parentheses', 'titleSlug': 'longest-valid-parentheses', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Stack', 'slug': 'stack'}]}
{'title': 'Search in Rotated Sorted Array', 'titleSlug': 'search-in-rotated-sorted-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Find First and Last Position of Element in Sorted Array', 'titleSlug': 'find-first-and-last-position-of-element-in-sorted-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Search Insert Position', 'titleSlug': 'search-insert-position', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Valid Sudoku', 'titleSlug': 'valid-sudoku', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Sudoku Solver', 'titleSlug': 'sudoku-solver', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Count and Say', 'titleSlug': 'count-and-say', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Combination Sum', 'titleSlug': 'combination-sum', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Backtracking', 'slug': 'backtracking'}]}
{'title': 'Combination Sum II', 'titleSlug': 'combination-sum-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Backtracking', 'slug': 'backtracking'}]}
{'title': 'First Missing Positive', 'titleSlug': 'first-missing-positive', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}]}
{'title': 'Trapping Rain Water', 'titleSlug': 'trapping-rain-water', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Multiply Strings', 'titleSlug': 'multiply-strings', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Wildcard Matching', 'titleSlug': 'wildcard-matching', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Recursion', 'slug': 'recursion'}]}
{'title': 'Jump Game II', 'titleSlug': 'jump-game-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Permutations', 'titleSlug': 'permutations', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Backtracking', 'slug': 'backtracking'}]}
{'title': 'Permutations II', 'titleSlug': 'permutations-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Rotate Image', 'titleSlug': 'rotate-image', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Group Anagrams', 'titleSlug': 'group-anagrams', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Pow(x, n)', 'titleSlug': 'powx-n', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Recursion', 'slug': 'recursion'}]}
{'title': 'N-Queens', 'titleSlug': 'n-queens', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Backtracking', 'slug': 'backtracking'}]}
{'title': 'N-Queens II', 'titleSlug': 'n-queens-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Backtracking', 'slug': 'backtracking'}]}
{'title': 'Maximum Subarray', 'titleSlug': 'maximum-subarray', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Spiral Matrix', 'titleSlug': 'spiral-matrix', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Jump Game', 'titleSlug': 'jump-game', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Merge Intervals', 'titleSlug': 'merge-intervals', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Insert Interval', 'titleSlug': 'insert-interval', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Length of Last Word', 'titleSlug': 'length-of-last-word', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Spiral Matrix II', 'titleSlug': 'spiral-matrix-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Permutation Sequence', 'titleSlug': 'permutation-sequence', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Recursion', 'slug': 'recursion'}]}
{'title': 'Rotate List', 'titleSlug': 'rotate-list', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}]}
{'title': 'Unique Paths', 'titleSlug': 'unique-paths', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}]}
{'title': 'Unique Paths II', 'titleSlug': 'unique-paths-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Minimum Path Sum', 'titleSlug': 'minimum-path-sum', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Valid Number', 'titleSlug': 'valid-number', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Plus One', 'titleSlug': 'plus-one', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}]}
{'title': 'Add Binary', 'titleSlug': 'add-binary', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Text Justification', 'titleSlug': 'text-justification', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Sqrt(x)', 'titleSlug': 'sqrtx', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Climbing Stairs', 'titleSlug': 'climbing-stairs', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Memoization', 'slug': 'memoization'}]}
{'title': 'Simplify Path', 'titleSlug': 'simplify-path', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}]}
{'title': 'Edit Distance', 'titleSlug': 'edit-distance', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Set Matrix Zeroes', 'titleSlug': 'set-matrix-zeroes', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Search a 2D Matrix', 'titleSlug': 'search-a-2d-matrix', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Sort Colors', 'titleSlug': 'sort-colors', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Minimum Window Substring', 'titleSlug': 'minimum-window-substring', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Combinations', 'titleSlug': 'combinations', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Backtracking', 'slug': 'backtracking'}]}
{'title': 'Subsets', 'titleSlug': 'subsets', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Word Search', 'titleSlug': 'word-search', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Remove Duplicates from Sorted Array II', 'titleSlug': 'remove-duplicates-from-sorted-array-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}]}
{'title': 'Search in Rotated Sorted Array II', 'titleSlug': 'search-in-rotated-sorted-array-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Remove Duplicates from Sorted List II', 'titleSlug': 'remove-duplicates-from-sorted-list-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}]}
{'title': 'Remove Duplicates from Sorted List', 'titleSlug': 'remove-duplicates-from-sorted-list', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}]}
{'title': 'Largest Rectangle in Histogram', 'titleSlug': 'largest-rectangle-in-histogram', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Maximal Rectangle', 'titleSlug': 'maximal-rectangle', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Partition List', 'titleSlug': 'partition-list', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}]}
{'title': 'Scramble String', 'titleSlug': 'scramble-string', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Merge Sorted Array', 'titleSlug': 'merge-sorted-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Gray Code', 'titleSlug': 'gray-code', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Subsets II', 'titleSlug': 'subsets-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Decode Ways', 'titleSlug': 'decode-ways', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Reverse Linked List II', 'titleSlug': 'reverse-linked-list-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}]}
{'title': 'Restore IP Addresses', 'titleSlug': 'restore-ip-addresses', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Backtracking', 'slug': 'backtracking'}]}
{'title': 'Binary Tree Inorder Traversal', 'titleSlug': 'binary-tree-inorder-traversal', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Stack', 'slug': 'stack'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Unique Binary Search Trees II', 'titleSlug': 'unique-binary-search-trees-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Unique Binary Search Trees', 'titleSlug': 'unique-binary-search-trees', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Interleaving String', 'titleSlug': 'interleaving-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Validate Binary Search Tree', 'titleSlug': 'validate-binary-search-tree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Recover Binary Search Tree', 'titleSlug': 'recover-binary-search-tree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Same Tree', 'titleSlug': 'same-tree', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Symmetric Tree', 'titleSlug': 'symmetric-tree', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Binary Tree Level Order Traversal', 'titleSlug': 'binary-tree-level-order-traversal', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Binary Tree Zigzag Level Order Traversal', 'titleSlug': 'binary-tree-zigzag-level-order-traversal', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Maximum Depth of Binary Tree', 'titleSlug': 'maximum-depth-of-binary-tree', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Construct Binary Tree from Preorder and Inorder Traversal', 'titleSlug': 'construct-binary-tree-from-preorder-and-inorder-traversal', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Construct Binary Tree from Inorder and Postorder Traversal', 'titleSlug': 'construct-binary-tree-from-inorder-and-postorder-traversal', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Binary Tree Level Order Traversal II', 'titleSlug': 'binary-tree-level-order-traversal-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Convert Sorted Array to Binary Search Tree', 'titleSlug': 'convert-sorted-array-to-binary-search-tree', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Convert Sorted List to Binary Search Tree', 'titleSlug': 'convert-sorted-list-to-binary-search-tree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Balanced Binary Tree', 'titleSlug': 'balanced-binary-tree', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Minimum Depth of Binary Tree', 'titleSlug': 'minimum-depth-of-binary-tree', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Path Sum', 'titleSlug': 'path-sum', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Path Sum II', 'titleSlug': 'path-sum-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Flatten Binary Tree to Linked List', 'titleSlug': 'flatten-binary-tree-to-linked-list', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Distinct Subsequences', 'titleSlug': 'distinct-subsequences', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Populating Next Right Pointers in Each Node', 'titleSlug': 'populating-next-right-pointers-in-each-node', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Populating Next Right Pointers in Each Node II', 'titleSlug': 'populating-next-right-pointers-in-each-node-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': "Pascal's Triangle", 'titleSlug': 'pascals-triangle', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': "Pascal's Triangle II", 'titleSlug': 'pascals-triangle-ii', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Triangle', 'titleSlug': 'triangle', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Best Time to Buy and Sell Stock', 'titleSlug': 'best-time-to-buy-and-sell-stock', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Best Time to Buy and Sell Stock II', 'titleSlug': 'best-time-to-buy-and-sell-stock-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Best Time to Buy and Sell Stock III', 'titleSlug': 'best-time-to-buy-and-sell-stock-iii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Binary Tree Maximum Path Sum', 'titleSlug': 'binary-tree-maximum-path-sum', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Valid Palindrome', 'titleSlug': 'valid-palindrome', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Word Ladder II', 'titleSlug': 'word-ladder-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}]}
{'title': 'Word Ladder', 'titleSlug': 'word-ladder', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}]}
{'title': 'Longest Consecutive Sequence', 'titleSlug': 'longest-consecutive-sequence', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Union Find', 'slug': 'union-find'}]}
{'title': 'Sum Root to Leaf Numbers', 'titleSlug': 'sum-root-to-leaf-numbers', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Surrounded Regions', 'titleSlug': 'surrounded-regions', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Palindrome Partitioning', 'titleSlug': 'palindrome-partitioning', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Backtracking', 'slug': 'backtracking'}]}
{'title': 'Palindrome Partitioning II', 'titleSlug': 'palindrome-partitioning-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Clone Graph', 'titleSlug': 'clone-graph', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Gas Station', 'titleSlug': 'gas-station', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Candy', 'titleSlug': 'candy', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Single Number', 'titleSlug': 'single-number', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Single Number II', 'titleSlug': 'single-number-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Copy List with Random Pointer', 'titleSlug': 'copy-list-with-random-pointer', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Linked List', 'slug': 'linked-list'}]}
{'title': 'Word Break', 'titleSlug': 'word-break', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Trie', 'slug': 'trie'}, {'name': 'Memoization', 'slug': 'memoization'}]}
{'title': 'Word Break II', 'titleSlug': 'word-break-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Trie', 'slug': 'trie'}, {'name': 'Memoization', 'slug': 'memoization'}]}
{'title': 'Linked List Cycle', 'titleSlug': 'linked-list-cycle', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}]}
{'title': 'Linked List Cycle II', 'titleSlug': 'linked-list-cycle-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}]}
{'title': 'Reorder List', 'titleSlug': 'reorder-list', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Recursion', 'slug': 'recursion'}]}
{'title': 'Binary Tree Preorder Traversal', 'titleSlug': 'binary-tree-preorder-traversal', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Stack', 'slug': 'stack'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Binary Tree Postorder Traversal', 'titleSlug': 'binary-tree-postorder-traversal', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Stack', 'slug': 'stack'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'LRU Cache', 'titleSlug': 'lru-cache', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Doubly-Linked List', 'slug': 'doubly-linked-list'}]}
{'title': 'Insertion Sort List', 'titleSlug': 'insertion-sort-list', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Sort List', 'titleSlug': 'sort-list', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Merge Sort', 'slug': 'merge-sort'}]}
{'title': 'Max Points on a Line', 'titleSlug': 'max-points-on-a-line', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Geometry', 'slug': 'geometry'}]}
{'title': 'Evaluate Reverse Polish Notation', 'titleSlug': 'evaluate-reverse-polish-notation', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Stack', 'slug': 'stack'}]}
{'title': 'Reverse Words in a String', 'titleSlug': 'reverse-words-in-a-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Maximum Product Subarray', 'titleSlug': 'maximum-product-subarray', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Find Minimum in Rotated Sorted Array', 'titleSlug': 'find-minimum-in-rotated-sorted-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Find Minimum in Rotated Sorted Array II', 'titleSlug': 'find-minimum-in-rotated-sorted-array-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Min Stack', 'titleSlug': 'min-stack', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Stack', 'slug': 'stack'}, {'name': 'Design', 'slug': 'design'}]}
{'title': 'Binary Tree Upside Down', 'titleSlug': 'binary-tree-upside-down', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Read N Characters Given Read4', 'titleSlug': 'read-n-characters-given-read4', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Simulation', 'slug': 'simulation'}, {'name': 'Interactive', 'slug': 'interactive'}]}
{'title': 'Read N Characters Given read4 II - Call Multiple Times', 'titleSlug': 'read-n-characters-given-read4-ii-call-multiple-times', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Simulation', 'slug': 'simulation'}, {'name': 'Interactive', 'slug': 'interactive'}]}
{'title': 'Longest Substring with At Most Two Distinct Characters', 'titleSlug': 'longest-substring-with-at-most-two-distinct-characters', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Intersection of Two Linked Lists', 'titleSlug': 'intersection-of-two-linked-lists', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}]}
{'title': 'One Edit Distance', 'titleSlug': 'one-edit-distance', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Find Peak Element', 'titleSlug': 'find-peak-element', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Missing Ranges', 'titleSlug': 'missing-ranges', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Maximum Gap', 'titleSlug': 'maximum-gap', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Bucket Sort', 'slug': 'bucket-sort'}, {'name': 'Radix Sort', 'slug': 'radix-sort'}]}
{'title': 'Compare Version Numbers', 'titleSlug': 'compare-version-numbers', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Fraction to Recurring Decimal', 'titleSlug': 'fraction-to-recurring-decimal', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Two Sum II - Input Array Is Sorted', 'titleSlug': 'two-sum-ii-input-array-is-sorted', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Excel Sheet Column Title', 'titleSlug': 'excel-sheet-column-title', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Majority Element', 'titleSlug': 'majority-element', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Two Sum III - Data structure design', 'titleSlug': 'two-sum-iii-data-structure-design', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Data Stream', 'slug': 'data-stream'}]}
{'title': 'Excel Sheet Column Number', 'titleSlug': 'excel-sheet-column-number', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Factorial Trailing Zeroes', 'titleSlug': 'factorial-trailing-zeroes', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Binary Search Tree Iterator', 'titleSlug': 'binary-search-tree-iterator', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Stack', 'slug': 'stack'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}, {'name': 'Iterator', 'slug': 'iterator'}]}
{'title': 'Dungeon Game', 'titleSlug': 'dungeon-game', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Combine Two Tables', 'titleSlug': 'combine-two-tables', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Second Highest Salary', 'titleSlug': 'second-highest-salary', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Nth Highest Salary', 'titleSlug': 'nth-highest-salary', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Rank Scores', 'titleSlug': 'rank-scores', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Largest Number', 'titleSlug': 'largest-number', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Consecutive Numbers', 'titleSlug': 'consecutive-numbers', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Employees Earning More Than Their Managers', 'titleSlug': 'employees-earning-more-than-their-managers', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Duplicate Emails', 'titleSlug': 'duplicate-emails', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Customers Who Never Order', 'titleSlug': 'customers-who-never-order', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Department Highest Salary', 'titleSlug': 'department-highest-salary', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Department Top Three Salaries', 'titleSlug': 'department-top-three-salaries', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Reverse Words in a String II', 'titleSlug': 'reverse-words-in-a-string-ii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Repeated DNA Sequences', 'titleSlug': 'repeated-dna-sequences', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Rolling Hash', 'slug': 'rolling-hash'}, {'name': 'Hash Function', 'slug': 'hash-function'}]}
{'title': 'Best Time to Buy and Sell Stock IV', 'titleSlug': 'best-time-to-buy-and-sell-stock-iv', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Rotate Array', 'titleSlug': 'rotate-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}]}
{'title': 'Reverse Bits', 'titleSlug': 'reverse-bits', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Number of 1 Bits', 'titleSlug': 'number-of-1-bits', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Word Frequency', 'titleSlug': 'word-frequency', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Shell', 'slug': 'shell'}]}
{'title': 'Valid Phone Numbers', 'titleSlug': 'valid-phone-numbers', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Shell', 'slug': 'shell'}]}
{'title': 'Transpose File', 'titleSlug': 'transpose-file', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Shell', 'slug': 'shell'}]}
{'title': 'Tenth Line', 'titleSlug': 'tenth-line', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Shell', 'slug': 'shell'}]}
{'title': 'Delete Duplicate Emails', 'titleSlug': 'delete-duplicate-emails', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Rising Temperature', 'titleSlug': 'rising-temperature', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'House Robber', 'titleSlug': 'house-robber', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Binary Tree Right Side View', 'titleSlug': 'binary-tree-right-side-view', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Number of Islands', 'titleSlug': 'number-of-islands', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Bitwise AND of Numbers Range', 'titleSlug': 'bitwise-and-of-numbers-range', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Happy Number', 'titleSlug': 'happy-number', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}]}
{'title': 'Remove Linked List Elements', 'titleSlug': 'remove-linked-list-elements', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Recursion', 'slug': 'recursion'}]}
{'title': 'Count Primes', 'titleSlug': 'count-primes', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Enumeration', 'slug': 'enumeration'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Isomorphic Strings', 'titleSlug': 'isomorphic-strings', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Reverse Linked List', 'titleSlug': 'reverse-linked-list', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Recursion', 'slug': 'recursion'}]}
{'title': 'Course Schedule', 'titleSlug': 'course-schedule', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Topological Sort', 'slug': 'topological-sort'}]}
{'title': 'Implement Trie (Prefix Tree)', 'titleSlug': 'implement-trie-prefix-tree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Trie', 'slug': 'trie'}]}
{'title': 'Minimum Size Subarray Sum', 'titleSlug': 'minimum-size-subarray-sum', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Course Schedule II', 'titleSlug': 'course-schedule-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Topological Sort', 'slug': 'topological-sort'}]}
{'title': 'Design Add and Search Words Data Structure', 'titleSlug': 'design-add-and-search-words-data-structure', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Trie', 'slug': 'trie'}]}
{'title': 'Word Search II', 'titleSlug': 'word-search-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Trie', 'slug': 'trie'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'House Robber II', 'titleSlug': 'house-robber-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Shortest Palindrome', 'titleSlug': 'shortest-palindrome', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Rolling Hash', 'slug': 'rolling-hash'}, {'name': 'String Matching', 'slug': 'string-matching'}, {'name': 'Hash Function', 'slug': 'hash-function'}]}
{'title': 'Kth Largest Element in an Array', 'titleSlug': 'kth-largest-element-in-an-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Quickselect', 'slug': 'quickselect'}]}
{'title': 'Combination Sum III', 'titleSlug': 'combination-sum-iii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Backtracking', 'slug': 'backtracking'}]}
{'title': 'Contains Duplicate', 'titleSlug': 'contains-duplicate', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'The Skyline Problem', 'titleSlug': 'the-skyline-problem', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Line Sweep', 'slug': 'line-sweep'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Contains Duplicate II', 'titleSlug': 'contains-duplicate-ii', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Contains Duplicate III', 'titleSlug': 'contains-duplicate-iii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Bucket Sort', 'slug': 'bucket-sort'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Maximal Square', 'titleSlug': 'maximal-square', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Count Complete Tree Nodes', 'titleSlug': 'count-complete-tree-nodes', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Rectangle Area', 'titleSlug': 'rectangle-area', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Geometry', 'slug': 'geometry'}]}
{'title': 'Basic Calculator', 'titleSlug': 'basic-calculator', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Recursion', 'slug': 'recursion'}]}
{'title': 'Implement Stack using Queues', 'titleSlug': 'implement-stack-using-queues', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Stack', 'slug': 'stack'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Queue', 'slug': 'queue'}]}
{'title': 'Invert Binary Tree', 'titleSlug': 'invert-binary-tree', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Basic Calculator II', 'titleSlug': 'basic-calculator-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}]}
{'title': 'Summary Ranges', 'titleSlug': 'summary-ranges', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Majority Element II', 'titleSlug': 'majority-element-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Kth Smallest Element in a BST', 'titleSlug': 'kth-smallest-element-in-a-bst', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Power of Two', 'titleSlug': 'power-of-two', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Recursion', 'slug': 'recursion'}]}
{'title': 'Implement Queue using Stacks', 'titleSlug': 'implement-queue-using-stacks', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Stack', 'slug': 'stack'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Queue', 'slug': 'queue'}]}
{'title': 'Number of Digit One', 'titleSlug': 'number-of-digit-one', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Recursion', 'slug': 'recursion'}]}
{'title': 'Palindrome Linked List', 'titleSlug': 'palindrome-linked-list', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Recursion', 'slug': 'recursion'}]}
{'title': 'Lowest Common Ancestor of a Binary Search Tree', 'titleSlug': 'lowest-common-ancestor-of-a-binary-search-tree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Lowest Common Ancestor of a Binary Tree', 'titleSlug': 'lowest-common-ancestor-of-a-binary-tree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Delete Node in a Linked List', 'titleSlug': 'delete-node-in-a-linked-list', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}]}
{'title': 'Product of Array Except Self', 'titleSlug': 'product-of-array-except-self', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Sliding Window Maximum', 'titleSlug': 'sliding-window-maximum', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Monotonic Queue', 'slug': 'monotonic-queue'}]}
{'title': 'Search a 2D Matrix II', 'titleSlug': 'search-a-2d-matrix-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Different Ways to Add Parentheses', 'titleSlug': 'different-ways-to-add-parentheses', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Recursion', 'slug': 'recursion'}, {'name': 'Memoization', 'slug': 'memoization'}]}
{'title': 'Valid Anagram', 'titleSlug': 'valid-anagram', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Shortest Word Distance', 'titleSlug': 'shortest-word-distance', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Shortest Word Distance II', 'titleSlug': 'shortest-word-distance-ii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'Design', 'slug': 'design'}]}
{'title': 'Shortest Word Distance III', 'titleSlug': 'shortest-word-distance-iii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Strobogrammatic Number', 'titleSlug': 'strobogrammatic-number', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Strobogrammatic Number II', 'titleSlug': 'strobogrammatic-number-ii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Recursion', 'slug': 'recursion'}]}
{'title': 'Strobogrammatic Number III', 'titleSlug': 'strobogrammatic-number-iii', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Recursion', 'slug': 'recursion'}]}
{'title': 'Group Shifted Strings', 'titleSlug': 'group-shifted-strings', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Count Univalue Subtrees', 'titleSlug': 'count-univalue-subtrees', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Flatten 2D Vector', 'titleSlug': 'flatten-2d-vector', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Iterator', 'slug': 'iterator'}]}
{'title': 'Meeting Rooms', 'titleSlug': 'meeting-rooms', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Meeting Rooms II', 'titleSlug': 'meeting-rooms-ii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Factor Combinations', 'titleSlug': 'factor-combinations', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Backtracking', 'slug': 'backtracking'}]}
{'title': 'Verify Preorder Sequence in Binary Search Tree', 'titleSlug': 'verify-preorder-sequence-in-binary-search-tree', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Recursion', 'slug': 'recursion'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Paint House', 'titleSlug': 'paint-house', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Binary Tree Paths', 'titleSlug': 'binary-tree-paths', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Add Digits', 'titleSlug': 'add-digits', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Simulation', 'slug': 'simulation'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': '3Sum Smaller', 'titleSlug': '3sum-smaller', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Single Number III', 'titleSlug': 'single-number-iii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Graph Valid Tree', 'titleSlug': 'graph-valid-tree', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Trips and Users', 'titleSlug': 'trips-and-users', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Ugly Number', 'titleSlug': 'ugly-number', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Ugly Number II', 'titleSlug': 'ugly-number-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Paint House II', 'titleSlug': 'paint-house-ii', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Palindrome Permutation', 'titleSlug': 'palindrome-permutation', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Palindrome Permutation II', 'titleSlug': 'palindrome-permutation-ii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Backtracking', 'slug': 'backtracking'}]}
{'title': 'Missing Number', 'titleSlug': 'missing-number', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Alien Dictionary', 'titleSlug': 'alien-dictionary', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Topological Sort', 'slug': 'topological-sort'}]}
{'title': 'Closest Binary Search Tree Value', 'titleSlug': 'closest-binary-search-tree-value', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Encode and Decode Strings', 'titleSlug': 'encode-and-decode-strings', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Design', 'slug': 'design'}]}
{'title': 'Closest Binary Search Tree Value II', 'titleSlug': 'closest-binary-search-tree-value-ii', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Integer to English Words', 'titleSlug': 'integer-to-english-words', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Recursion', 'slug': 'recursion'}]}
{'title': 'H-Index', 'titleSlug': 'h-index', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Counting Sort', 'slug': 'counting-sort'}]}
{'title': 'H-Index II', 'titleSlug': 'h-index-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Paint Fence', 'titleSlug': 'paint-fence', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Find the Celebrity', 'titleSlug': 'find-the-celebrity', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Interactive', 'slug': 'interactive'}]}
{'title': 'First Bad Version', 'titleSlug': 'first-bad-version', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Interactive', 'slug': 'interactive'}]}
{'title': 'Perfect Squares', 'titleSlug': 'perfect-squares', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}]}
{'title': 'Wiggle Sort', 'titleSlug': 'wiggle-sort', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Zigzag Iterator', 'titleSlug': 'zigzag-iterator', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Iterator', 'slug': 'iterator'}]}
{'title': 'Expression Add Operators', 'titleSlug': 'expression-add-operators', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Backtracking', 'slug': 'backtracking'}]}
{'title': 'Move Zeroes', 'titleSlug': 'move-zeroes', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}]}
{'title': 'Peeking Iterator', 'titleSlug': 'peeking-iterator', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Iterator', 'slug': 'iterator'}]}
{'title': 'Inorder Successor in BST', 'titleSlug': 'inorder-successor-in-bst', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Walls and Gates', 'titleSlug': 'walls-and-gates', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Find the Duplicate Number', 'titleSlug': 'find-the-duplicate-number', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Unique Word Abbreviation', 'titleSlug': 'unique-word-abbreviation', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Design', 'slug': 'design'}]}
{'title': 'Game of Life', 'titleSlug': 'game-of-life', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Word Pattern', 'titleSlug': 'word-pattern', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Word Pattern II', 'titleSlug': 'word-pattern-ii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Backtracking', 'slug': 'backtracking'}]}
{'title': 'Nim Game', 'titleSlug': 'nim-game', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Brainteaser', 'slug': 'brainteaser'}, {'name': 'Game Theory', 'slug': 'game-theory'}]}
{'title': 'Flip Game', 'titleSlug': 'flip-game', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Flip Game II', 'titleSlug': 'flip-game-ii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Memoization', 'slug': 'memoization'}, {'name': 'Game Theory', 'slug': 'game-theory'}]}
{'title': 'Find Median from Data Stream', 'titleSlug': 'find-median-from-data-stream', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Data Stream', 'slug': 'data-stream'}]}
{'title': 'Best Meeting Point', 'titleSlug': 'best-meeting-point', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Serialize and Deserialize Binary Tree', 'titleSlug': 'serialize-and-deserialize-binary-tree', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Binary Tree Longest Consecutive Sequence', 'titleSlug': 'binary-tree-longest-consecutive-sequence', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Bulls and Cows', 'titleSlug': 'bulls-and-cows', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Longest Increasing Subsequence', 'titleSlug': 'longest-increasing-subsequence', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Remove Invalid Parentheses', 'titleSlug': 'remove-invalid-parentheses', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}]}
{'title': 'Smallest Rectangle Enclosing Black Pixels', 'titleSlug': 'smallest-rectangle-enclosing-black-pixels', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Range Sum Query - Immutable', 'titleSlug': 'range-sum-query-immutable', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Range Sum Query 2D - Immutable', 'titleSlug': 'range-sum-query-2d-immutable', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Number of Islands II', 'titleSlug': 'number-of-islands-ii', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Union Find', 'slug': 'union-find'}]}
{'title': 'Additive Number', 'titleSlug': 'additive-number', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Backtracking', 'slug': 'backtracking'}]}
{'title': 'Range Sum Query - Mutable', 'titleSlug': 'range-sum-query-mutable', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}]}
{'title': 'Range Sum Query 2D - Mutable', 'titleSlug': 'range-sum-query-2d-mutable', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Best Time to Buy and Sell Stock with Cooldown', 'titleSlug': 'best-time-to-buy-and-sell-stock-with-cooldown', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Minimum Height Trees', 'titleSlug': 'minimum-height-trees', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Topological Sort', 'slug': 'topological-sort'}]}
{'title': 'Sparse Matrix Multiplication', 'titleSlug': 'sparse-matrix-multiplication', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Burst Balloons', 'titleSlug': 'burst-balloons', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Super Ugly Number', 'titleSlug': 'super-ugly-number', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Binary Tree Vertical Order Traversal', 'titleSlug': 'binary-tree-vertical-order-traversal', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Count of Smaller Numbers After Self', 'titleSlug': 'count-of-smaller-numbers-after-self', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Merge Sort', 'slug': 'merge-sort'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Remove Duplicate Letters', 'titleSlug': 'remove-duplicate-letters', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Shortest Distance from All Buildings', 'titleSlug': 'shortest-distance-from-all-buildings', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Maximum Product of Word Lengths', 'titleSlug': 'maximum-product-of-word-lengths', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Bulb Switcher', 'titleSlug': 'bulb-switcher', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Brainteaser', 'slug': 'brainteaser'}]}
{'title': 'Generalized Abbreviation', 'titleSlug': 'generalized-abbreviation', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Create Maximum Number', 'titleSlug': 'create-maximum-number', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Coin Change', 'titleSlug': 'coin-change', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}]}
{'title': 'Number of Connected Components in an Undirected Graph', 'titleSlug': 'number-of-connected-components-in-an-undirected-graph', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Wiggle Sort II', 'titleSlug': 'wiggle-sort-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Quickselect', 'slug': 'quickselect'}]}
{'title': 'Maximum Size Subarray Sum Equals k', 'titleSlug': 'maximum-size-subarray-sum-equals-k', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Power of Three', 'titleSlug': 'power-of-three', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Recursion', 'slug': 'recursion'}]}
{'title': 'Count of Range Sum', 'titleSlug': 'count-of-range-sum', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Merge Sort', 'slug': 'merge-sort'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Odd Even Linked List', 'titleSlug': 'odd-even-linked-list', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}]}
{'title': 'Longest Increasing Path in a Matrix', 'titleSlug': 'longest-increasing-path-in-a-matrix', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Topological Sort', 'slug': 'topological-sort'}, {'name': 'Memoization', 'slug': 'memoization'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Patching Array', 'titleSlug': 'patching-array', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Verify Preorder Serialization of a Binary Tree', 'titleSlug': 'verify-preorder-serialization-of-a-binary-tree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Reconstruct Itinerary', 'titleSlug': 'reconstruct-itinerary', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Eulerian Circuit', 'slug': 'eulerian-circuit'}]}
{'title': 'Largest BST Subtree', 'titleSlug': 'largest-bst-subtree', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Increasing Triplet Subsequence', 'titleSlug': 'increasing-triplet-subsequence', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Self Crossing', 'titleSlug': 'self-crossing', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Geometry', 'slug': 'geometry'}]}
{'title': 'Palindrome Pairs', 'titleSlug': 'palindrome-pairs', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Trie', 'slug': 'trie'}]}
{'title': 'House Robber III', 'titleSlug': 'house-robber-iii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Counting Bits', 'titleSlug': 'counting-bits', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Nested List Weight Sum', 'titleSlug': 'nested-list-weight-sum', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}]}
{'title': 'Longest Substring with At Most K Distinct Characters', 'titleSlug': 'longest-substring-with-at-most-k-distinct-characters', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Flatten Nested List Iterator', 'titleSlug': 'flatten-nested-list-iterator', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Stack', 'slug': 'stack'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Iterator', 'slug': 'iterator'}]}
{'title': 'Power of Four', 'titleSlug': 'power-of-four', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Recursion', 'slug': 'recursion'}]}
{'title': 'Integer Break', 'titleSlug': 'integer-break', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Reverse String', 'titleSlug': 'reverse-string', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Reverse Vowels of a String', 'titleSlug': 'reverse-vowels-of-a-string', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Moving Average from Data Stream', 'titleSlug': 'moving-average-from-data-stream', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Data Stream', 'slug': 'data-stream'}]}
{'title': 'Top K Frequent Elements', 'titleSlug': 'top-k-frequent-elements', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Bucket Sort', 'slug': 'bucket-sort'}, {'name': 'Counting', 'slug': 'counting'}, {'name': 'Quickselect', 'slug': 'quickselect'}]}
{'title': 'Design Tic-Tac-Toe', 'titleSlug': 'design-tic-tac-toe', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Intersection of Two Arrays', 'titleSlug': 'intersection-of-two-arrays', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Intersection of Two Arrays II', 'titleSlug': 'intersection-of-two-arrays-ii', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Android Unlock Patterns', 'titleSlug': 'android-unlock-patterns', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Data Stream as Disjoint Intervals', 'titleSlug': 'data-stream-as-disjoint-intervals', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Design Snake Game', 'titleSlug': 'design-snake-game', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Russian Doll Envelopes', 'titleSlug': 'russian-doll-envelopes', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Design Twitter', 'titleSlug': 'design-twitter', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Line Reflection', 'titleSlug': 'line-reflection', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}]}
{'title': 'Count Numbers with Unique Digits', 'titleSlug': 'count-numbers-with-unique-digits', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Backtracking', 'slug': 'backtracking'}]}
{'title': 'Rearrange String k Distance Apart', 'titleSlug': 'rearrange-string-k-distance-apart', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Logger Rate Limiter', 'titleSlug': 'logger-rate-limiter', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Data Stream', 'slug': 'data-stream'}]}
{'title': 'Sort Transformed Array', 'titleSlug': 'sort-transformed-array', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Bomb Enemy', 'titleSlug': 'bomb-enemy', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Design Hit Counter', 'titleSlug': 'design-hit-counter', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Data Stream', 'slug': 'data-stream'}]}
{'title': 'Max Sum of Rectangle No Larger Than K', 'titleSlug': 'max-sum-of-rectangle-no-larger-than-k', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Nested List Weight Sum II', 'titleSlug': 'nested-list-weight-sum-ii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Stack', 'slug': 'stack'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}]}
{'title': 'Water and Jug Problem', 'titleSlug': 'water-and-jug-problem', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}]}
{'title': 'Find Leaves of Binary Tree', 'titleSlug': 'find-leaves-of-binary-tree', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Valid Perfect Square', 'titleSlug': 'valid-perfect-square', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Largest Divisible Subset', 'titleSlug': 'largest-divisible-subset', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Plus One Linked List', 'titleSlug': 'plus-one-linked-list', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Math', 'slug': 'math'}]}
{'title': 'Range Addition', 'titleSlug': 'range-addition', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Sum of Two Integers', 'titleSlug': 'sum-of-two-integers', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Super Pow', 'titleSlug': 'super-pow', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}]}
{'title': 'Find K Pairs with Smallest Sums', 'titleSlug': 'find-k-pairs-with-smallest-sums', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Guess Number Higher or Lower', 'titleSlug': 'guess-number-higher-or-lower', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Interactive', 'slug': 'interactive'}]}
{'title': 'Guess Number Higher or Lower II', 'titleSlug': 'guess-number-higher-or-lower-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Game Theory', 'slug': 'game-theory'}]}
{'title': 'Wiggle Subsequence', 'titleSlug': 'wiggle-subsequence', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Combination Sum IV', 'titleSlug': 'combination-sum-iv', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Kth Smallest Element in a Sorted Matrix', 'titleSlug': 'kth-smallest-element-in-a-sorted-matrix', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Design Phone Directory', 'titleSlug': 'design-phone-directory', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Queue', 'slug': 'queue'}]}
{'title': 'Insert Delete GetRandom O(1)', 'titleSlug': 'insert-delete-getrandom-o1', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Randomized', 'slug': 'randomized'}]}
{'title': 'Insert Delete GetRandom O(1) - Duplicates allowed', 'titleSlug': 'insert-delete-getrandom-o1-duplicates-allowed', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Randomized', 'slug': 'randomized'}]}
{'title': 'Linked List Random Node', 'titleSlug': 'linked-list-random-node', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Reservoir Sampling', 'slug': 'reservoir-sampling'}, {'name': 'Randomized', 'slug': 'randomized'}]}
{'title': 'Ransom Note', 'titleSlug': 'ransom-note', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Shuffle an Array', 'titleSlug': 'shuffle-an-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Randomized', 'slug': 'randomized'}]}
{'title': 'Mini Parser', 'titleSlug': 'mini-parser', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}]}
{'title': 'Lexicographical Numbers', 'titleSlug': 'lexicographical-numbers', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Trie', 'slug': 'trie'}]}
{'title': 'First Unique Character in a String', 'titleSlug': 'first-unique-character-in-a-string', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Longest Absolute File Path', 'titleSlug': 'longest-absolute-file-path', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}]}
{'title': 'Find the Difference', 'titleSlug': 'find-the-difference', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Elimination Game', 'titleSlug': 'elimination-game', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Recursion', 'slug': 'recursion'}]}
{'title': 'Perfect Rectangle', 'titleSlug': 'perfect-rectangle', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Geometry', 'slug': 'geometry'}, {'name': 'Line Sweep', 'slug': 'line-sweep'}]}
{'title': 'Is Subsequence', 'titleSlug': 'is-subsequence', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'UTF-8 Validation', 'titleSlug': 'utf-8-validation', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Decode String', 'titleSlug': 'decode-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Recursion', 'slug': 'recursion'}]}
{'title': 'Longest Substring with At Least K Repeating Characters', 'titleSlug': 'longest-substring-with-at-least-k-repeating-characters', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Rotate Function', 'titleSlug': 'rotate-function', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Integer Replacement', 'titleSlug': 'integer-replacement', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Memoization', 'slug': 'memoization'}]}
{'title': 'Random Pick Index', 'titleSlug': 'random-pick-index', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Reservoir Sampling', 'slug': 'reservoir-sampling'}, {'name': 'Randomized', 'slug': 'randomized'}]}
{'title': 'Evaluate Division', 'titleSlug': 'evaluate-division', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Shortest Path', 'slug': 'shortest-path'}]}
{'title': 'Nth Digit', 'titleSlug': 'nth-digit', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Binary Watch', 'titleSlug': 'binary-watch', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Remove K Digits', 'titleSlug': 'remove-k-digits', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Frog Jump', 'titleSlug': 'frog-jump', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Sum of Left Leaves', 'titleSlug': 'sum-of-left-leaves', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Convert a Number to Hexadecimal', 'titleSlug': 'convert-a-number-to-hexadecimal', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Queue Reconstruction by Height', 'titleSlug': 'queue-reconstruction-by-height', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Trapping Rain Water II', 'titleSlug': 'trapping-rain-water-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Valid Word Abbreviation', 'titleSlug': 'valid-word-abbreviation', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Longest Palindrome', 'titleSlug': 'longest-palindrome', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Split Array Largest Sum', 'titleSlug': 'split-array-largest-sum', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Minimum Unique Word Abbreviation', 'titleSlug': 'minimum-unique-word-abbreviation', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Fizz Buzz', 'titleSlug': 'fizz-buzz', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Arithmetic Slices', 'titleSlug': 'arithmetic-slices', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Third Maximum Number', 'titleSlug': 'third-maximum-number', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Add Strings', 'titleSlug': 'add-strings', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Partition Equal Subset Sum', 'titleSlug': 'partition-equal-subset-sum', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Pacific Atlantic Water Flow', 'titleSlug': 'pacific-atlantic-water-flow', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Sentence Screen Fitting', 'titleSlug': 'sentence-screen-fitting', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Battleships in a Board', 'titleSlug': 'battleships-in-a-board', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Strong Password Checker', 'titleSlug': 'strong-password-checker', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Maximum XOR of Two Numbers in an Array', 'titleSlug': 'maximum-xor-of-two-numbers-in-an-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Trie', 'slug': 'trie'}]}
{'title': 'Valid Word Square', 'titleSlug': 'valid-word-square', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Reconstruct Original Digits from English', 'titleSlug': 'reconstruct-original-digits-from-english', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Longest Repeating Character Replacement', 'titleSlug': 'longest-repeating-character-replacement', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Word Squares', 'titleSlug': 'word-squares', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Trie', 'slug': 'trie'}]}
{'title': 'Convert Binary Search Tree to Sorted Doubly Linked List', 'titleSlug': 'convert-binary-search-tree-to-sorted-doubly-linked-list', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}, {'name': 'Doubly-Linked List', 'slug': 'doubly-linked-list'}]}
{'title': 'Construct Quad Tree', 'titleSlug': 'construct-quad-tree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Serialize and Deserialize N-ary Tree', 'titleSlug': 'serialize-and-deserialize-n-ary-tree', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}]}
{'title': 'N-ary Tree Level Order Traversal', 'titleSlug': 'n-ary-tree-level-order-traversal', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}]}
{'title': 'Flatten a Multilevel Doubly Linked List', 'titleSlug': 'flatten-a-multilevel-doubly-linked-list', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Doubly-Linked List', 'slug': 'doubly-linked-list'}]}
{'title': 'Encode N-ary Tree to Binary Tree', 'titleSlug': 'encode-n-ary-tree-to-binary-tree', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'All O`one Data Structure', 'titleSlug': 'all-oone-data-structure', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Doubly-Linked List', 'slug': 'doubly-linked-list'}]}
{'title': 'Minimum Genetic Mutation', 'titleSlug': 'minimum-genetic-mutation', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}]}
{'title': 'Number of Segments in a String', 'titleSlug': 'number-of-segments-in-a-string', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Non-overlapping Intervals', 'titleSlug': 'non-overlapping-intervals', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Find Right Interval', 'titleSlug': 'find-right-interval', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Path Sum III', 'titleSlug': 'path-sum-iii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Find All Anagrams in a String', 'titleSlug': 'find-all-anagrams-in-a-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Ternary Expression Parser', 'titleSlug': 'ternary-expression-parser', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Recursion', 'slug': 'recursion'}]}
{'title': 'K-th Smallest in Lexicographical Order', 'titleSlug': 'k-th-smallest-in-lexicographical-order', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Trie', 'slug': 'trie'}]}
{'title': 'Arranging Coins', 'titleSlug': 'arranging-coins', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Find All Duplicates in an Array', 'titleSlug': 'find-all-duplicates-in-an-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}]}
{'title': 'String Compression', 'titleSlug': 'string-compression', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Sequence Reconstruction', 'titleSlug': 'sequence-reconstruction', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Topological Sort', 'slug': 'topological-sort'}]}
{'title': 'Add Two Numbers II', 'titleSlug': 'add-two-numbers-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Stack', 'slug': 'stack'}]}
{'title': 'Arithmetic Slices II - Subsequence', 'titleSlug': 'arithmetic-slices-ii-subsequence', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Number of Boomerangs', 'titleSlug': 'number-of-boomerangs', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}]}
{'title': 'Find All Numbers Disappeared in an Array', 'titleSlug': 'find-all-numbers-disappeared-in-an-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}]}
{'title': 'Serialize and Deserialize BST', 'titleSlug': 'serialize-and-deserialize-bst', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Delete Node in a BST', 'titleSlug': 'delete-node-in-a-bst', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Sort Characters By Frequency', 'titleSlug': 'sort-characters-by-frequency', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Bucket Sort', 'slug': 'bucket-sort'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Minimum Number of Arrows to Burst Balloons', 'titleSlug': 'minimum-number-of-arrows-to-burst-balloons', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Minimum Moves to Equal Array Elements', 'titleSlug': 'minimum-moves-to-equal-array-elements', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}]}
{'title': '4Sum II', 'titleSlug': '4sum-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}]}
{'title': 'Assign Cookies', 'titleSlug': 'assign-cookies', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': '132 Pattern', 'titleSlug': '132-pattern', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Circular Array Loop', 'titleSlug': 'circular-array-loop', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}]}
{'title': 'Poor Pigs', 'titleSlug': 'poor-pigs', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}]}
{'title': 'Repeated Substring Pattern', 'titleSlug': 'repeated-substring-pattern', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'String Matching', 'slug': 'string-matching'}]}
{'title': 'LFU Cache', 'titleSlug': 'lfu-cache', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Doubly-Linked List', 'slug': 'doubly-linked-list'}]}
{'title': 'Hamming Distance', 'titleSlug': 'hamming-distance', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Minimum Moves to Equal Array Elements II', 'titleSlug': 'minimum-moves-to-equal-array-elements-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Island Perimeter', 'titleSlug': 'island-perimeter', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Can I Win', 'titleSlug': 'can-i-win', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Memoization', 'slug': 'memoization'}, {'name': 'Game Theory', 'slug': 'game-theory'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Optimal Account Balancing', 'titleSlug': 'optimal-account-balancing', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Count The Repetitions', 'titleSlug': 'count-the-repetitions', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Unique Substrings in Wraparound String', 'titleSlug': 'unique-substrings-in-wraparound-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Validate IP Address', 'titleSlug': 'validate-ip-address', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Convex Polygon', 'titleSlug': 'convex-polygon', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Geometry', 'slug': 'geometry'}]}
{'title': 'Implement Rand10() Using Rand7()', 'titleSlug': 'implement-rand10-using-rand7', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Rejection Sampling', 'slug': 'rejection-sampling'}, {'name': 'Randomized', 'slug': 'randomized'}, {'name': 'Probability and Statistics', 'slug': 'probability-and-statistics'}]}
{'title': 'Encode String with Shortest Length', 'titleSlug': 'encode-string-with-shortest-length', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Concatenated Words', 'titleSlug': 'concatenated-words', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Trie', 'slug': 'trie'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Matchsticks to Square', 'titleSlug': 'matchsticks-to-square', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Ones and Zeroes', 'titleSlug': 'ones-and-zeroes', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Heaters', 'titleSlug': 'heaters', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Number Complement', 'titleSlug': 'number-complement', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Total Hamming Distance', 'titleSlug': 'total-hamming-distance', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Generate Random Point in a Circle', 'titleSlug': 'generate-random-point-in-a-circle', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Geometry', 'slug': 'geometry'}, {'name': 'Rejection Sampling', 'slug': 'rejection-sampling'}, {'name': 'Randomized', 'slug': 'randomized'}]}
{'title': 'Largest Palindrome Product', 'titleSlug': 'largest-palindrome-product', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Sliding Window Median', 'titleSlug': 'sliding-window-median', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Magical String', 'titleSlug': 'magical-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'License Key Formatting', 'titleSlug': 'license-key-formatting', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Smallest Good Base', 'titleSlug': 'smallest-good-base', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Find Permutation', 'titleSlug': 'find-permutation', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Max Consecutive Ones', 'titleSlug': 'max-consecutive-ones', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Predict the Winner', 'titleSlug': 'predict-the-winner', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Recursion', 'slug': 'recursion'}, {'name': 'Game Theory', 'slug': 'game-theory'}]}
{'title': 'Max Consecutive Ones II', 'titleSlug': 'max-consecutive-ones-ii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Zuma Game', 'titleSlug': 'zuma-game', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Memoization', 'slug': 'memoization'}]}
{'title': 'Robot Room Cleaner', 'titleSlug': 'robot-room-cleaner', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Interactive', 'slug': 'interactive'}]}
{'title': 'The Maze', 'titleSlug': 'the-maze', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Non-decreasing Subsequences', 'titleSlug': 'non-decreasing-subsequences', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Construct the Rectangle', 'titleSlug': 'construct-the-rectangle', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Reverse Pairs', 'titleSlug': 'reverse-pairs', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Merge Sort', 'slug': 'merge-sort'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Target Sum', 'titleSlug': 'target-sum', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Backtracking', 'slug': 'backtracking'}]}
{'title': 'Teemo Attacking', 'titleSlug': 'teemo-attacking', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Next Greater Element I', 'titleSlug': 'next-greater-element-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Random Point in Non-overlapping Rectangles', 'titleSlug': 'random-point-in-non-overlapping-rectangles', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Reservoir Sampling', 'slug': 'reservoir-sampling'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}, {'name': 'Randomized', 'slug': 'randomized'}]}
{'title': 'Diagonal Traverse', 'titleSlug': 'diagonal-traverse', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'The Maze III', 'titleSlug': 'the-maze-iii', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Shortest Path', 'slug': 'shortest-path'}]}
{'title': 'Keyboard Row', 'titleSlug': 'keyboard-row', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Find Mode in Binary Search Tree', 'titleSlug': 'find-mode-in-binary-search-tree', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'IPO', 'titleSlug': 'ipo', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Next Greater Element II', 'titleSlug': 'next-greater-element-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Base 7', 'titleSlug': 'base-7', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'The Maze II', 'titleSlug': 'the-maze-ii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Shortest Path', 'slug': 'shortest-path'}]}
{'title': 'Relative Ranks', 'titleSlug': 'relative-ranks', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Perfect Number', 'titleSlug': 'perfect-number', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Most Frequent Subtree Sum', 'titleSlug': 'most-frequent-subtree-sum', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Fibonacci Number', 'titleSlug': 'fibonacci-number', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Recursion', 'slug': 'recursion'}, {'name': 'Memoization', 'slug': 'memoization'}]}
{'title': 'Inorder Successor in BST II', 'titleSlug': 'inorder-successor-in-bst-ii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Game Play Analysis I', 'titleSlug': 'game-play-analysis-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Game Play Analysis II', 'titleSlug': 'game-play-analysis-ii', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Find Bottom Left Tree Value', 'titleSlug': 'find-bottom-left-tree-value', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Freedom Trail', 'titleSlug': 'freedom-trail', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}]}
{'title': 'Find Largest Value in Each Tree Row', 'titleSlug': 'find-largest-value-in-each-tree-row', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Longest Palindromic Subsequence', 'titleSlug': 'longest-palindromic-subsequence', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Super Washing Machines', 'titleSlug': 'super-washing-machines', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Coin Change II', 'titleSlug': 'coin-change-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Random Flip Matrix', 'titleSlug': 'random-flip-matrix', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Reservoir Sampling', 'slug': 'reservoir-sampling'}, {'name': 'Randomized', 'slug': 'randomized'}]}
{'title': 'Detect Capital', 'titleSlug': 'detect-capital', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Longest Uncommon Subsequence I', 'titleSlug': 'longest-uncommon-subsequence-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Longest Uncommon Subsequence II', 'titleSlug': 'longest-uncommon-subsequence-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Continuous Subarray Sum', 'titleSlug': 'continuous-subarray-sum', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Longest Word in Dictionary through Deleting', 'titleSlug': 'longest-word-in-dictionary-through-deleting', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Contiguous Array', 'titleSlug': 'contiguous-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Beautiful Arrangement', 'titleSlug': 'beautiful-arrangement', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Word Abbreviation', 'titleSlug': 'word-abbreviation', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Trie', 'slug': 'trie'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Random Pick with Weight', 'titleSlug': 'random-pick-with-weight', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}, {'name': 'Randomized', 'slug': 'randomized'}]}
{'title': 'Minesweeper', 'titleSlug': 'minesweeper', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Minimum Absolute Difference in BST', 'titleSlug': 'minimum-absolute-difference-in-bst', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Lonely Pixel I', 'titleSlug': 'lonely-pixel-i', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'K-diff Pairs in an Array', 'titleSlug': 'k-diff-pairs-in-an-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Lonely Pixel II', 'titleSlug': 'lonely-pixel-ii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Game Play Analysis III', 'titleSlug': 'game-play-analysis-iii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Encode and Decode TinyURL', 'titleSlug': 'encode-and-decode-tinyurl', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Hash Function', 'slug': 'hash-function'}]}
{'title': 'Construct Binary Tree from String', 'titleSlug': 'construct-binary-tree-from-string', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Complex Number Multiplication', 'titleSlug': 'complex-number-multiplication', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Convert BST to Greater Tree', 'titleSlug': 'convert-bst-to-greater-tree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Minimum Time Difference', 'titleSlug': 'minimum-time-difference', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Single Element in a Sorted Array', 'titleSlug': 'single-element-in-a-sorted-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Reverse String II', 'titleSlug': 'reverse-string-ii', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}]}
{'title': '01 Matrix', 'titleSlug': '01-matrix', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Diameter of Binary Tree', 'titleSlug': 'diameter-of-binary-tree', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Output Contest Matches', 'titleSlug': 'output-contest-matches', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Recursion', 'slug': 'recursion'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Boundary of Binary Tree', 'titleSlug': 'boundary-of-binary-tree', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Remove Boxes', 'titleSlug': 'remove-boxes', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Memoization', 'slug': 'memoization'}]}
{'title': 'Number of Provinces', 'titleSlug': 'number-of-provinces', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Split Array with Equal Sum', 'titleSlug': 'split-array-with-equal-sum', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Binary Tree Longest Consecutive Sequence II', 'titleSlug': 'binary-tree-longest-consecutive-sequence-ii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Game Play Analysis IV', 'titleSlug': 'game-play-analysis-iv', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Student Attendance Record I', 'titleSlug': 'student-attendance-record-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Student Attendance Record II', 'titleSlug': 'student-attendance-record-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Optimal Division', 'titleSlug': 'optimal-division', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Brick Wall', 'titleSlug': 'brick-wall', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}]}
{'title': 'Split Concatenated Strings', 'titleSlug': 'split-concatenated-strings', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Next Greater Element III', 'titleSlug': 'next-greater-element-iii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Reverse Words in a String III', 'titleSlug': 'reverse-words-in-a-string-iii', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Logical OR of Two Binary Grids Represented as Quad-Trees', 'titleSlug': 'logical-or-of-two-binary-grids-represented-as-quad-trees', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Tree', 'slug': 'tree'}]}
{'title': 'Maximum Depth of N-ary Tree', 'titleSlug': 'maximum-depth-of-n-ary-tree', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}]}
{'title': 'Subarray Sum Equals K', 'titleSlug': 'subarray-sum-equals-k', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Array Partition', 'titleSlug': 'array-partition', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Counting Sort', 'slug': 'counting-sort'}]}
{'title': 'Longest Line of Consecutive One in Matrix', 'titleSlug': 'longest-line-of-consecutive-one-in-matrix', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Binary Tree Tilt', 'titleSlug': 'binary-tree-tilt', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Find the Closest Palindrome', 'titleSlug': 'find-the-closest-palindrome', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Array Nesting', 'titleSlug': 'array-nesting', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}]}
{'title': 'Reshape the Matrix', 'titleSlug': 'reshape-the-matrix', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Permutation in String', 'titleSlug': 'permutation-in-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Maximum Vacation Days', 'titleSlug': 'maximum-vacation-days', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Median Employee Salary', 'titleSlug': 'median-employee-salary', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Managers with at Least 5 Direct Reports', 'titleSlug': 'managers-with-at-least-5-direct-reports', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Find Median Given Frequency of Numbers', 'titleSlug': 'find-median-given-frequency-of-numbers', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Subtree of Another Tree', 'titleSlug': 'subtree-of-another-tree', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'String Matching', 'slug': 'string-matching'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}, {'name': 'Hash Function', 'slug': 'hash-function'}]}
{'title': 'Squirrel Simulation', 'titleSlug': 'squirrel-simulation', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}]}
{'title': 'Winning Candidate', 'titleSlug': 'winning-candidate', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Distribute Candies', 'titleSlug': 'distribute-candies', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}]}
{'title': 'Out of Boundary Paths', 'titleSlug': 'out-of-boundary-paths', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Employee Bonus', 'titleSlug': 'employee-bonus', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Get Highest Answer Rate Question', 'titleSlug': 'get-highest-answer-rate-question', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Find Cumulative Salary of an Employee', 'titleSlug': 'find-cumulative-salary-of-an-employee', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Count Student Number in Departments', 'titleSlug': 'count-student-number-in-departments', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Shortest Unsorted Continuous Subarray', 'titleSlug': 'shortest-unsorted-continuous-subarray', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Kill Process', 'titleSlug': 'kill-process', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}]}
{'title': 'Delete Operation for Two Strings', 'titleSlug': 'delete-operation-for-two-strings', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Find Customer Referee', 'titleSlug': 'find-customer-referee', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Investments in 2016', 'titleSlug': 'investments-in-2016', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Customer Placing the Largest Number of Orders', 'titleSlug': 'customer-placing-the-largest-number-of-orders', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Erect the Fence', 'titleSlug': 'erect-the-fence', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Geometry', 'slug': 'geometry'}]}
{'title': 'Design In-Memory File System', 'titleSlug': 'design-in-memory-file-system', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Trie', 'slug': 'trie'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'N-ary Tree Preorder Traversal', 'titleSlug': 'n-ary-tree-preorder-traversal', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Stack', 'slug': 'stack'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}]}
{'title': 'N-ary Tree Postorder Traversal', 'titleSlug': 'n-ary-tree-postorder-traversal', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Stack', 'slug': 'stack'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}]}
{'title': 'Tag Validator', 'titleSlug': 'tag-validator', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}]}
{'title': 'Fraction Addition and Subtraction', 'titleSlug': 'fraction-addition-and-subtraction', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Valid Square', 'titleSlug': 'valid-square', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Geometry', 'slug': 'geometry'}]}
{'title': 'Longest Harmonious Subsequence', 'titleSlug': 'longest-harmonious-subsequence', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Big Countries', 'titleSlug': 'big-countries', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Classes With at Least 5 Students', 'titleSlug': 'classes-with-at-least-5-students', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Friend Requests I: Overall Acceptance Rate', 'titleSlug': 'friend-requests-i-overall-acceptance-rate', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Range Addition II', 'titleSlug': 'range-addition-ii', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}]}
{'title': 'Minimum Index Sum of Two Lists', 'titleSlug': 'minimum-index-sum-of-two-lists', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Non-negative Integers without Consecutive Ones', 'titleSlug': 'non-negative-integers-without-consecutive-ones', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Human Traffic of Stadium', 'titleSlug': 'human-traffic-of-stadium', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Friend Requests II: Who Has the Most Friends', 'titleSlug': 'friend-requests-ii-who-has-the-most-friends', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Consecutive Available Seats', 'titleSlug': 'consecutive-available-seats', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Design Compressed String Iterator', 'titleSlug': 'design-compressed-string-iterator', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Iterator', 'slug': 'iterator'}]}
{'title': 'Can Place Flowers', 'titleSlug': 'can-place-flowers', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Construct String from Binary Tree', 'titleSlug': 'construct-string-from-binary-tree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Sales Person', 'titleSlug': 'sales-person', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Tree Node', 'titleSlug': 'tree-node', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Find Duplicate File in System', 'titleSlug': 'find-duplicate-file-in-system', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Triangle Judgement', 'titleSlug': 'triangle-judgement', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Valid Triangle Number', 'titleSlug': 'valid-triangle-number', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Shortest Distance in a Plane', 'titleSlug': 'shortest-distance-in-a-plane', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Shortest Distance in a Line', 'titleSlug': 'shortest-distance-in-a-line', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Second Degree Follower', 'titleSlug': 'second-degree-follower', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Average Salary: Departments VS Company', 'titleSlug': 'average-salary-departments-vs-company', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Add Bold Tag in String', 'titleSlug': 'add-bold-tag-in-string', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Trie', 'slug': 'trie'}, {'name': 'String Matching', 'slug': 'string-matching'}]}
{'title': 'Merge Two Binary Trees', 'titleSlug': 'merge-two-binary-trees', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Students Report By Geography', 'titleSlug': 'students-report-by-geography', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Biggest Single Number', 'titleSlug': 'biggest-single-number', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Not Boring Movies', 'titleSlug': 'not-boring-movies', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Task Scheduler', 'titleSlug': 'task-scheduler', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Design Circular Queue', 'titleSlug': 'design-circular-queue', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Queue', 'slug': 'queue'}]}
{'title': 'Add One Row to Tree', 'titleSlug': 'add-one-row-to-tree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Maximum Distance in Arrays', 'titleSlug': 'maximum-distance-in-arrays', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Minimum Factorization', 'titleSlug': 'minimum-factorization', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Exchange Seats', 'titleSlug': 'exchange-seats', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Swap Salary', 'titleSlug': 'swap-salary', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Maximum Product of Three Numbers', 'titleSlug': 'maximum-product-of-three-numbers', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'K Inverse Pairs Array', 'titleSlug': 'k-inverse-pairs-array', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Course Schedule III', 'titleSlug': 'course-schedule-iii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Design Excel Sum Formula', 'titleSlug': 'design-excel-sum-formula', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Topological Sort', 'slug': 'topological-sort'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Smallest Range Covering Elements from K Lists', 'titleSlug': 'smallest-range-covering-elements-from-k-lists', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Sum of Square Numbers', 'titleSlug': 'sum-of-square-numbers', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Find the Derangement of An Array', 'titleSlug': 'find-the-derangement-of-an-array', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}]}
{'title': 'Design Log Storage System', 'titleSlug': 'design-log-storage-system', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Exclusive Time of Functions', 'titleSlug': 'exclusive-time-of-functions', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Stack', 'slug': 'stack'}]}
{'title': 'Average of Levels in Binary Tree', 'titleSlug': 'average-of-levels-in-binary-tree', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Shopping Offers', 'titleSlug': 'shopping-offers', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Memoization', 'slug': 'memoization'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Decode Ways II', 'titleSlug': 'decode-ways-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Solve the Equation', 'titleSlug': 'solve-the-equation', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Design Circular Deque', 'titleSlug': 'design-circular-deque', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Queue', 'slug': 'queue'}]}
{'title': 'Design Search Autocomplete System', 'titleSlug': 'design-search-autocomplete-system', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Trie', 'slug': 'trie'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Data Stream', 'slug': 'data-stream'}]}
{'title': 'Maximum Average Subarray I', 'titleSlug': 'maximum-average-subarray-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Maximum Average Subarray II', 'titleSlug': 'maximum-average-subarray-ii', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Set Mismatch', 'titleSlug': 'set-mismatch', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Maximum Length of Pair Chain', 'titleSlug': 'maximum-length-of-pair-chain', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Palindromic Substrings', 'titleSlug': 'palindromic-substrings', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Replace Words', 'titleSlug': 'replace-words', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Trie', 'slug': 'trie'}]}
{'title': 'Dota2 Senate', 'titleSlug': 'dota2-senate', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Queue', 'slug': 'queue'}]}
{'title': '2 Keys Keyboard', 'titleSlug': '2-keys-keyboard', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': '4 Keys Keyboard', 'titleSlug': '4-keys-keyboard', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Find Duplicate Subtrees', 'titleSlug': 'find-duplicate-subtrees', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Two Sum IV - Input is a BST', 'titleSlug': 'two-sum-iv-input-is-a-bst', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Maximum Binary Tree', 'titleSlug': 'maximum-binary-tree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Print Binary Tree', 'titleSlug': 'print-binary-tree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Coin Path', 'titleSlug': 'coin-path', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Robot Return to Origin', 'titleSlug': 'robot-return-to-origin', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Find K Closest Elements', 'titleSlug': 'find-k-closest-elements', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Split Array into Consecutive Subsequences', 'titleSlug': 'split-array-into-consecutive-subsequences', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Remove 9', 'titleSlug': 'remove-9', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Image Smoother', 'titleSlug': 'image-smoother', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Maximum Width of Binary Tree', 'titleSlug': 'maximum-width-of-binary-tree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Equal Tree Partition', 'titleSlug': 'equal-tree-partition', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Strange Printer', 'titleSlug': 'strange-printer', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Non-decreasing Array', 'titleSlug': 'non-decreasing-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Path Sum IV', 'titleSlug': 'path-sum-iv', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Beautiful Arrangement II', 'titleSlug': 'beautiful-arrangement-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}]}
{'title': 'Kth Smallest Number in Multiplication Table', 'titleSlug': 'kth-smallest-number-in-multiplication-table', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Trim a Binary Search Tree', 'titleSlug': 'trim-a-binary-search-tree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Maximum Swap', 'titleSlug': 'maximum-swap', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Second Minimum Node In a Binary Tree', 'titleSlug': 'second-minimum-node-in-a-binary-tree', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Bulb Switcher II', 'titleSlug': 'bulb-switcher-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}]}
{'title': 'Number of Longest Increasing Subsequence', 'titleSlug': 'number-of-longest-increasing-subsequence', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}]}
{'title': 'Longest Continuous Increasing Subsequence', 'titleSlug': 'longest-continuous-increasing-subsequence', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Cut Off Trees for Golf Event', 'titleSlug': 'cut-off-trees-for-golf-event', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Implement Magic Dictionary', 'titleSlug': 'implement-magic-dictionary', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Trie', 'slug': 'trie'}]}
{'title': 'Map Sum Pairs', 'titleSlug': 'map-sum-pairs', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Trie', 'slug': 'trie'}]}
{'title': 'Valid Parenthesis String', 'titleSlug': 'valid-parenthesis-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': '24 Game', 'titleSlug': '24-game', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Backtracking', 'slug': 'backtracking'}]}
{'title': 'Valid Palindrome II', 'titleSlug': 'valid-palindrome-ii', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Next Closest Time', 'titleSlug': 'next-closest-time', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Baseball Game', 'titleSlug': 'baseball-game', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'K Empty Slots', 'titleSlug': 'k-empty-slots', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}, {'name': 'Monotonic Queue', 'slug': 'monotonic-queue'}]}
{'title': 'Redundant Connection', 'titleSlug': 'redundant-connection', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Redundant Connection II', 'titleSlug': 'redundant-connection-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Repeated String Match', 'titleSlug': 'repeated-string-match', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'String Matching', 'slug': 'string-matching'}]}
{'title': 'Longest Univalue Path', 'titleSlug': 'longest-univalue-path', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Knight Probability in Chessboard', 'titleSlug': 'knight-probability-in-chessboard', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Maximum Sum of 3 Non-Overlapping Subarrays', 'titleSlug': 'maximum-sum-of-3-non-overlapping-subarrays', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Employee Importance', 'titleSlug': 'employee-importance', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}]}
{'title': 'Stickers to Spell Word', 'titleSlug': 'stickers-to-spell-word', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Memoization', 'slug': 'memoization'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Top K Frequent Words', 'titleSlug': 'top-k-frequent-words', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Trie', 'slug': 'trie'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Bucket Sort', 'slug': 'bucket-sort'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Binary Number with Alternating Bits', 'titleSlug': 'binary-number-with-alternating-bits', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Number of Distinct Islands', 'titleSlug': 'number-of-distinct-islands', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Hash Function', 'slug': 'hash-function'}]}
{'title': 'Max Area of Island', 'titleSlug': 'max-area-of-island', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Count Binary Substrings', 'titleSlug': 'count-binary-substrings', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Degree of an Array', 'titleSlug': 'degree-of-an-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}]}
{'title': 'Partition to K Equal Sum Subsets', 'titleSlug': 'partition-to-k-equal-sum-subsets', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Memoization', 'slug': 'memoization'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Falling Squares', 'titleSlug': 'falling-squares', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Search in a Binary Search Tree', 'titleSlug': 'search-in-a-binary-search-tree', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Insert into a Binary Search Tree', 'titleSlug': 'insert-into-a-binary-search-tree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Search in a Sorted Array of Unknown Size', 'titleSlug': 'search-in-a-sorted-array-of-unknown-size', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Interactive', 'slug': 'interactive'}]}
{'title': 'Kth Largest Element in a Stream', 'titleSlug': 'kth-largest-element-in-a-stream', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}, {'name': 'Data Stream', 'slug': 'data-stream'}]}
{'title': 'Binary Search', 'titleSlug': 'binary-search', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Design HashSet', 'titleSlug': 'design-hashset', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Hash Function', 'slug': 'hash-function'}]}
{'title': 'Design HashMap', 'titleSlug': 'design-hashmap', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Hash Function', 'slug': 'hash-function'}]}
{'title': 'Design Linked List', 'titleSlug': 'design-linked-list', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Design', 'slug': 'design'}]}
{'title': 'Insert into a Sorted Circular Linked List', 'titleSlug': 'insert-into-a-sorted-circular-linked-list', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}]}
{'title': 'To Lower Case', 'titleSlug': 'to-lower-case', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Random Pick with Blacklist', 'titleSlug': 'random-pick-with-blacklist', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Randomized', 'slug': 'randomized'}]}
{'title': 'Number of Distinct Islands II', 'titleSlug': 'number-of-distinct-islands-ii', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Hash Function', 'slug': 'hash-function'}]}
{'title': 'Minimum ASCII Delete Sum for Two Strings', 'titleSlug': 'minimum-ascii-delete-sum-for-two-strings', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Subarray Product Less Than K', 'titleSlug': 'subarray-product-less-than-k', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Best Time to Buy and Sell Stock with Transaction Fee', 'titleSlug': 'best-time-to-buy-and-sell-stock-with-transaction-fee', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Range Module', 'titleSlug': 'range-module', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Design', 'slug': 'design'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Max Stack', 'titleSlug': 'max-stack', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Doubly-Linked List', 'slug': 'doubly-linked-list'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': '1-bit and 2-bit Characters', 'titleSlug': '1-bit-and-2-bit-characters', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Maximum Length of Repeated Subarray', 'titleSlug': 'maximum-length-of-repeated-subarray', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Rolling Hash', 'slug': 'rolling-hash'}, {'name': 'Hash Function', 'slug': 'hash-function'}]}
{'title': 'Find K-th Smallest Pair Distance', 'titleSlug': 'find-k-th-smallest-pair-distance', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Longest Word in Dictionary', 'titleSlug': 'longest-word-in-dictionary', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Trie', 'slug': 'trie'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Accounts Merge', 'titleSlug': 'accounts-merge', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Remove Comments', 'titleSlug': 'remove-comments', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Candy Crush', 'titleSlug': 'candy-crush', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Find Pivot Index', 'titleSlug': 'find-pivot-index', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Split Linked List in Parts', 'titleSlug': 'split-linked-list-in-parts', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}]}
{'title': 'Number of Atoms', 'titleSlug': 'number-of-atoms', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Minimum Window Subsequence', 'titleSlug': 'minimum-window-subsequence', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Self Dividing Numbers', 'titleSlug': 'self-dividing-numbers', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'My Calendar I', 'titleSlug': 'my-calendar-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Count Different Palindromic Subsequences', 'titleSlug': 'count-different-palindromic-subsequences', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'My Calendar II', 'titleSlug': 'my-calendar-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'My Calendar III', 'titleSlug': 'my-calendar-iii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Flood Fill', 'titleSlug': 'flood-fill', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Sentence Similarity', 'titleSlug': 'sentence-similarity', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Asteroid Collision', 'titleSlug': 'asteroid-collision', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Parse Lisp Expression', 'titleSlug': 'parse-lisp-expression', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Recursion', 'slug': 'recursion'}]}
{'title': 'Sentence Similarity II', 'titleSlug': 'sentence-similarity-ii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}]}
{'title': 'Monotone Increasing Digits', 'titleSlug': 'monotone-increasing-digits', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Daily Temperatures', 'titleSlug': 'daily-temperatures', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Delete and Earn', 'titleSlug': 'delete-and-earn', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Cherry Pickup', 'titleSlug': 'cherry-pickup', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Closest Leaf in a Binary Tree', 'titleSlug': 'closest-leaf-in-a-binary-tree', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Network Delay Time', 'titleSlug': 'network-delay-time', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Shortest Path', 'slug': 'shortest-path'}]}
{'title': 'Find Smallest Letter Greater Than Target', 'titleSlug': 'find-smallest-letter-greater-than-target', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Prefix and Suffix Search', 'titleSlug': 'prefix-and-suffix-search', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Trie', 'slug': 'trie'}]}
{'title': 'Min Cost Climbing Stairs', 'titleSlug': 'min-cost-climbing-stairs', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Largest Number At Least Twice of Others', 'titleSlug': 'largest-number-at-least-twice-of-others', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Shortest Completing Word', 'titleSlug': 'shortest-completing-word', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Contain Virus', 'titleSlug': 'contain-virus', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Number Of Corner Rectangles', 'titleSlug': 'number-of-corner-rectangles', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'IP to CIDR', 'titleSlug': 'ip-to-cidr', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Open the Lock', 'titleSlug': 'open-the-lock', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}]}
{'title': 'Cracking the Safe', 'titleSlug': 'cracking-the-safe', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Eulerian Circuit', 'slug': 'eulerian-circuit'}]}
{'title': 'Reach a Number', 'titleSlug': 'reach-a-number', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Pour Water', 'titleSlug': 'pour-water', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Pyramid Transition Matrix', 'titleSlug': 'pyramid-transition-matrix', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}]}
{'title': 'Set Intersection Size At Least Two', 'titleSlug': 'set-intersection-size-at-least-two', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Bold Words in String', 'titleSlug': 'bold-words-in-string', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Trie', 'slug': 'trie'}, {'name': 'String Matching', 'slug': 'string-matching'}]}
{'title': 'Employee Free Time', 'titleSlug': 'employee-free-time', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Line Sweep', 'slug': 'line-sweep'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Find Anagram Mappings', 'titleSlug': 'find-anagram-mappings', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}]}
{'title': 'Special Binary String', 'titleSlug': 'special-binary-string', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Recursion', 'slug': 'recursion'}]}
{'title': 'Prime Number of Set Bits in Binary Representation', 'titleSlug': 'prime-number-of-set-bits-in-binary-representation', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Partition Labels', 'titleSlug': 'partition-labels', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Largest Plus Sign', 'titleSlug': 'largest-plus-sign', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Couples Holding Hands', 'titleSlug': 'couples-holding-hands', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Toeplitz Matrix', 'titleSlug': 'toeplitz-matrix', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Reorganize String', 'titleSlug': 'reorganize-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Max Chunks To Make Sorted II', 'titleSlug': 'max-chunks-to-make-sorted-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Max Chunks To Make Sorted', 'titleSlug': 'max-chunks-to-make-sorted', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Basic Calculator IV', 'titleSlug': 'basic-calculator-iv', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Recursion', 'slug': 'recursion'}]}
{'title': 'Jewels and Stones', 'titleSlug': 'jewels-and-stones', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Basic Calculator III', 'titleSlug': 'basic-calculator-iii', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Recursion', 'slug': 'recursion'}]}
{'title': 'Sliding Puzzle', 'titleSlug': 'sliding-puzzle', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Memoization', 'slug': 'memoization'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Minimize Max Distance to Gas Station', 'titleSlug': 'minimize-max-distance-to-gas-station', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Global and Local Inversions', 'titleSlug': 'global-and-local-inversions', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}]}
{'title': 'Split BST', 'titleSlug': 'split-bst', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Recursion', 'slug': 'recursion'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Swap Adjacent in LR String', 'titleSlug': 'swap-adjacent-in-lr-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Swim in Rising Water', 'titleSlug': 'swim-in-rising-water', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'K-th Symbol in Grammar', 'titleSlug': 'k-th-symbol-in-grammar', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Recursion', 'slug': 'recursion'}]}
{'title': 'Reaching Points', 'titleSlug': 'reaching-points', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Rabbits in Forest', 'titleSlug': 'rabbits-in-forest', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Transform to Chessboard', 'titleSlug': 'transform-to-chessboard', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Minimum Distance Between BST Nodes', 'titleSlug': 'minimum-distance-between-bst-nodes', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Letter Case Permutation', 'titleSlug': 'letter-case-permutation', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Is Graph Bipartite?', 'titleSlug': 'is-graph-bipartite', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'K-th Smallest Prime Fraction', 'titleSlug': 'k-th-smallest-prime-fraction', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Cheapest Flights Within K Stops', 'titleSlug': 'cheapest-flights-within-k-stops', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Shortest Path', 'slug': 'shortest-path'}]}
{'title': 'Rotated Digits', 'titleSlug': 'rotated-digits', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Escape The Ghosts', 'titleSlug': 'escape-the-ghosts', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}]}
{'title': 'Domino and Tromino Tiling', 'titleSlug': 'domino-and-tromino-tiling', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Custom Sort String', 'titleSlug': 'custom-sort-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Number of Matching Subsequences', 'titleSlug': 'number-of-matching-subsequences', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Trie', 'slug': 'trie'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Preimage Size of Factorial Zeroes Function', 'titleSlug': 'preimage-size-of-factorial-zeroes-function', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Valid Tic-Tac-Toe State', 'titleSlug': 'valid-tic-tac-toe-state', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Number of Subarrays with Bounded Maximum', 'titleSlug': 'number-of-subarrays-with-bounded-maximum', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}]}
{'title': 'Rotate String', 'titleSlug': 'rotate-string', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'String Matching', 'slug': 'string-matching'}]}
{'title': 'All Paths From Source to Target', 'titleSlug': 'all-paths-from-source-to-target', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Smallest Rotation with Highest Score', 'titleSlug': 'smallest-rotation-with-highest-score', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Champagne Tower', 'titleSlug': 'champagne-tower', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Similar RGB Color', 'titleSlug': 'similar-rgb-color', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Minimum Swaps To Make Sequences Increasing', 'titleSlug': 'minimum-swaps-to-make-sequences-increasing', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Find Eventual Safe States', 'titleSlug': 'find-eventual-safe-states', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Topological Sort', 'slug': 'topological-sort'}]}
{'title': 'Bricks Falling When Hit', 'titleSlug': 'bricks-falling-when-hit', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Unique Morse Code Words', 'titleSlug': 'unique-morse-code-words', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Split Array With Same Average', 'titleSlug': 'split-array-with-same-average', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Number of Lines To Write String', 'titleSlug': 'number-of-lines-to-write-string', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Max Increase to Keep City Skyline', 'titleSlug': 'max-increase-to-keep-city-skyline', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Soup Servings', 'titleSlug': 'soup-servings', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Probability and Statistics', 'slug': 'probability-and-statistics'}]}
{'title': 'Expressive Words', 'titleSlug': 'expressive-words', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Chalkboard XOR Game', 'titleSlug': 'chalkboard-xor-game', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Brainteaser', 'slug': 'brainteaser'}, {'name': 'Game Theory', 'slug': 'game-theory'}]}
{'title': 'Subdomain Visit Count', 'titleSlug': 'subdomain-visit-count', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Largest Triangle Area', 'titleSlug': 'largest-triangle-area', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Geometry', 'slug': 'geometry'}]}
{'title': 'Largest Sum of Averages', 'titleSlug': 'largest-sum-of-averages', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Binary Tree Pruning', 'titleSlug': 'binary-tree-pruning', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Bus Routes', 'titleSlug': 'bus-routes', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}]}
{'title': 'Ambiguous Coordinates', 'titleSlug': 'ambiguous-coordinates', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Linked List Components', 'titleSlug': 'linked-list-components', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Linked List', 'slug': 'linked-list'}]}
{'title': 'Race Car', 'titleSlug': 'race-car', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Most Common Word', 'titleSlug': 'most-common-word', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Short Encoding of Words', 'titleSlug': 'short-encoding-of-words', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Trie', 'slug': 'trie'}]}
{'title': 'Shortest Distance to a Character', 'titleSlug': 'shortest-distance-to-a-character', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Card Flipping Game', 'titleSlug': 'card-flipping-game', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}]}
{'title': 'Binary Trees With Factors', 'titleSlug': 'binary-trees-with-factors', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Goat Latin', 'titleSlug': 'goat-latin', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Friends Of Appropriate Ages', 'titleSlug': 'friends-of-appropriate-ages', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Most Profit Assigning Work', 'titleSlug': 'most-profit-assigning-work', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Making A Large Island', 'titleSlug': 'making-a-large-island', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Count Unique Characters of All Substrings of a Given String', 'titleSlug': 'count-unique-characters-of-all-substrings-of-a-given-string', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Consecutive Numbers Sum', 'titleSlug': 'consecutive-numbers-sum', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Positions of Large Groups', 'titleSlug': 'positions-of-large-groups', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Masking Personal Information', 'titleSlug': 'masking-personal-information', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Flipping an Image', 'titleSlug': 'flipping-an-image', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Find And Replace in String', 'titleSlug': 'find-and-replace-in-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Sum of Distances in Tree', 'titleSlug': 'sum-of-distances-in-tree', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Image Overlap', 'titleSlug': 'image-overlap', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Rectangle Overlap', 'titleSlug': 'rectangle-overlap', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Geometry', 'slug': 'geometry'}]}
{'title': 'New 21 Game', 'titleSlug': 'new-21-game', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Probability and Statistics', 'slug': 'probability-and-statistics'}]}
{'title': 'Push Dominoes', 'titleSlug': 'push-dominoes', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Similar String Groups', 'titleSlug': 'similar-string-groups', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}]}
{'title': 'Magic Squares In Grid', 'titleSlug': 'magic-squares-in-grid', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Keys and Rooms', 'titleSlug': 'keys-and-rooms', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Split Array into Fibonacci Sequence', 'titleSlug': 'split-array-into-fibonacci-sequence', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Backtracking', 'slug': 'backtracking'}]}
{'title': 'Guess the Word', 'titleSlug': 'guess-the-word', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Interactive', 'slug': 'interactive'}, {'name': 'Game Theory', 'slug': 'game-theory'}]}
{'title': 'Backspace String Compare', 'titleSlug': 'backspace-string-compare', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Longest Mountain in Array', 'titleSlug': 'longest-mountain-in-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Hand of Straights', 'titleSlug': 'hand-of-straights', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Shortest Path Visiting All Nodes', 'titleSlug': 'shortest-path-visiting-all-nodes', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Shifting Letters', 'titleSlug': 'shifting-letters', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Maximize Distance to Closest Person', 'titleSlug': 'maximize-distance-to-closest-person', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Rectangle Area II', 'titleSlug': 'rectangle-area-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Line Sweep', 'slug': 'line-sweep'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Loud and Rich', 'titleSlug': 'loud-and-rich', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Topological Sort', 'slug': 'topological-sort'}]}
{'title': 'Peak Index in a Mountain Array', 'titleSlug': 'peak-index-in-a-mountain-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Car Fleet', 'titleSlug': 'car-fleet', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'K-Similar Strings', 'titleSlug': 'k-similar-strings', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}]}
{'title': 'Exam Room', 'titleSlug': 'exam-room', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Design', 'slug': 'design'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Score of Parentheses', 'titleSlug': 'score-of-parentheses', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}]}
{'title': 'Minimum Cost to Hire K Workers', 'titleSlug': 'minimum-cost-to-hire-k-workers', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Mirror Reflection', 'titleSlug': 'mirror-reflection', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Geometry', 'slug': 'geometry'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Buddy Strings', 'titleSlug': 'buddy-strings', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Lemonade Change', 'titleSlug': 'lemonade-change', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Score After Flipping Matrix', 'titleSlug': 'score-after-flipping-matrix', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Shortest Subarray with Sum at Least K', 'titleSlug': 'shortest-subarray-with-sum-at-least-k', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}, {'name': 'Monotonic Queue', 'slug': 'monotonic-queue'}]}
{'title': 'All Nodes Distance K in Binary Tree', 'titleSlug': 'all-nodes-distance-k-in-binary-tree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Shortest Path to Get All Keys', 'titleSlug': 'shortest-path-to-get-all-keys', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Smallest Subtree with all the Deepest Nodes', 'titleSlug': 'smallest-subtree-with-all-the-deepest-nodes', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Prime Palindrome', 'titleSlug': 'prime-palindrome', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Transpose Matrix', 'titleSlug': 'transpose-matrix', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Binary Gap', 'titleSlug': 'binary-gap', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Reordered Power of 2', 'titleSlug': 'reordered-power-of-2', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Counting', 'slug': 'counting'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Advantage Shuffle', 'titleSlug': 'advantage-shuffle', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Minimum Number of Refueling Stops', 'titleSlug': 'minimum-number-of-refueling-stops', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Leaf-Similar Trees', 'titleSlug': 'leaf-similar-trees', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Length of Longest Fibonacci Subsequence', 'titleSlug': 'length-of-longest-fibonacci-subsequence', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Walking Robot Simulation', 'titleSlug': 'walking-robot-simulation', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Koko Eating Bananas', 'titleSlug': 'koko-eating-bananas', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Middle of the Linked List', 'titleSlug': 'middle-of-the-linked-list', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}]}
{'title': 'Stone Game', 'titleSlug': 'stone-game', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Game Theory', 'slug': 'game-theory'}]}
{'title': 'Nth Magical Number', 'titleSlug': 'nth-magical-number', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Profitable Schemes', 'titleSlug': 'profitable-schemes', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Decoded String at Index', 'titleSlug': 'decoded-string-at-index', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}]}
{'title': 'Boats to Save People', 'titleSlug': 'boats-to-save-people', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Reachable Nodes In Subdivided Graph', 'titleSlug': 'reachable-nodes-in-subdivided-graph', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Graph', 'slug': 'graph'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Shortest Path', 'slug': 'shortest-path'}]}
{'title': 'Projection Area of 3D Shapes', 'titleSlug': 'projection-area-of-3d-shapes', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Geometry', 'slug': 'geometry'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Uncommon Words from Two Sentences', 'titleSlug': 'uncommon-words-from-two-sentences', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Spiral Matrix III', 'titleSlug': 'spiral-matrix-iii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Possible Bipartition', 'titleSlug': 'possible-bipartition', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Super Egg Drop', 'titleSlug': 'super-egg-drop', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Fair Candy Swap', 'titleSlug': 'fair-candy-swap', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Construct Binary Tree from Preorder and Postorder Traversal', 'titleSlug': 'construct-binary-tree-from-preorder-and-postorder-traversal', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Find and Replace Pattern', 'titleSlug': 'find-and-replace-pattern', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Sum of Subsequence Widths', 'titleSlug': 'sum-of-subsequence-widths', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Surface Area of 3D Shapes', 'titleSlug': 'surface-area-of-3d-shapes', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Geometry', 'slug': 'geometry'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Groups of Special-Equivalent Strings', 'titleSlug': 'groups-of-special-equivalent-strings', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'All Possible Full Binary Trees', 'titleSlug': 'all-possible-full-binary-trees', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Recursion', 'slug': 'recursion'}, {'name': 'Memoization', 'slug': 'memoization'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Maximum Frequency Stack', 'titleSlug': 'maximum-frequency-stack', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Monotonic Array', 'titleSlug': 'monotonic-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Increasing Order Search Tree', 'titleSlug': 'increasing-order-search-tree', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Stack', 'slug': 'stack'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Bitwise ORs of Subarrays', 'titleSlug': 'bitwise-ors-of-subarrays', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Orderly Queue', 'titleSlug': 'orderly-queue', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'RLE Iterator', 'titleSlug': 'rle-iterator', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Counting', 'slug': 'counting'}, {'name': 'Iterator', 'slug': 'iterator'}]}
{'title': 'Online Stock Span', 'titleSlug': 'online-stock-span', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Stack', 'slug': 'stack'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}, {'name': 'Data Stream', 'slug': 'data-stream'}]}
{'title': 'Numbers At Most N Given Digit Set', 'titleSlug': 'numbers-at-most-n-given-digit-set', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Valid Permutations for DI Sequence', 'titleSlug': 'valid-permutations-for-di-sequence', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Fruit Into Baskets', 'titleSlug': 'fruit-into-baskets', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Sort Array By Parity', 'titleSlug': 'sort-array-by-parity', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Super Palindromes', 'titleSlug': 'super-palindromes', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Sum of Subarray Minimums', 'titleSlug': 'sum-of-subarray-minimums', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Smallest Range I', 'titleSlug': 'smallest-range-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}]}
{'title': 'Snakes and Ladders', 'titleSlug': 'snakes-and-ladders', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Smallest Range II', 'titleSlug': 'smallest-range-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Online Election', 'titleSlug': 'online-election', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Design', 'slug': 'design'}]}
{'title': 'Sort an Array', 'titleSlug': 'sort-an-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Merge Sort', 'slug': 'merge-sort'}, {'name': 'Bucket Sort', 'slug': 'bucket-sort'}, {'name': 'Radix Sort', 'slug': 'radix-sort'}, {'name': 'Counting Sort', 'slug': 'counting-sort'}]}
{'title': 'Cat and Mouse', 'titleSlug': 'cat-and-mouse', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Topological Sort', 'slug': 'topological-sort'}, {'name': 'Memoization', 'slug': 'memoization'}, {'name': 'Game Theory', 'slug': 'game-theory'}]}
{'title': 'X of a Kind in a Deck of Cards', 'titleSlug': 'x-of-a-kind-in-a-deck-of-cards', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Counting', 'slug': 'counting'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Partition Array into Disjoint Intervals', 'titleSlug': 'partition-array-into-disjoint-intervals', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Word Subsets', 'titleSlug': 'word-subsets', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Reverse Only Letters', 'titleSlug': 'reverse-only-letters', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Maximum Sum Circular Subarray', 'titleSlug': 'maximum-sum-circular-subarray', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Monotonic Queue', 'slug': 'monotonic-queue'}]}
{'title': 'Complete Binary Tree Inserter', 'titleSlug': 'complete-binary-tree-inserter', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Number of Music Playlists', 'titleSlug': 'number-of-music-playlists', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}]}
{'title': 'Minimum Add to Make Parentheses Valid', 'titleSlug': 'minimum-add-to-make-parentheses-valid', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Sort Array By Parity II', 'titleSlug': 'sort-array-by-parity-ii', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': '3Sum With Multiplicity', 'titleSlug': '3sum-with-multiplicity', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Minimize Malware Spread', 'titleSlug': 'minimize-malware-spread', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Long Pressed Name', 'titleSlug': 'long-pressed-name', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Flip String to Monotone Increasing', 'titleSlug': 'flip-string-to-monotone-increasing', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Three Equal Parts', 'titleSlug': 'three-equal-parts', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}]}
{'title': 'Minimize Malware Spread II', 'titleSlug': 'minimize-malware-spread-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Unique Email Addresses', 'titleSlug': 'unique-email-addresses', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Binary Subarrays With Sum', 'titleSlug': 'binary-subarrays-with-sum', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Minimum Falling Path Sum', 'titleSlug': 'minimum-falling-path-sum', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Beautiful Array', 'titleSlug': 'beautiful-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}]}
{'title': 'Number of Recent Calls', 'titleSlug': 'number-of-recent-calls', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Design', 'slug': 'design'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Data Stream', 'slug': 'data-stream'}]}
{'title': 'Shortest Bridge', 'titleSlug': 'shortest-bridge', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Knight Dialer', 'titleSlug': 'knight-dialer', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Stamping The Sequence', 'titleSlug': 'stamping-the-sequence', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Queue', 'slug': 'queue'}]}
{'title': 'Reorder Data in Log Files', 'titleSlug': 'reorder-data-in-log-files', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Range Sum of BST', 'titleSlug': 'range-sum-of-bst', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Minimum Area Rectangle', 'titleSlug': 'minimum-area-rectangle', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Geometry', 'slug': 'geometry'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Distinct Subsequences II', 'titleSlug': 'distinct-subsequences-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Valid Mountain Array', 'titleSlug': 'valid-mountain-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'DI String Match', 'titleSlug': 'di-string-match', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Find the Shortest Superstring', 'titleSlug': 'find-the-shortest-superstring', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Delete Columns to Make Sorted', 'titleSlug': 'delete-columns-to-make-sorted', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Minimum Increment to Make Array Unique', 'titleSlug': 'minimum-increment-to-make-array-unique', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Validate Stack Sequences', 'titleSlug': 'validate-stack-sequences', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Most Stones Removed with Same Row or Column', 'titleSlug': 'most-stones-removed-with-same-row-or-column', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Bag of Tokens', 'titleSlug': 'bag-of-tokens', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Largest Time for Given Digits', 'titleSlug': 'largest-time-for-given-digits', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Reveal Cards In Increasing Order', 'titleSlug': 'reveal-cards-in-increasing-order', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Flip Equivalent Binary Trees', 'titleSlug': 'flip-equivalent-binary-trees', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Largest Component Size by Common Factor', 'titleSlug': 'largest-component-size-by-common-factor', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Verifying an Alien Dictionary', 'titleSlug': 'verifying-an-alien-dictionary', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Array of Doubled Pairs', 'titleSlug': 'array-of-doubled-pairs', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Delete Columns to Make Sorted II', 'titleSlug': 'delete-columns-to-make-sorted-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Tallest Billboard', 'titleSlug': 'tallest-billboard', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Prison Cells After N Days', 'titleSlug': 'prison-cells-after-n-days', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Check Completeness of a Binary Tree', 'titleSlug': 'check-completeness-of-a-binary-tree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Regions Cut By Slashes', 'titleSlug': 'regions-cut-by-slashes', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Delete Columns to Make Sorted III', 'titleSlug': 'delete-columns-to-make-sorted-iii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'N-Repeated Element in Size 2N Array', 'titleSlug': 'n-repeated-element-in-size-2n-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}]}
{'title': 'Maximum Width Ramp', 'titleSlug': 'maximum-width-ramp', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Minimum Area Rectangle II', 'titleSlug': 'minimum-area-rectangle-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Geometry', 'slug': 'geometry'}]}
{'title': 'Least Operators to Express Number', 'titleSlug': 'least-operators-to-express-number', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Memoization', 'slug': 'memoization'}]}
{'title': 'Univalued Binary Tree', 'titleSlug': 'univalued-binary-tree', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Vowel Spellchecker', 'titleSlug': 'vowel-spellchecker', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Numbers With Same Consecutive Differences', 'titleSlug': 'numbers-with-same-consecutive-differences', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}]}
{'title': 'Binary Tree Cameras', 'titleSlug': 'binary-tree-cameras', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Pancake Sorting', 'titleSlug': 'pancake-sorting', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Powerful Integers', 'titleSlug': 'powerful-integers', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Flip Binary Tree To Match Preorder Traversal', 'titleSlug': 'flip-binary-tree-to-match-preorder-traversal', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Equal Rational Numbers', 'titleSlug': 'equal-rational-numbers', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'K Closest Points to Origin', 'titleSlug': 'k-closest-points-to-origin', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Geometry', 'slug': 'geometry'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Quickselect', 'slug': 'quickselect'}]}
{'title': 'Subarray Sums Divisible by K', 'titleSlug': 'subarray-sums-divisible-by-k', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Odd Even Jump', 'titleSlug': 'odd-even-jump', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Largest Perimeter Triangle', 'titleSlug': 'largest-perimeter-triangle', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Squares of a Sorted Array', 'titleSlug': 'squares-of-a-sorted-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Longest Turbulent Subarray', 'titleSlug': 'longest-turbulent-subarray', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Distribute Coins in Binary Tree', 'titleSlug': 'distribute-coins-in-binary-tree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Unique Paths III', 'titleSlug': 'unique-paths-iii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Time Based Key-Value Store', 'titleSlug': 'time-based-key-value-store', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Design', 'slug': 'design'}]}
{'title': 'Triples with Bitwise AND Equal To Zero', 'titleSlug': 'triples-with-bitwise-and-equal-to-zero', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Minimum Cost For Tickets', 'titleSlug': 'minimum-cost-for-tickets', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'String Without AAA or BBB', 'titleSlug': 'string-without-aaa-or-bbb', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Sum of Even Numbers After Queries', 'titleSlug': 'sum-of-even-numbers-after-queries', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Interval List Intersections', 'titleSlug': 'interval-list-intersections', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Line Sweep', 'slug': 'line-sweep'}]}
{'title': 'Vertical Order Traversal of a Binary Tree', 'titleSlug': 'vertical-order-traversal-of-a-binary-tree', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Smallest String Starting From Leaf', 'titleSlug': 'smallest-string-starting-from-leaf', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Add to Array-Form of Integer', 'titleSlug': 'add-to-array-form-of-integer', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}]}
{'title': 'Satisfiability of Equality Equations', 'titleSlug': 'satisfiability-of-equality-equations', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Broken Calculator', 'titleSlug': 'broken-calculator', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Subarrays with K Different Integers', 'titleSlug': 'subarrays-with-k-different-integers', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Cousins in Binary Tree', 'titleSlug': 'cousins-in-binary-tree', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Rotting Oranges', 'titleSlug': 'rotting-oranges', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Minimum Number of K Consecutive Bit Flips', 'titleSlug': 'minimum-number-of-k-consecutive-bit-flips', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Number of Squareful Arrays', 'titleSlug': 'number-of-squareful-arrays', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Find the Town Judge', 'titleSlug': 'find-the-town-judge', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Maximum Binary Tree II', 'titleSlug': 'maximum-binary-tree-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Available Captures for Rook', 'titleSlug': 'available-captures-for-rook', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Minimum Cost to Merge Stones', 'titleSlug': 'minimum-cost-to-merge-stones', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Grid Illumination', 'titleSlug': 'grid-illumination', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}]}
{'title': 'Find Common Characters', 'titleSlug': 'find-common-characters', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Check If Word Is Valid After Substitutions', 'titleSlug': 'check-if-word-is-valid-after-substitutions', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}]}
{'title': 'Max Consecutive Ones III', 'titleSlug': 'max-consecutive-ones-iii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Maximize Sum Of Array After K Negations', 'titleSlug': 'maximize-sum-of-array-after-k-negations', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Clumsy Factorial', 'titleSlug': 'clumsy-factorial', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Minimum Domino Rotations For Equal Row', 'titleSlug': 'minimum-domino-rotations-for-equal-row', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Construct Binary Search Tree from Preorder Traversal', 'titleSlug': 'construct-binary-search-tree-from-preorder-traversal', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Complement of Base 10 Integer', 'titleSlug': 'complement-of-base-10-integer', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Pairs of Songs With Total Durations Divisible by 60', 'titleSlug': 'pairs-of-songs-with-total-durations-divisible-by-60', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Capacity To Ship Packages Within D Days', 'titleSlug': 'capacity-to-ship-packages-within-d-days', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Numbers With Repeated Digits', 'titleSlug': 'numbers-with-repeated-digits', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Partition Array Into Three Parts With Equal Sum', 'titleSlug': 'partition-array-into-three-parts-with-equal-sum', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Best Sightseeing Pair', 'titleSlug': 'best-sightseeing-pair', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Smallest Integer Divisible by K', 'titleSlug': 'smallest-integer-divisible-by-k', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}]}
{'title': 'Binary String With Substrings Representing 1 To N', 'titleSlug': 'binary-string-with-substrings-representing-1-to-n', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Convert to Base -2', 'titleSlug': 'convert-to-base-2', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Binary Prefix Divisible By 5', 'titleSlug': 'binary-prefix-divisible-by-5', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Next Greater Node In Linked List', 'titleSlug': 'next-greater-node-in-linked-list', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Number of Enclaves', 'titleSlug': 'number-of-enclaves', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Remove Outermost Parentheses', 'titleSlug': 'remove-outermost-parentheses', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}]}
{'title': 'Sum of Root To Leaf Binary Numbers', 'titleSlug': 'sum-of-root-to-leaf-binary-numbers', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Camelcase Matching', 'titleSlug': 'camelcase-matching', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'Trie', 'slug': 'trie'}, {'name': 'String Matching', 'slug': 'string-matching'}]}
{'title': 'Video Stitching', 'titleSlug': 'video-stitching', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Divisor Game', 'titleSlug': 'divisor-game', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Brainteaser', 'slug': 'brainteaser'}, {'name': 'Game Theory', 'slug': 'game-theory'}]}
{'title': 'Maximum Difference Between Node and Ancestor', 'titleSlug': 'maximum-difference-between-node-and-ancestor', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Longest Arithmetic Subsequence', 'titleSlug': 'longest-arithmetic-subsequence', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Recover a Tree From Preorder Traversal', 'titleSlug': 'recover-a-tree-from-preorder-traversal', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Two City Scheduling', 'titleSlug': 'two-city-scheduling', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Matrix Cells in Distance Order', 'titleSlug': 'matrix-cells-in-distance-order', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Geometry', 'slug': 'geometry'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Maximum Sum of Two Non-Overlapping Subarrays', 'titleSlug': 'maximum-sum-of-two-non-overlapping-subarrays', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Stream of Characters', 'titleSlug': 'stream-of-characters', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Trie', 'slug': 'trie'}, {'name': 'Data Stream', 'slug': 'data-stream'}]}
{'title': 'Moving Stones Until Consecutive', 'titleSlug': 'moving-stones-until-consecutive', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Brainteaser', 'slug': 'brainteaser'}]}
{'title': 'Coloring A Border', 'titleSlug': 'coloring-a-border', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Uncrossed Lines', 'titleSlug': 'uncrossed-lines', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Escape a Large Maze', 'titleSlug': 'escape-a-large-maze', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}]}
{'title': 'Valid Boomerang', 'titleSlug': 'valid-boomerang', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Geometry', 'slug': 'geometry'}]}
{'title': 'Binary Search Tree to Greater Sum Tree', 'titleSlug': 'binary-search-tree-to-greater-sum-tree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Minimum Score Triangulation of Polygon', 'titleSlug': 'minimum-score-triangulation-of-polygon', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Moving Stones Until Consecutive II', 'titleSlug': 'moving-stones-until-consecutive-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Robot Bounded In Circle', 'titleSlug': 'robot-bounded-in-circle', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Flower Planting With No Adjacent', 'titleSlug': 'flower-planting-with-no-adjacent', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Partition Array for Maximum Sum', 'titleSlug': 'partition-array-for-maximum-sum', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Longest Duplicate Substring', 'titleSlug': 'longest-duplicate-substring', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Rolling Hash', 'slug': 'rolling-hash'}, {'name': 'Suffix Array', 'slug': 'suffix-array'}, {'name': 'Hash Function', 'slug': 'hash-function'}]}
{'title': 'Customers Who Bought All Products', 'titleSlug': 'customers-who-bought-all-products', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Last Stone Weight', 'titleSlug': 'last-stone-weight', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Remove All Adjacent Duplicates In String', 'titleSlug': 'remove-all-adjacent-duplicates-in-string', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}]}
{'title': 'Longest String Chain', 'titleSlug': 'longest-string-chain', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Last Stone Weight II', 'titleSlug': 'last-stone-weight-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Actors and Directors Who Cooperated At Least Three Times', 'titleSlug': 'actors-and-directors-who-cooperated-at-least-three-times', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Height Checker', 'titleSlug': 'height-checker', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Counting Sort', 'slug': 'counting-sort'}]}
{'title': 'Grumpy Bookstore Owner', 'titleSlug': 'grumpy-bookstore-owner', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Previous Permutation With One Swap', 'titleSlug': 'previous-permutation-with-one-swap', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Distant Barcodes', 'titleSlug': 'distant-barcodes', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Shortest Way to Form String', 'titleSlug': 'shortest-way-to-form-string', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Confusing Number', 'titleSlug': 'confusing-number', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Campus Bikes', 'titleSlug': 'campus-bikes', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Minimize Rounding Error to Meet Target', 'titleSlug': 'minimize-rounding-error-to-meet-target', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'All Paths from Source Lead to Destination', 'titleSlug': 'all-paths-from-source-lead-to-destination', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Graph', 'slug': 'graph'}, {'name': 'Topological Sort', 'slug': 'topological-sort'}]}
{'title': 'Missing Element in Sorted Array', 'titleSlug': 'missing-element-in-sorted-array', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Lexicographically Smallest Equivalent String', 'titleSlug': 'lexicographically-smallest-equivalent-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Union Find', 'slug': 'union-find'}]}
{'title': 'Longest Repeating Substring', 'titleSlug': 'longest-repeating-substring', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Rolling Hash', 'slug': 'rolling-hash'}, {'name': 'Suffix Array', 'slug': 'suffix-array'}, {'name': 'Hash Function', 'slug': 'hash-function'}]}
{'title': 'Number of Valid Subarrays', 'titleSlug': 'number-of-valid-subarrays', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Fixed Point', 'titleSlug': 'fixed-point', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Index Pairs of a String', 'titleSlug': 'index-pairs-of-a-string', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Trie', 'slug': 'trie'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Campus Bikes II', 'titleSlug': 'campus-bikes-ii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Digit Count in Range', 'titleSlug': 'digit-count-in-range', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Product Sales Analysis I', 'titleSlug': 'product-sales-analysis-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Product Sales Analysis II', 'titleSlug': 'product-sales-analysis-ii', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Product Sales Analysis III', 'titleSlug': 'product-sales-analysis-iii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Greatest Common Divisor of Strings', 'titleSlug': 'greatest-common-divisor-of-strings', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Flip Columns For Maximum Number of Equal Rows', 'titleSlug': 'flip-columns-for-maximum-number-of-equal-rows', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Adding Two Negabinary Numbers', 'titleSlug': 'adding-two-negabinary-numbers', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}]}
{'title': 'Number of Submatrices That Sum to Target', 'titleSlug': 'number-of-submatrices-that-sum-to-target', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Project Employees I', 'titleSlug': 'project-employees-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Project Employees II', 'titleSlug': 'project-employees-ii', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Project Employees III', 'titleSlug': 'project-employees-iii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Occurrences After Bigram', 'titleSlug': 'occurrences-after-bigram', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Letter Tile Possibilities', 'titleSlug': 'letter-tile-possibilities', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Insufficient Nodes in Root to Leaf Paths', 'titleSlug': 'insufficient-nodes-in-root-to-leaf-paths', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Smallest Subsequence of Distinct Characters', 'titleSlug': 'smallest-subsequence-of-distinct-characters', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Sales Analysis I', 'titleSlug': 'sales-analysis-i', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Sales Analysis II', 'titleSlug': 'sales-analysis-ii', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Sales Analysis III', 'titleSlug': 'sales-analysis-iii', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Sum of Digits in the Minimum Number', 'titleSlug': 'sum-of-digits-in-the-minimum-number', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}]}
{'title': 'High Five', 'titleSlug': 'high-five', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Brace Expansion', 'titleSlug': 'brace-expansion', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}]}
{'title': 'Confusing Number II', 'titleSlug': 'confusing-number-ii', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Backtracking', 'slug': 'backtracking'}]}
{'title': 'Duplicate Zeros', 'titleSlug': 'duplicate-zeros', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}]}
{'title': 'Largest Values From Labels', 'titleSlug': 'largest-values-from-labels', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Shortest Path in Binary Matrix', 'titleSlug': 'shortest-path-in-binary-matrix', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Shortest Common Supersequence ', 'titleSlug': 'shortest-common-supersequence', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Statistics from a Large Sample', 'titleSlug': 'statistics-from-a-large-sample', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Probability and Statistics', 'slug': 'probability-and-statistics'}]}
{'title': 'Car Pooling', 'titleSlug': 'car-pooling', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Simulation', 'slug': 'simulation'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Find in Mountain Array', 'titleSlug': 'find-in-mountain-array', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Interactive', 'slug': 'interactive'}]}
{'title': 'Brace Expansion II', 'titleSlug': 'brace-expansion-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}]}
{'title': 'Game Play Analysis V', 'titleSlug': 'game-play-analysis-v', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Unpopular Books', 'titleSlug': 'unpopular-books', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Two Sum Less Than K', 'titleSlug': 'two-sum-less-than-k', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Find K-Length Substrings With No Repeated Characters', 'titleSlug': 'find-k-length-substrings-with-no-repeated-characters', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'The Earliest Moment When Everyone Become Friends', 'titleSlug': 'the-earliest-moment-when-everyone-become-friends', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Path With Maximum Minimum Value', 'titleSlug': 'path-with-maximum-minimum-value', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Distribute Candies to People', 'titleSlug': 'distribute-candies-to-people', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Path In Zigzag Labelled Binary Tree', 'titleSlug': 'path-in-zigzag-labelled-binary-tree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Filling Bookcase Shelves', 'titleSlug': 'filling-bookcase-shelves', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Parsing A Boolean Expression', 'titleSlug': 'parsing-a-boolean-expression', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Recursion', 'slug': 'recursion'}]}
{'title': 'New Users Daily Count', 'titleSlug': 'new-users-daily-count', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Defanging an IP Address', 'titleSlug': 'defanging-an-ip-address', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Corporate Flight Bookings', 'titleSlug': 'corporate-flight-bookings', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Delete Nodes And Return Forest', 'titleSlug': 'delete-nodes-and-return-forest', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Maximum Nesting Depth of Two Valid Parentheses Strings', 'titleSlug': 'maximum-nesting-depth-of-two-valid-parentheses-strings', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}]}
{'title': 'Highest Grade For Each Student', 'titleSlug': 'highest-grade-for-each-student', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Reported Posts', 'titleSlug': 'reported-posts', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Print in Order', 'titleSlug': 'print-in-order', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Concurrency', 'slug': 'concurrency'}]}
{'title': 'Print FooBar Alternately', 'titleSlug': 'print-foobar-alternately', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Concurrency', 'slug': 'concurrency'}]}
{'title': 'Print Zero Even Odd', 'titleSlug': 'print-zero-even-odd', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Concurrency', 'slug': 'concurrency'}]}
{'title': 'Building H2O', 'titleSlug': 'building-h2o', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Concurrency', 'slug': 'concurrency'}]}
{'title': 'Number of Days in a Month', 'titleSlug': 'number-of-days-in-a-month', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Remove Vowels from a String', 'titleSlug': 'remove-vowels-from-a-string', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Maximum Average Subtree', 'titleSlug': 'maximum-average-subtree', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Divide Array Into Increasing Sequences', 'titleSlug': 'divide-array-into-increasing-sequences', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Relative Sort Array', 'titleSlug': 'relative-sort-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Counting Sort', 'slug': 'counting-sort'}]}
{'title': 'Lowest Common Ancestor of Deepest Leaves', 'titleSlug': 'lowest-common-ancestor-of-deepest-leaves', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Longest Well-Performing Interval', 'titleSlug': 'longest-well-performing-interval', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Smallest Sufficient Team', 'titleSlug': 'smallest-sufficient-team', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Active Businesses', 'titleSlug': 'active-businesses', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'User Purchase Platform', 'titleSlug': 'user-purchase-platform', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Number of Equivalent Domino Pairs', 'titleSlug': 'number-of-equivalent-domino-pairs', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Shortest Path with Alternating Colors', 'titleSlug': 'shortest-path-with-alternating-colors', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Minimum Cost Tree From Leaf Values', 'titleSlug': 'minimum-cost-tree-from-leaf-values', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Maximum of Absolute Value Expression', 'titleSlug': 'maximum-of-absolute-value-expression', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}]}
{'title': 'Reported Posts II', 'titleSlug': 'reported-posts-ii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Largest Unique Number', 'titleSlug': 'largest-unique-number', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Armstrong Number', 'titleSlug': 'armstrong-number', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Connecting Cities With Minimum Cost', 'titleSlug': 'connecting-cities-with-minimum-cost', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Minimum Spanning Tree', 'slug': 'minimum-spanning-tree'}]}
{'title': 'Parallel Courses', 'titleSlug': 'parallel-courses', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Graph', 'slug': 'graph'}, {'name': 'Topological Sort', 'slug': 'topological-sort'}]}
{'title': 'N-th Tribonacci Number', 'titleSlug': 'n-th-tribonacci-number', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Memoization', 'slug': 'memoization'}]}
{'title': 'Alphabet Board Path', 'titleSlug': 'alphabet-board-path', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Largest 1-Bordered Square', 'titleSlug': 'largest-1-bordered-square', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Stone Game II', 'titleSlug': 'stone-game-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}, {'name': 'Game Theory', 'slug': 'game-theory'}]}
{'title': 'User Activity for the Past 30 Days I', 'titleSlug': 'user-activity-for-the-past-30-days-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'User Activity for the Past 30 Days II', 'titleSlug': 'user-activity-for-the-past-30-days-ii', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Longest Common Subsequence', 'titleSlug': 'longest-common-subsequence', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Decrease Elements To Make Array Zigzag', 'titleSlug': 'decrease-elements-to-make-array-zigzag', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Binary Tree Coloring Game', 'titleSlug': 'binary-tree-coloring-game', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Snapshot Array', 'titleSlug': 'snapshot-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Design', 'slug': 'design'}]}
{'title': 'Longest Chunked Palindrome Decomposition', 'titleSlug': 'longest-chunked-palindrome-decomposition', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Rolling Hash', 'slug': 'rolling-hash'}, {'name': 'Hash Function', 'slug': 'hash-function'}]}
{'title': 'Article Views I', 'titleSlug': 'article-views-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Article Views II', 'titleSlug': 'article-views-ii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Check If a Number Is Majority Element in a Sorted Array', 'titleSlug': 'check-if-a-number-is-majority-element-in-a-sorted-array', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': "Minimum Swaps to Group All 1's Together", 'titleSlug': 'minimum-swaps-to-group-all-1s-together', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Analyze User Website Visit Pattern', 'titleSlug': 'analyze-user-website-visit-pattern', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'String Transforms Into Another String', 'titleSlug': 'string-transforms-into-another-string', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Day of the Year', 'titleSlug': 'day-of-the-year', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Number of Dice Rolls With Target Sum', 'titleSlug': 'number-of-dice-rolls-with-target-sum', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Swap For Longest Repeated Character Substring', 'titleSlug': 'swap-for-longest-repeated-character-substring', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Online Majority Element In Subarray', 'titleSlug': 'online-majority-element-in-subarray', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}]}
{'title': 'Market Analysis I', 'titleSlug': 'market-analysis-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Market Analysis II', 'titleSlug': 'market-analysis-ii', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Find Words That Can Be Formed by Characters', 'titleSlug': 'find-words-that-can-be-formed-by-characters', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Maximum Level Sum of a Binary Tree', 'titleSlug': 'maximum-level-sum-of-a-binary-tree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'As Far from Land as Possible', 'titleSlug': 'as-far-from-land-as-possible', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Last Substring in Lexicographical Order', 'titleSlug': 'last-substring-in-lexicographical-order', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Product Price at a Given Date', 'titleSlug': 'product-price-at-a-given-date', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Single-Row Keyboard', 'titleSlug': 'single-row-keyboard', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Design File System', 'titleSlug': 'design-file-system', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Trie', 'slug': 'trie'}]}
{'title': 'Minimum Cost to Connect Sticks', 'titleSlug': 'minimum-cost-to-connect-sticks', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Optimize Water Distribution in a Village', 'titleSlug': 'optimize-water-distribution-in-a-village', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Minimum Spanning Tree', 'slug': 'minimum-spanning-tree'}]}
{'title': 'Invalid Transactions', 'titleSlug': 'invalid-transactions', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Compare Strings by Frequency of the Smallest Character', 'titleSlug': 'compare-strings-by-frequency-of-the-smallest-character', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Remove Zero Sum Consecutive Nodes from Linked List', 'titleSlug': 'remove-zero-sum-consecutive-nodes-from-linked-list', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Linked List', 'slug': 'linked-list'}]}
{'title': 'Dinner Plate Stacks', 'titleSlug': 'dinner-plate-stacks', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Immediate Food Delivery I', 'titleSlug': 'immediate-food-delivery-i', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Immediate Food Delivery II', 'titleSlug': 'immediate-food-delivery-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Prime Arrangements', 'titleSlug': 'prime-arrangements', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Diet Plan Performance', 'titleSlug': 'diet-plan-performance', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Can Make Palindrome from Substring', 'titleSlug': 'can-make-palindrome-from-substring', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Number of Valid Words for Each Puzzle', 'titleSlug': 'number-of-valid-words-for-each-puzzle', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Trie', 'slug': 'trie'}]}
{'title': 'Reformat Department Table', 'titleSlug': 'reformat-department-table', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Count Substrings with Only One Distinct Letter', 'titleSlug': 'count-substrings-with-only-one-distinct-letter', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Before and After Puzzle', 'titleSlug': 'before-and-after-puzzle', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Shortest Distance to Target Color', 'titleSlug': 'shortest-distance-to-target-color', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Maximum Number of Ones', 'titleSlug': 'maximum-number-of-ones', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Distance Between Bus Stops', 'titleSlug': 'distance-between-bus-stops', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Day of the Week', 'titleSlug': 'day-of-the-week', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Maximum Subarray Sum with One Deletion', 'titleSlug': 'maximum-subarray-sum-with-one-deletion', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Make Array Strictly Increasing', 'titleSlug': 'make-array-strictly-increasing', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Design Bounded Blocking Queue', 'titleSlug': 'design-bounded-blocking-queue', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Concurrency', 'slug': 'concurrency'}]}
{'title': 'Maximum Number of Balloons', 'titleSlug': 'maximum-number-of-balloons', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Reverse Substrings Between Each Pair of Parentheses', 'titleSlug': 'reverse-substrings-between-each-pair-of-parentheses', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}]}
{'title': 'K-Concatenation Maximum Sum', 'titleSlug': 'k-concatenation-maximum-sum', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Critical Connections in a Network', 'titleSlug': 'critical-connections-in-a-network', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Biconnected Component', 'slug': 'biconnected-component'}]}
{'title': 'Monthly Transactions I', 'titleSlug': 'monthly-transactions-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Tournament Winners', 'titleSlug': 'tournament-winners', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Fizz Buzz Multithreaded', 'titleSlug': 'fizz-buzz-multithreaded', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Concurrency', 'slug': 'concurrency'}]}
{'title': 'How Many Apples Can You Put into the Basket', 'titleSlug': 'how-many-apples-can-you-put-into-the-basket', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Minimum Knight Moves', 'titleSlug': 'minimum-knight-moves', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}]}
{'title': 'Find Smallest Common Element in All Rows', 'titleSlug': 'find-smallest-common-element-in-all-rows', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Minimum Time to Build Blocks', 'titleSlug': 'minimum-time-to-build-blocks', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Minimum Absolute Difference', 'titleSlug': 'minimum-absolute-difference', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Ugly Number III', 'titleSlug': 'ugly-number-iii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Smallest String With Swaps', 'titleSlug': 'smallest-string-with-swaps', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Sort Items by Groups Respecting Dependencies', 'titleSlug': 'sort-items-by-groups-respecting-dependencies', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Topological Sort', 'slug': 'topological-sort'}]}
{'title': 'Last Person to Fit in the Bus', 'titleSlug': 'last-person-to-fit-in-the-bus', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Monthly Transactions II', 'titleSlug': 'monthly-transactions-ii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Design Skiplist', 'titleSlug': 'design-skiplist', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Design', 'slug': 'design'}]}
{'title': 'Unique Number of Occurrences', 'titleSlug': 'unique-number-of-occurrences', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}]}
{'title': 'Get Equal Substrings Within Budget', 'titleSlug': 'get-equal-substrings-within-budget', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Remove All Adjacent Duplicates in String II', 'titleSlug': 'remove-all-adjacent-duplicates-in-string-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}]}
{'title': 'Minimum Moves to Reach Target with Rotations', 'titleSlug': 'minimum-moves-to-reach-target-with-rotations', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Queries Quality and Percentage', 'titleSlug': 'queries-quality-and-percentage', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Team Scores in Football Tournament', 'titleSlug': 'team-scores-in-football-tournament', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Intersection of Three Sorted Arrays', 'titleSlug': 'intersection-of-three-sorted-arrays', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Two Sum BSTs', 'titleSlug': 'two-sum-bsts', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Stepping Numbers', 'titleSlug': 'stepping-numbers', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}]}
{'title': 'Valid Palindrome III', 'titleSlug': 'valid-palindrome-iii', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Minimum Cost to Move Chips to The Same Position', 'titleSlug': 'minimum-cost-to-move-chips-to-the-same-position', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Longest Arithmetic Subsequence of Given Difference', 'titleSlug': 'longest-arithmetic-subsequence-of-given-difference', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Path with Maximum Gold', 'titleSlug': 'path-with-maximum-gold', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Count Vowels Permutation', 'titleSlug': 'count-vowels-permutation', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Split a String in Balanced Strings', 'titleSlug': 'split-a-string-in-balanced-strings', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Queens That Can Attack the King', 'titleSlug': 'queens-that-can-attack-the-king', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Dice Roll Simulation', 'titleSlug': 'dice-roll-simulation', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Maximum Equal Frequency', 'titleSlug': 'maximum-equal-frequency', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}]}
{'title': 'Report Contiguous Dates', 'titleSlug': 'report-contiguous-dates', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'The Dining Philosophers', 'titleSlug': 'the-dining-philosophers', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Concurrency', 'slug': 'concurrency'}]}
{'title': 'Airplane Seat Assignment Probability', 'titleSlug': 'airplane-seat-assignment-probability', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Brainteaser', 'slug': 'brainteaser'}, {'name': 'Probability and Statistics', 'slug': 'probability-and-statistics'}]}
{'title': 'Missing Number In Arithmetic Progression', 'titleSlug': 'missing-number-in-arithmetic-progression', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}]}
{'title': 'Meeting Scheduler', 'titleSlug': 'meeting-scheduler', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Toss Strange Coins', 'titleSlug': 'toss-strange-coins', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Probability and Statistics', 'slug': 'probability-and-statistics'}]}
{'title': 'Divide Chocolate', 'titleSlug': 'divide-chocolate', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Check If It Is a Straight Line', 'titleSlug': 'check-if-it-is-a-straight-line', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Geometry', 'slug': 'geometry'}]}
{'title': 'Remove Sub-Folders from the Filesystem', 'titleSlug': 'remove-sub-folders-from-the-filesystem', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Trie', 'slug': 'trie'}]}
{'title': 'Replace the Substring for Balanced String', 'titleSlug': 'replace-the-substring-for-balanced-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Maximum Profit in Job Scheduling', 'titleSlug': 'maximum-profit-in-job-scheduling', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Web Crawler', 'titleSlug': 'web-crawler', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Interactive', 'slug': 'interactive'}]}
{'title': 'Find Positive Integer Solution for a Given Equation', 'titleSlug': 'find-positive-integer-solution-for-a-given-equation', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Interactive', 'slug': 'interactive'}]}
{'title': 'Circular Permutation in Binary Representation', 'titleSlug': 'circular-permutation-in-binary-representation', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Maximum Length of a Concatenated String with Unique Characters', 'titleSlug': 'maximum-length-of-a-concatenated-string-with-unique-characters', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Tiling a Rectangle with the Fewest Squares', 'titleSlug': 'tiling-a-rectangle-with-the-fewest-squares', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Backtracking', 'slug': 'backtracking'}]}
{'title': 'Number of Comments per Post', 'titleSlug': 'number-of-comments-per-post', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Web Crawler Multithreaded', 'titleSlug': 'web-crawler-multithreaded', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Concurrency', 'slug': 'concurrency'}]}
{'title': 'Array Transformation', 'titleSlug': 'array-transformation', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Design A Leaderboard', 'titleSlug': 'design-a-leaderboard', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Tree Diameter', 'titleSlug': 'tree-diameter', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Topological Sort', 'slug': 'topological-sort'}]}
{'title': 'Palindrome Removal', 'titleSlug': 'palindrome-removal', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Minimum Swaps to Make Strings Equal', 'titleSlug': 'minimum-swaps-to-make-strings-equal', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Count Number of Nice Subarrays', 'titleSlug': 'count-number-of-nice-subarrays', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Minimum Remove to Make Valid Parentheses', 'titleSlug': 'minimum-remove-to-make-valid-parentheses', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}]}
{'title': 'Check If It Is a Good Array', 'titleSlug': 'check-if-it-is-a-good-array', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Average Selling Price', 'titleSlug': 'average-selling-price', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Cells with Odd Values in a Matrix', 'titleSlug': 'cells-with-odd-values-in-a-matrix', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Reconstruct a 2-Row Binary Matrix', 'titleSlug': 'reconstruct-a-2-row-binary-matrix', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Number of Closed Islands', 'titleSlug': 'number-of-closed-islands', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Maximum Score Words Formed by Letters', 'titleSlug': 'maximum-score-words-formed-by-letters', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Encode Number', 'titleSlug': 'encode-number', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Smallest Common Region', 'titleSlug': 'smallest-common-region', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}]}
{'title': 'Synonymous Sentences', 'titleSlug': 'synonymous-sentences', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Sort', 'slug': 'sort'}, {'name': 'Union Find', 'slug': 'union-find'}]}
{'title': "Handshakes That Don't Cross", 'titleSlug': 'handshakes-that-dont-cross', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Shift 2D Grid', 'titleSlug': 'shift-2d-grid', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Find Elements in a Contaminated Binary Tree', 'titleSlug': 'find-elements-in-a-contaminated-binary-tree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Greatest Sum Divisible by Three', 'titleSlug': 'greatest-sum-divisible-by-three', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Minimum Moves to Move a Box to Their Target Location', 'titleSlug': 'minimum-moves-to-move-a-box-to-their-target-location', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Page Recommendations', 'titleSlug': 'page-recommendations', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Print Immutable Linked List in Reverse', 'titleSlug': 'print-immutable-linked-list-in-reverse', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Recursion', 'slug': 'recursion'}]}
{'title': 'Minimum Time Visiting All Points', 'titleSlug': 'minimum-time-visiting-all-points', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Geometry', 'slug': 'geometry'}]}
{'title': 'Count Servers that Communicate', 'titleSlug': 'count-servers-that-communicate', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Search Suggestions System', 'titleSlug': 'search-suggestions-system', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Trie', 'slug': 'trie'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Number of Ways to Stay in the Same Place After Some Steps', 'titleSlug': 'number-of-ways-to-stay-in-the-same-place-after-some-steps', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'All People Report to the Given Manager', 'titleSlug': 'all-people-report-to-the-given-manager', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Hexspeak', 'titleSlug': 'hexspeak', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Remove Interval', 'titleSlug': 'remove-interval', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Delete Tree Nodes', 'titleSlug': 'delete-tree-nodes', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}]}
{'title': 'Number of Ships in a Rectangle', 'titleSlug': 'number-of-ships-in-a-rectangle', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Interactive', 'slug': 'interactive'}]}
{'title': 'Find Winner on a Tic Tac Toe Game', 'titleSlug': 'find-winner-on-a-tic-tac-toe-game', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Number of Burgers with No Waste of Ingredients', 'titleSlug': 'number-of-burgers-with-no-waste-of-ingredients', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Count Square Submatrices with All Ones', 'titleSlug': 'count-square-submatrices-with-all-ones', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Palindrome Partitioning III', 'titleSlug': 'palindrome-partitioning-iii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Traffic Light Controlled Intersection', 'titleSlug': 'traffic-light-controlled-intersection', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Concurrency', 'slug': 'concurrency'}]}
{'title': 'Students and Examinations', 'titleSlug': 'students-and-examinations', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Subtract the Product and Sum of Digits of an Integer', 'titleSlug': 'subtract-the-product-and-sum-of-digits-of-an-integer', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Group the People Given the Group Size They Belong To', 'titleSlug': 'group-the-people-given-the-group-size-they-belong-to', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Find the Smallest Divisor Given a Threshold', 'titleSlug': 'find-the-smallest-divisor-given-a-threshold', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Minimum Number of Flips to Convert Binary Matrix to Zero Matrix', 'titleSlug': 'minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Find the Start and End Number of Continuous Ranges', 'titleSlug': 'find-the-start-and-end-number-of-continuous-ranges', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Iterator for Combination', 'titleSlug': 'iterator-for-combination', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Iterator', 'slug': 'iterator'}]}
{'title': 'Element Appearing More Than 25% In Sorted Array', 'titleSlug': 'element-appearing-more-than-25-in-sorted-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Remove Covered Intervals', 'titleSlug': 'remove-covered-intervals', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Minimum Falling Path Sum II', 'titleSlug': 'minimum-falling-path-sum-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Convert Binary Number in a Linked List to Integer', 'titleSlug': 'convert-binary-number-in-a-linked-list-to-integer', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Math', 'slug': 'math'}]}
{'title': 'Sequential Digits', 'titleSlug': 'sequential-digits', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Maximum Side Length of a Square with Sum Less than or Equal to Threshold', 'titleSlug': 'maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Shortest Path in a Grid with Obstacles Elimination', 'titleSlug': 'shortest-path-in-a-grid-with-obstacles-elimination', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Weather Type in Each Country', 'titleSlug': 'weather-type-in-each-country', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Find Numbers with Even Number of Digits', 'titleSlug': 'find-numbers-with-even-number-of-digits', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}]}
{'title': 'Divide Array in Sets of K Consecutive Numbers', 'titleSlug': 'divide-array-in-sets-of-k-consecutive-numbers', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Maximum Number of Occurrences of a Substring', 'titleSlug': 'maximum-number-of-occurrences-of-a-substring', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Maximum Candies You Can Get from Boxes', 'titleSlug': 'maximum-candies-you-can-get-from-boxes', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Replace Elements with Greatest Element on Right Side', 'titleSlug': 'replace-elements-with-greatest-element-on-right-side', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Sum of Mutated Array Closest to Target', 'titleSlug': 'sum-of-mutated-array-closest-to-target', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Number of Paths with Max Score', 'titleSlug': 'number-of-paths-with-max-score', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Deepest Leaves Sum', 'titleSlug': 'deepest-leaves-sum', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Find the Team Size', 'titleSlug': 'find-the-team-size', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Find N Unique Integers Sum up to Zero', 'titleSlug': 'find-n-unique-integers-sum-up-to-zero', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}]}
{'title': 'All Elements in Two Binary Search Trees', 'titleSlug': 'all-elements-in-two-binary-search-trees', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Jump Game III', 'titleSlug': 'jump-game-iii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}]}
{'title': 'Verbal Arithmetic Puzzle', 'titleSlug': 'verbal-arithmetic-puzzle', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Backtracking', 'slug': 'backtracking'}]}
{'title': 'Running Total for Different Genders', 'titleSlug': 'running-total-for-different-genders', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Decrypt String from Alphabet to Integer Mapping', 'titleSlug': 'decrypt-string-from-alphabet-to-integer-mapping', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'XOR Queries of a Subarray', 'titleSlug': 'xor-queries-of-a-subarray', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Get Watched Videos by Your Friends', 'titleSlug': 'get-watched-videos-by-your-friends', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Minimum Insertion Steps to Make a String Palindrome', 'titleSlug': 'minimum-insertion-steps-to-make-a-string-palindrome', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Decompress Run-Length Encoded List', 'titleSlug': 'decompress-run-length-encoded-list', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Matrix Block Sum', 'titleSlug': 'matrix-block-sum', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Sum of Nodes with Even-Valued Grandparent', 'titleSlug': 'sum-of-nodes-with-even-valued-grandparent', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Distinct Echo Substrings', 'titleSlug': 'distinct-echo-substrings', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Trie', 'slug': 'trie'}, {'name': 'Rolling Hash', 'slug': 'rolling-hash'}, {'name': 'Hash Function', 'slug': 'hash-function'}]}
{'title': 'Convert Integer to the Sum of Two No-Zero Integers', 'titleSlug': 'convert-integer-to-the-sum-of-two-no-zero-integers', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Minimum Flips to Make a OR b Equal to c', 'titleSlug': 'minimum-flips-to-make-a-or-b-equal-to-c', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Number of Operations to Make Network Connected', 'titleSlug': 'number-of-operations-to-make-network-connected', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Minimum Distance to Type a Word Using Two Fingers', 'titleSlug': 'minimum-distance-to-type-a-word-using-two-fingers', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Restaurant Growth', 'titleSlug': 'restaurant-growth', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Ads Performance', 'titleSlug': 'ads-performance', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Maximum 69 Number', 'titleSlug': 'maximum-69-number', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Print Words Vertically', 'titleSlug': 'print-words-vertically', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Delete Leaves With a Given Value', 'titleSlug': 'delete-leaves-with-a-given-value', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Minimum Number of Taps to Open to Water a Garden', 'titleSlug': 'minimum-number-of-taps-to-open-to-water-a-garden', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'List the Products Ordered in a Period', 'titleSlug': 'list-the-products-ordered-in-a-period', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Break a Palindrome', 'titleSlug': 'break-a-palindrome', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Sort the Matrix Diagonally', 'titleSlug': 'sort-the-matrix-diagonally', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Reverse Subarray To Maximize Array Value', 'titleSlug': 'reverse-subarray-to-maximize-array-value', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Rank Transform of an Array', 'titleSlug': 'rank-transform-of-an-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Remove Palindromic Subsequences', 'titleSlug': 'remove-palindromic-subsequences', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Filter Restaurants by Vegan-Friendly, Price and Distance', 'titleSlug': 'filter-restaurants-by-vegan-friendly-price-and-distance', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Find the City With the Smallest Number of Neighbors at a Threshold Distance', 'titleSlug': 'find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Shortest Path', 'slug': 'shortest-path'}]}
{'title': 'Minimum Difficulty of a Job Schedule', 'titleSlug': 'minimum-difficulty-of-a-job-schedule', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Number of Transactions per Visit', 'titleSlug': 'number-of-transactions-per-visit', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'The K Weakest Rows in a Matrix', 'titleSlug': 'the-k-weakest-rows-in-a-matrix', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Reduce Array Size to The Half', 'titleSlug': 'reduce-array-size-to-the-half', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Maximum Product of Splitted Binary Tree', 'titleSlug': 'maximum-product-of-splitted-binary-tree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Jump Game V', 'titleSlug': 'jump-game-v', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Movie Rating', 'titleSlug': 'movie-rating', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Number of Steps to Reduce a Number to Zero', 'titleSlug': 'number-of-steps-to-reduce-a-number-to-zero', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold', 'titleSlug': 'number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Angle Between Hands of a Clock', 'titleSlug': 'angle-between-hands-of-a-clock', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Jump Game IV', 'titleSlug': 'jump-game-iv', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}]}
{'title': 'Check If N and Its Double Exist', 'titleSlug': 'check-if-n-and-its-double-exist', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Minimum Number of Steps to Make Two Strings Anagram', 'titleSlug': 'minimum-number-of-steps-to-make-two-strings-anagram', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Tweet Counts Per Frequency', 'titleSlug': 'tweet-counts-per-frequency', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Maximum Students Taking Exam', 'titleSlug': 'maximum-students-taking-exam', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Students With Invalid Departments', 'titleSlug': 'students-with-invalid-departments', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Count Negative Numbers in a Sorted Matrix', 'titleSlug': 'count-negative-numbers-in-a-sorted-matrix', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Product of the Last K Numbers', 'titleSlug': 'product-of-the-last-k-numbers', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Data Stream', 'slug': 'data-stream'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Maximum Number of Events That Can Be Attended', 'titleSlug': 'maximum-number-of-events-that-can-be-attended', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Construct Target Array With Multiple Sums', 'titleSlug': 'construct-target-array-with-multiple-sums', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Activity Participants', 'titleSlug': 'activity-participants', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Sort Integers by The Number of 1 Bits', 'titleSlug': 'sort-integers-by-the-number-of-1-bits', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Apply Discount Every n Orders', 'titleSlug': 'apply-discount-every-n-orders', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Design', 'slug': 'design'}]}
{'title': 'Number of Substrings Containing All Three Characters', 'titleSlug': 'number-of-substrings-containing-all-three-characters', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Count All Valid Pickup and Delivery Options', 'titleSlug': 'count-all-valid-pickup-and-delivery-options', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}]}
{'title': 'Number of Days Between Two Dates', 'titleSlug': 'number-of-days-between-two-dates', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Validate Binary Tree Nodes', 'titleSlug': 'validate-binary-tree-nodes', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Closest Divisors', 'titleSlug': 'closest-divisors', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Largest Multiple of Three', 'titleSlug': 'largest-multiple-of-three', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Number of Trusted Contacts of a Customer', 'titleSlug': 'number-of-trusted-contacts-of-a-customer', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'How Many Numbers Are Smaller Than the Current Number', 'titleSlug': 'how-many-numbers-are-smaller-than-the-current-number', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Counting Sort', 'slug': 'counting-sort'}]}
{'title': 'Rank Teams by Votes', 'titleSlug': 'rank-teams-by-votes', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Linked List in Binary Tree', 'titleSlug': 'linked-list-in-binary-tree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Minimum Cost to Make at Least One Valid Path in a Grid', 'titleSlug': 'minimum-cost-to-make-at-least-one-valid-path-in-a-grid', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Shortest Path', 'slug': 'shortest-path'}]}
{'title': 'Get the Second Most Recent Activity', 'titleSlug': 'get-the-second-most-recent-activity', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Increasing Decreasing String', 'titleSlug': 'increasing-decreasing-string', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Find the Longest Substring Containing Vowels in Even Counts', 'titleSlug': 'find-the-longest-substring-containing-vowels-in-even-counts', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Longest ZigZag Path in a Binary Tree', 'titleSlug': 'longest-zigzag-path-in-a-binary-tree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Maximum Sum BST in Binary Tree', 'titleSlug': 'maximum-sum-bst-in-binary-tree', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Generate a String With Characters That Have Odd Counts', 'titleSlug': 'generate-a-string-with-characters-that-have-odd-counts', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Number of Times Binary String Is Prefix-Aligned', 'titleSlug': 'number-of-times-binary-string-is-prefix-aligned', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Time Needed to Inform All Employees', 'titleSlug': 'time-needed-to-inform-all-employees', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}]}
{'title': 'Frog Position After T Seconds', 'titleSlug': 'frog-position-after-t-seconds', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Replace Employee ID With The Unique Identifier', 'titleSlug': 'replace-employee-id-with-the-unique-identifier', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Find a Corresponding Node of a Binary Tree in a Clone of That Tree', 'titleSlug': 'find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Lucky Numbers in a Matrix', 'titleSlug': 'lucky-numbers-in-a-matrix', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Design a Stack With Increment Operation', 'titleSlug': 'design-a-stack-with-increment-operation', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Design', 'slug': 'design'}]}
{'title': 'Balance a Binary Search Tree', 'titleSlug': 'balance-a-binary-search-tree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Maximum Performance of a Team', 'titleSlug': 'maximum-performance-of-a-team', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Total Sales Amount by Year', 'titleSlug': 'total-sales-amount-by-year', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Find the Distance Value Between Two Arrays', 'titleSlug': 'find-the-distance-value-between-two-arrays', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Cinema Seat Allocation', 'titleSlug': 'cinema-seat-allocation', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Sort Integers by The Power Value', 'titleSlug': 'sort-integers-by-the-power-value', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Memoization', 'slug': 'memoization'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Pizza With 3n Slices', 'titleSlug': 'pizza-with-3n-slices', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Create Target Array in the Given Order', 'titleSlug': 'create-target-array-in-the-given-order', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Four Divisors', 'titleSlug': 'four-divisors', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}]}
{'title': 'Check if There is a Valid Path in a Grid', 'titleSlug': 'check-if-there-is-a-valid-path-in-a-grid', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Longest Happy Prefix', 'titleSlug': 'longest-happy-prefix', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Rolling Hash', 'slug': 'rolling-hash'}, {'name': 'String Matching', 'slug': 'string-matching'}, {'name': 'Hash Function', 'slug': 'hash-function'}]}
{'title': 'Capital Gain/Loss', 'titleSlug': 'capital-gainloss', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Find Lucky Integer in an Array', 'titleSlug': 'find-lucky-integer-in-an-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Count Number of Teams', 'titleSlug': 'count-number-of-teams', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}]}
{'title': 'Design Underground System', 'titleSlug': 'design-underground-system', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Design', 'slug': 'design'}]}
{'title': 'Find All Good Strings', 'titleSlug': 'find-all-good-strings', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'String Matching', 'slug': 'string-matching'}]}
{'title': 'Customers Who Bought Products A and B but Not C', 'titleSlug': 'customers-who-bought-products-a-and-b-but-not-c', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Count Largest Group', 'titleSlug': 'count-largest-group', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}]}
{'title': 'Construct K Palindrome Strings', 'titleSlug': 'construct-k-palindrome-strings', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Circle and Rectangle Overlapping', 'titleSlug': 'circle-and-rectangle-overlapping', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Geometry', 'slug': 'geometry'}]}
{'title': 'Reducing Dishes', 'titleSlug': 'reducing-dishes', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Minimum Subsequence in Non-Increasing Order', 'titleSlug': 'minimum-subsequence-in-non-increasing-order', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Number of Steps to Reduce a Number in Binary Representation to One', 'titleSlug': 'number-of-steps-to-reduce-a-number-in-binary-representation-to-one', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Longest Happy String', 'titleSlug': 'longest-happy-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Stone Game III', 'titleSlug': 'stone-game-iii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Game Theory', 'slug': 'game-theory'}]}
{'title': 'Top Travellers', 'titleSlug': 'top-travellers', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'String Matching in an Array', 'titleSlug': 'string-matching-in-an-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'String Matching', 'slug': 'string-matching'}]}
{'title': 'Queries on a Permutation With Key', 'titleSlug': 'queries-on-a-permutation-with-key', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'HTML Entity Parser', 'titleSlug': 'html-entity-parser', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Number of Ways to Paint N × 3 Grid', 'titleSlug': 'number-of-ways-to-paint-n-3-grid', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Find the Quiet Students in All Exams', 'titleSlug': 'find-the-quiet-students-in-all-exams', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Minimum Value to Get Positive Step by Step Sum', 'titleSlug': 'minimum-value-to-get-positive-step-by-step-sum', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Find the Minimum Number of Fibonacci Numbers Whose Sum Is K', 'titleSlug': 'find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'The k-th Lexicographical String of All Happy Strings of Length n', 'titleSlug': 'the-k-th-lexicographical-string-of-all-happy-strings-of-length-n', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Backtracking', 'slug': 'backtracking'}]}
{'title': 'Restore The Array', 'titleSlug': 'restore-the-array', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Reformat The String', 'titleSlug': 'reformat-the-string', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Display Table of Food Orders in a Restaurant', 'titleSlug': 'display-table-of-food-orders-in-a-restaurant', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Minimum Number of Frogs Croaking', 'titleSlug': 'minimum-number-of-frogs-croaking', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Build Array Where You Can Find The Maximum Exactly K Comparisons', 'titleSlug': 'build-array-where-you-can-find-the-maximum-exactly-k-comparisons', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'NPV Queries', 'titleSlug': 'npv-queries', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Maximum Score After Splitting a String', 'titleSlug': 'maximum-score-after-splitting-a-string', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Maximum Points You Can Obtain from Cards', 'titleSlug': 'maximum-points-you-can-obtain-from-cards', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Diagonal Traverse II', 'titleSlug': 'diagonal-traverse-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Constrained Subsequence Sum', 'titleSlug': 'constrained-subsequence-sum', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Monotonic Queue', 'slug': 'monotonic-queue'}]}
{'title': 'Counting Elements', 'titleSlug': 'counting-elements', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}]}
{'title': 'Perform String Shifts', 'titleSlug': 'perform-string-shifts', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Leftmost Column with at Least a One', 'titleSlug': 'leftmost-column-with-at-least-a-one', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Interactive', 'slug': 'interactive'}]}
{'title': 'First Unique Number', 'titleSlug': 'first-unique-number', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Data Stream', 'slug': 'data-stream'}]}
{'title': 'Check If a String Is a Valid Sequence from Root to Leaves Path in a Binary Tree', 'titleSlug': 'check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Kids With the Greatest Number of Candies', 'titleSlug': 'kids-with-the-greatest-number-of-candies', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Max Difference You Can Get From Changing an Integer', 'titleSlug': 'max-difference-you-can-get-from-changing-an-integer', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Check If a String Can Break Another String', 'titleSlug': 'check-if-a-string-can-break-another-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Number of Ways to Wear Different Hats to Each Other', 'titleSlug': 'number-of-ways-to-wear-different-hats-to-each-other', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Create a Session Bar Chart', 'titleSlug': 'create-a-session-bar-chart', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Destination City', 'titleSlug': 'destination-city', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': "Check If All 1's Are at Least Length K Places Away", 'titleSlug': 'check-if-all-1s-are-at-least-length-k-places-away', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit', 'titleSlug': 'longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}, {'name': 'Monotonic Queue', 'slug': 'monotonic-queue'}]}
{'title': 'Find the Kth Smallest Sum of a Matrix With Sorted Rows', 'titleSlug': 'find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Evaluate Boolean Expression', 'titleSlug': 'evaluate-boolean-expression', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Build an Array With Stack Operations', 'titleSlug': 'build-an-array-with-stack-operations', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Count Triplets That Can Form Two Arrays of Equal XOR', 'titleSlug': 'count-triplets-that-can-form-two-arrays-of-equal-xor', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Minimum Time to Collect All Apples in a Tree', 'titleSlug': 'minimum-time-to-collect-all-apples-in-a-tree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}]}
{'title': 'Number of Ways of Cutting a Pizza', 'titleSlug': 'number-of-ways-of-cutting-a-pizza', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Memoization', 'slug': 'memoization'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Apples & Oranges', 'titleSlug': 'apples-oranges', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Consecutive Characters', 'titleSlug': 'consecutive-characters', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Simplified Fractions', 'titleSlug': 'simplified-fractions', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Count Good Nodes in Binary Tree', 'titleSlug': 'count-good-nodes-in-binary-tree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Form Largest Integer With Digits That Add up to Target', 'titleSlug': 'form-largest-integer-with-digits-that-add-up-to-target', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Number of Students Doing Homework at a Given Time', 'titleSlug': 'number-of-students-doing-homework-at-a-given-time', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Rearrange Words in a Sentence', 'titleSlug': 'rearrange-words-in-a-sentence', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'People Whose List of Favorite Companies Is Not a Subset of Another List', 'titleSlug': 'people-whose-list-of-favorite-companies-is-not-a-subset-of-another-list', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Maximum Number of Darts Inside of a Circular Dartboard', 'titleSlug': 'maximum-number-of-darts-inside-of-a-circular-dartboard', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Geometry', 'slug': 'geometry'}]}
{'title': 'Active Users', 'titleSlug': 'active-users', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Check If a Word Occurs As a Prefix of Any Word in a Sentence', 'titleSlug': 'check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'String Matching', 'slug': 'string-matching'}]}
{'title': 'Maximum Number of Vowels in a Substring of Given Length', 'titleSlug': 'maximum-number-of-vowels-in-a-substring-of-given-length', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Pseudo-Palindromic Paths in a Binary Tree', 'titleSlug': 'pseudo-palindromic-paths-in-a-binary-tree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Max Dot Product of Two Subsequences', 'titleSlug': 'max-dot-product-of-two-subsequences', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Rectangles Area', 'titleSlug': 'rectangles-area', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Make Two Arrays Equal by Reversing Subarrays', 'titleSlug': 'make-two-arrays-equal-by-reversing-subarrays', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Check If a String Contains All Binary Codes of Size K', 'titleSlug': 'check-if-a-string-contains-all-binary-codes-of-size-k', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Rolling Hash', 'slug': 'rolling-hash'}, {'name': 'Hash Function', 'slug': 'hash-function'}]}
{'title': 'Course Schedule IV', 'titleSlug': 'course-schedule-iv', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Topological Sort', 'slug': 'topological-sort'}]}
{'title': 'Cherry Pickup II', 'titleSlug': 'cherry-pickup-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Maximum Product of Two Elements in an Array', 'titleSlug': 'maximum-product-of-two-elements-in-an-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts', 'titleSlug': 'maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Reorder Routes to Make All Paths Lead to the City Zero', 'titleSlug': 'reorder-routes-to-make-all-paths-lead-to-the-city-zero', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Probability of a Two Boxes Having The Same Number of Distinct Balls', 'titleSlug': 'probability-of-a-two-boxes-having-the-same-number-of-distinct-balls', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}, {'name': 'Probability and Statistics', 'slug': 'probability-and-statistics'}]}
{'title': 'Calculate Salaries', 'titleSlug': 'calculate-salaries', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Find All The Lonely Nodes', 'titleSlug': 'find-all-the-lonely-nodes', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Shuffle the Array', 'titleSlug': 'shuffle-the-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'The k Strongest Values in an Array', 'titleSlug': 'the-k-strongest-values-in-an-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Design Browser History', 'titleSlug': 'design-browser-history', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Doubly-Linked List', 'slug': 'doubly-linked-list'}, {'name': 'Data Stream', 'slug': 'data-stream'}]}
{'title': 'Paint House III', 'titleSlug': 'paint-house-iii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Delete N Nodes After M Nodes of a Linked List', 'titleSlug': 'delete-n-nodes-after-m-nodes-of-a-linked-list', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}]}
{'title': 'Final Prices With a Special Discount in a Shop', 'titleSlug': 'final-prices-with-a-special-discount-in-a-shop', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Subrectangle Queries', 'titleSlug': 'subrectangle-queries', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Find Two Non-overlapping Sub-arrays Each With Target Sum', 'titleSlug': 'find-two-non-overlapping-sub-arrays-each-with-target-sum', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Allocate Mailboxes', 'titleSlug': 'allocate-mailboxes', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Sales by Day of the Week', 'titleSlug': 'sales-by-day-of-the-week', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Running Sum of 1d Array', 'titleSlug': 'running-sum-of-1d-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Least Number of Unique Integers after K Removals', 'titleSlug': 'least-number-of-unique-integers-after-k-removals', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Minimum Number of Days to Make m Bouquets', 'titleSlug': 'minimum-number-of-days-to-make-m-bouquets', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Kth Ancestor of a Tree Node', 'titleSlug': 'kth-ancestor-of-a-tree-node', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Design', 'slug': 'design'}]}
{'title': 'Group Sold Products By The Date', 'titleSlug': 'group-sold-products-by-the-date', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Clone Binary Tree With Random Pointer', 'titleSlug': 'clone-binary-tree-with-random-pointer', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'XOR Operation in an Array', 'titleSlug': 'xor-operation-in-an-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Making File Names Unique', 'titleSlug': 'making-file-names-unique', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Avoid Flood in The City', 'titleSlug': 'avoid-flood-in-the-city', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree', 'titleSlug': 'find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Minimum Spanning Tree', 'slug': 'minimum-spanning-tree'}, {'name': 'Strongly Connected Component', 'slug': 'strongly-connected-component'}]}
{'title': 'Clone N-ary Tree', 'titleSlug': 'clone-n-ary-tree', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}]}
{'title': 'Average Salary Excluding the Minimum and Maximum Salary', 'titleSlug': 'average-salary-excluding-the-minimum-and-maximum-salary', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'The kth Factor of n', 'titleSlug': 'the-kth-factor-of-n', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': "Longest Subarray of 1's After Deleting One Element", 'titleSlug': 'longest-subarray-of-1s-after-deleting-one-element', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Parallel Courses II', 'titleSlug': 'parallel-courses-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Friendly Movies Streamed Last Month', 'titleSlug': 'friendly-movies-streamed-last-month', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Path Crossing', 'titleSlug': 'path-crossing', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Check If Array Pairs Are Divisible by k', 'titleSlug': 'check-if-array-pairs-are-divisible-by-k', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Number of Subsequences That Satisfy the Given Sum Condition', 'titleSlug': 'number-of-subsequences-that-satisfy-the-given-sum-condition', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Max Value of Equation', 'titleSlug': 'max-value-of-equation', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Monotonic Queue', 'slug': 'monotonic-queue'}]}
{'title': 'Design a File Sharing System', 'titleSlug': 'design-a-file-sharing-system', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Data Stream', 'slug': 'data-stream'}]}
{'title': 'Countries You Can Safely Invest In', 'titleSlug': 'countries-you-can-safely-invest-in', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Can Make Arithmetic Progression From Sequence', 'titleSlug': 'can-make-arithmetic-progression-from-sequence', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Last Moment Before All Ants Fall Out of a Plank', 'titleSlug': 'last-moment-before-all-ants-fall-out-of-a-plank', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Brainteaser', 'slug': 'brainteaser'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Count Submatrices With All Ones', 'titleSlug': 'count-submatrices-with-all-ones', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Minimum Possible Integer After at Most K Adjacent Swaps On Digits', 'titleSlug': 'minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}]}
{'title': 'Find Root of N-Ary Tree', 'titleSlug': 'find-root-of-n-ary-tree', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}]}
{'title': 'Reformat Date', 'titleSlug': 'reformat-date', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Range Sum of Sorted Subarray Sums', 'titleSlug': 'range-sum-of-sorted-subarray-sums', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Minimum Difference Between Largest and Smallest Value in Three Moves', 'titleSlug': 'minimum-difference-between-largest-and-smallest-value-in-three-moves', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Stone Game IV', 'titleSlug': 'stone-game-iv', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Game Theory', 'slug': 'game-theory'}]}
{'title': 'Customer Order Frequency', 'titleSlug': 'customer-order-frequency', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Number of Good Pairs', 'titleSlug': 'number-of-good-pairs', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Number of Substrings With Only 1s', 'titleSlug': 'number-of-substrings-with-only-1s', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Path with Maximum Probability', 'titleSlug': 'path-with-maximum-probability', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Shortest Path', 'slug': 'shortest-path'}]}
{'title': 'Best Position for a Service Centre', 'titleSlug': 'best-position-for-a-service-centre', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Geometry', 'slug': 'geometry'}, {'name': 'Randomized', 'slug': 'randomized'}]}
{'title': 'Move Sub-Tree of N-Ary Tree', 'titleSlug': 'move-sub-tree-of-n-ary-tree', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}]}
{'title': 'Find Users With Valid E-Mails', 'titleSlug': 'find-users-with-valid-e-mails', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Water Bottles', 'titleSlug': 'water-bottles', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Number of Nodes in the Sub-Tree With the Same Label', 'titleSlug': 'number-of-nodes-in-the-sub-tree-with-the-same-label', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Maximum Number of Non-Overlapping Substrings', 'titleSlug': 'maximum-number-of-non-overlapping-substrings', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Find a Value of a Mysterious Function Closest to Target', 'titleSlug': 'find-a-value-of-a-mysterious-function-closest-to-target', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}]}
{'title': 'Diameter of N-Ary Tree', 'titleSlug': 'diameter-of-n-ary-tree', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}]}
{'title': 'Count Odd Numbers in an Interval Range', 'titleSlug': 'count-odd-numbers-in-an-interval-range', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Number of Sub-arrays With Odd Sum', 'titleSlug': 'number-of-sub-arrays-with-odd-sum', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Number of Good Ways to Split a String', 'titleSlug': 'number-of-good-ways-to-split-a-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Minimum Number of Increments on Subarrays to Form a Target Array', 'titleSlug': 'minimum-number-of-increments-on-subarrays-to-form-a-target-array', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Patients With a Condition', 'titleSlug': 'patients-with-a-condition', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Shuffle String', 'titleSlug': 'shuffle-string', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Minimum Suffix Flips', 'titleSlug': 'minimum-suffix-flips', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Number of Good Leaf Nodes Pairs', 'titleSlug': 'number-of-good-leaf-nodes-pairs', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'String Compression II', 'titleSlug': 'string-compression-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'The Most Recent Three Orders', 'titleSlug': 'the-most-recent-three-orders', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Find the Index of the Large Integer', 'titleSlug': 'find-the-index-of-the-large-integer', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Interactive', 'slug': 'interactive'}]}
{'title': 'Count Good Triplets', 'titleSlug': 'count-good-triplets', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Find the Winner of an Array Game', 'titleSlug': 'find-the-winner-of-an-array-game', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Minimum Swaps to Arrange a Binary Grid', 'titleSlug': 'minimum-swaps-to-arrange-a-binary-grid', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Get the Maximum Score', 'titleSlug': 'get-the-maximum-score', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Guess the Majority in a Hidden Array', 'titleSlug': 'guess-the-majority-in-a-hidden-array', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Interactive', 'slug': 'interactive'}]}
{'title': 'Kth Missing Positive Number', 'titleSlug': 'kth-missing-positive-number', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Can Convert String in K Moves', 'titleSlug': 'can-convert-string-in-k-moves', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Minimum Insertions to Balance a Parentheses String', 'titleSlug': 'minimum-insertions-to-balance-a-parentheses-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Find Longest Awesome Substring', 'titleSlug': 'find-longest-awesome-substring', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Fix Product Name Format', 'titleSlug': 'fix-product-name-format', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Make The String Great', 'titleSlug': 'make-the-string-great', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}]}
{'title': 'Find Kth Bit in Nth Binary String', 'titleSlug': 'find-kth-bit-in-nth-binary-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Recursion', 'slug': 'recursion'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Maximum Number of Non-Overlapping Subarrays With Sum Equals Target', 'titleSlug': 'maximum-number-of-non-overlapping-subarrays-with-sum-equals-target', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Minimum Cost to Cut a Stick', 'titleSlug': 'minimum-cost-to-cut-a-stick', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'The Most Similar Path in a Graph', 'titleSlug': 'the-most-similar-path-in-a-graph', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'The Most Recent Orders for Each Product', 'titleSlug': 'the-most-recent-orders-for-each-product', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Three Consecutive Odds', 'titleSlug': 'three-consecutive-odds', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Minimum Operations to Make Array Equal', 'titleSlug': 'minimum-operations-to-make-array-equal', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Magnetic Force Between Two Balls', 'titleSlug': 'magnetic-force-between-two-balls', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Minimum Number of Days to Eat N Oranges', 'titleSlug': 'minimum-number-of-days-to-eat-n-oranges', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Memoization', 'slug': 'memoization'}]}
{'title': 'Strings Differ by One Character', 'titleSlug': 'strings-differ-by-one-character', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Rolling Hash', 'slug': 'rolling-hash'}, {'name': 'Hash Function', 'slug': 'hash-function'}]}
{'title': 'Bank Account Summary', 'titleSlug': 'bank-account-summary', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Thousand Separator', 'titleSlug': 'thousand-separator', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Minimum Number of Vertices to Reach All Nodes', 'titleSlug': 'minimum-number-of-vertices-to-reach-all-nodes', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Minimum Numbers of Function Calls to Make Target Array', 'titleSlug': 'minimum-numbers-of-function-calls-to-make-target-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Detect Cycles in 2D Grid', 'titleSlug': 'detect-cycles-in-2d-grid', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Most Visited Sector in  a Circular Track', 'titleSlug': 'most-visited-sector-in-a-circular-track', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Maximum Number of Coins You Can Get', 'titleSlug': 'maximum-number-of-coins-you-can-get', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Game Theory', 'slug': 'game-theory'}]}
{'title': 'Find Latest Group of Size M', 'titleSlug': 'find-latest-group-of-size-m', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Stone Game V', 'titleSlug': 'stone-game-v', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Game Theory', 'slug': 'game-theory'}]}
{'title': 'Put Boxes Into the Warehouse I', 'titleSlug': 'put-boxes-into-the-warehouse-i', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Unique Orders and Customers Per Month', 'titleSlug': 'unique-orders-and-customers-per-month', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Detect Pattern of Length M Repeated K or More Times', 'titleSlug': 'detect-pattern-of-length-m-repeated-k-or-more-times', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Maximum Length of Subarray With Positive Product', 'titleSlug': 'maximum-length-of-subarray-with-positive-product', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Minimum Number of Days to Disconnect Island', 'titleSlug': 'minimum-number-of-days-to-disconnect-island', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Strongly Connected Component', 'slug': 'strongly-connected-component'}]}
{'title': 'Number of Ways to Reorder Array to Get Same BST', 'titleSlug': 'number-of-ways-to-reorder-array-to-get-same-bst', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Memoization', 'slug': 'memoization'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Dot Product of Two Sparse Vectors', 'titleSlug': 'dot-product-of-two-sparse-vectors', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Design', 'slug': 'design'}]}
{'title': 'Warehouse Manager', 'titleSlug': 'warehouse-manager', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Matrix Diagonal Sum', 'titleSlug': 'matrix-diagonal-sum', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Number of Ways to Split a String', 'titleSlug': 'number-of-ways-to-split-a-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Shortest Subarray to be Removed to Make Array Sorted', 'titleSlug': 'shortest-subarray-to-be-removed-to-make-array-sorted', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Count All Possible Routes', 'titleSlug': 'count-all-possible-routes', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Memoization', 'slug': 'memoization'}]}
{'title': "Replace All ?'s to Avoid Consecutive Repeating Characters", 'titleSlug': 'replace-all-s-to-avoid-consecutive-repeating-characters', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Number of Ways Where Square of Number Is Equal to Product of Two Numbers', 'titleSlug': 'number-of-ways-where-square-of-number-is-equal-to-product-of-two-numbers', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}]}
{'title': 'Minimum Time to Make Rope Colorful', 'titleSlug': 'minimum-time-to-make-rope-colorful', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Remove Max Number of Edges to Keep Graph Fully Traversable', 'titleSlug': 'remove-max-number-of-edges-to-keep-graph-fully-traversable', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Put Boxes Into the Warehouse II', 'titleSlug': 'put-boxes-into-the-warehouse-ii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Customer Who Visited but Did Not Make Any Transactions', 'titleSlug': 'customer-who-visited-but-did-not-make-any-transactions', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Special Positions in a Binary Matrix', 'titleSlug': 'special-positions-in-a-binary-matrix', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Count Unhappy Friends', 'titleSlug': 'count-unhappy-friends', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Min Cost to Connect All Points', 'titleSlug': 'min-cost-to-connect-all-points', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Minimum Spanning Tree', 'slug': 'minimum-spanning-tree'}]}
{'title': 'Check If String Is Transformable With Substring Sort Operations', 'titleSlug': 'check-if-string-is-transformable-with-substring-sort-operations', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Binary Search Tree Iterator II', 'titleSlug': 'binary-search-tree-iterator-ii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Stack', 'slug': 'stack'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}, {'name': 'Iterator', 'slug': 'iterator'}]}
{'title': 'Bank Account Summary II', 'titleSlug': 'bank-account-summary-ii', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Sum of All Odd Length Subarrays', 'titleSlug': 'sum-of-all-odd-length-subarrays', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Maximum Sum Obtained of Any Permutation', 'titleSlug': 'maximum-sum-obtained-of-any-permutation', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Make Sum Divisible by P', 'titleSlug': 'make-sum-divisible-by-p', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Strange Printer II', 'titleSlug': 'strange-printer-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Topological Sort', 'slug': 'topological-sort'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Rearrange Spaces Between Words', 'titleSlug': 'rearrange-spaces-between-words', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Split a String Into the Max Number of Unique Substrings', 'titleSlug': 'split-a-string-into-the-max-number-of-unique-substrings', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Backtracking', 'slug': 'backtracking'}]}
{'title': 'Maximum Non Negative Product in a Matrix', 'titleSlug': 'maximum-non-negative-product-in-a-matrix', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Minimum Cost to Connect Two Groups of Points', 'titleSlug': 'minimum-cost-to-connect-two-groups-of-points', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'The Most Frequently Ordered Products for Each Customer', 'titleSlug': 'the-most-frequently-ordered-products-for-each-customer', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Build Binary Expression Tree From Infix Expression', 'titleSlug': 'build-binary-expression-tree-from-infix-expression', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Crawler Log Folder', 'titleSlug': 'crawler-log-folder', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}]}
{'title': 'Maximum Profit of Operating a Centennial Wheel', 'titleSlug': 'maximum-profit-of-operating-a-centennial-wheel', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Throne Inheritance', 'titleSlug': 'throne-inheritance', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Design', 'slug': 'design'}]}
{'title': 'Maximum Number of Achievable Transfer Requests', 'titleSlug': 'maximum-number-of-achievable-transfer-requests', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Find Nearest Right Node in Binary Tree', 'titleSlug': 'find-nearest-right-node-in-binary-tree', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Design Parking System', 'titleSlug': 'design-parking-system', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Design', 'slug': 'design'}, {'name': 'Simulation', 'slug': 'simulation'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Alert Using Same Key-Card Three or More Times in a One Hour Period', 'titleSlug': 'alert-using-same-key-card-three-or-more-times-in-a-one-hour-period', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Find Valid Matrix Given Row and Column Sums', 'titleSlug': 'find-valid-matrix-given-row-and-column-sums', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Find Servers That Handled Most Number of Requests', 'titleSlug': 'find-servers-that-handled-most-number-of-requests', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Sellers With No Sales', 'titleSlug': 'sellers-with-no-sales', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Special Array With X Elements Greater Than or Equal X', 'titleSlug': 'special-array-with-x-elements-greater-than-or-equal-x', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Even Odd Tree', 'titleSlug': 'even-odd-tree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Maximum Number of Visible Points', 'titleSlug': 'maximum-number-of-visible-points', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Geometry', 'slug': 'geometry'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Minimum One Bit Operations to Make Integers Zero', 'titleSlug': 'minimum-one-bit-operations-to-make-integers-zero', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Memoization', 'slug': 'memoization'}]}
{'title': 'Check If Two Expression Trees are Equivalent', 'titleSlug': 'check-if-two-expression-trees-are-equivalent', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Find the Missing IDs', 'titleSlug': 'find-the-missing-ids', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Maximum Nesting Depth of the Parentheses', 'titleSlug': 'maximum-nesting-depth-of-the-parentheses', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}]}
{'title': 'Maximal Network Rank', 'titleSlug': 'maximal-network-rank', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Split Two Strings to Make Palindrome', 'titleSlug': 'split-two-strings-to-make-palindrome', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Count Subtrees With Max Distance Between Cities', 'titleSlug': 'count-subtrees-with-max-distance-between-cities', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Enumeration', 'slug': 'enumeration'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Maximum Font to Fit a Sentence in a Screen', 'titleSlug': 'maximum-font-to-fit-a-sentence-in-a-screen', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Interactive', 'slug': 'interactive'}]}
{'title': 'Mean of Array After Removing Some Elements', 'titleSlug': 'mean-of-array-after-removing-some-elements', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Coordinate With Maximum Network Quality', 'titleSlug': 'coordinate-with-maximum-network-quality', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Number of Sets of K Non-Overlapping Line Segments', 'titleSlug': 'number-of-sets-of-k-non-overlapping-line-segments', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}]}
{'title': 'Fancy Sequence', 'titleSlug': 'fancy-sequence', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}]}
{'title': 'All Valid Triplets That Can Represent a Country', 'titleSlug': 'all-valid-triplets-that-can-represent-a-country', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Largest Substring Between Two Equal Characters', 'titleSlug': 'largest-substring-between-two-equal-characters', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Lexicographically Smallest String After Applying Operations', 'titleSlug': 'lexicographically-smallest-string-after-applying-operations', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Best Team With No Conflicts', 'titleSlug': 'best-team-with-no-conflicts', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Graph Connectivity With Threshold', 'titleSlug': 'graph-connectivity-with-threshold', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Design an Expression Tree With Evaluate Function', 'titleSlug': 'design-an-expression-tree-with-evaluate-function', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Slowest Key', 'titleSlug': 'slowest-key', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Arithmetic Subarrays', 'titleSlug': 'arithmetic-subarrays', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Path With Minimum Effort', 'titleSlug': 'path-with-minimum-effort', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Rank Transform of a Matrix', 'titleSlug': 'rank-transform-of-a-matrix', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Topological Sort', 'slug': 'topological-sort'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Percentage of Users Attended a Contest', 'titleSlug': 'percentage-of-users-attended-a-contest', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Add Two Polynomials Represented as Linked Lists', 'titleSlug': 'add-two-polynomials-represented-as-linked-lists', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}]}
{'title': 'Hopper Company Queries I', 'titleSlug': 'hopper-company-queries-i', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Sort Array by Increasing Frequency', 'titleSlug': 'sort-array-by-increasing-frequency', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Widest Vertical Area Between Two Points Containing No Points', 'titleSlug': 'widest-vertical-area-between-two-points-containing-no-points', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Count Substrings That Differ by One Character', 'titleSlug': 'count-substrings-that-differ-by-one-character', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Number of Ways to Form a Target String Given a Dictionary', 'titleSlug': 'number-of-ways-to-form-a-target-string-given-a-dictionary', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Check Array Formation Through Concatenation', 'titleSlug': 'check-array-formation-through-concatenation', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}]}
{'title': 'Count Sorted Vowel Strings', 'titleSlug': 'count-sorted-vowel-strings', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}]}
{'title': 'Furthest Building You Can Reach', 'titleSlug': 'furthest-building-you-can-reach', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Kth Smallest Instructions', 'titleSlug': 'kth-smallest-instructions', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}]}
{'title': 'Lowest Common Ancestor of a Binary Tree II', 'titleSlug': 'lowest-common-ancestor-of-a-binary-tree-ii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Hopper Company Queries II', 'titleSlug': 'hopper-company-queries-ii', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Get Maximum in Generated Array', 'titleSlug': 'get-maximum-in-generated-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Minimum Deletions to Make Character Frequencies Unique', 'titleSlug': 'minimum-deletions-to-make-character-frequencies-unique', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Sell Diminishing-Valued Colored Balls', 'titleSlug': 'sell-diminishing-valued-colored-balls', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Create Sorted Array through Instructions', 'titleSlug': 'create-sorted-array-through-instructions', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Merge Sort', 'slug': 'merge-sort'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Lowest Common Ancestor of a Binary Tree III', 'titleSlug': 'lowest-common-ancestor-of-a-binary-tree-iii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Hopper Company Queries III', 'titleSlug': 'hopper-company-queries-iii', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Defuse the Bomb', 'titleSlug': 'defuse-the-bomb', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Minimum Deletions to Make String Balanced', 'titleSlug': 'minimum-deletions-to-make-string-balanced', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Stack', 'slug': 'stack'}]}
{'title': 'Minimum Jumps to Reach Home', 'titleSlug': 'minimum-jumps-to-reach-home', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}]}
{'title': 'Distribute Repeating Integers', 'titleSlug': 'distribute-repeating-integers', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Design an Ordered Stream', 'titleSlug': 'design-an-ordered-stream', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Data Stream', 'slug': 'data-stream'}]}
{'title': 'Determine if Two Strings Are Close', 'titleSlug': 'determine-if-two-strings-are-close', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Minimum Operations to Reduce X to Zero', 'titleSlug': 'minimum-operations-to-reduce-x-to-zero', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Maximize Grid Happiness', 'titleSlug': 'maximize-grid-happiness', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Memoization', 'slug': 'memoization'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Correct a Binary Tree', 'titleSlug': 'correct-a-binary-tree', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Average Time of Process per Machine', 'titleSlug': 'average-time-of-process-per-machine', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Check If Two String Arrays are Equivalent', 'titleSlug': 'check-if-two-string-arrays-are-equivalent', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Smallest String With A Given Numeric Value', 'titleSlug': 'smallest-string-with-a-given-numeric-value', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Ways to Make a Fair Array', 'titleSlug': 'ways-to-make-a-fair-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Minimum Initial Energy to Finish Tasks', 'titleSlug': 'minimum-initial-energy-to-finish-tasks', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Change the Root of a Binary Tree', 'titleSlug': 'change-the-root-of-a-binary-tree', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Fix Names in a Table', 'titleSlug': 'fix-names-in-a-table', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Maximum Repeating Substring', 'titleSlug': 'maximum-repeating-substring', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'String Matching', 'slug': 'string-matching'}]}
{'title': 'Merge In Between Linked Lists', 'titleSlug': 'merge-in-between-linked-lists', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}]}
{'title': 'Design Front Middle Back Queue', 'titleSlug': 'design-front-middle-back-queue', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Data Stream', 'slug': 'data-stream'}]}
{'title': 'Minimum Number of Removals to Make Mountain Array', 'titleSlug': 'minimum-number-of-removals-to-make-mountain-array', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Richest Customer Wealth', 'titleSlug': 'richest-customer-wealth', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Find the Most Competitive Subsequence', 'titleSlug': 'find-the-most-competitive-subsequence', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Minimum Moves to Make Array Complementary', 'titleSlug': 'minimum-moves-to-make-array-complementary', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Minimize Deviation in Array', 'titleSlug': 'minimize-deviation-in-array', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Lowest Common Ancestor of a Binary Tree IV', 'titleSlug': 'lowest-common-ancestor-of-a-binary-tree-iv', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': "Product's Worth Over Invoices", 'titleSlug': 'products-worth-over-invoices', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Goal Parser Interpretation', 'titleSlug': 'goal-parser-interpretation', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Max Number of K-Sum Pairs', 'titleSlug': 'max-number-of-k-sum-pairs', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Concatenation of Consecutive Binary Numbers', 'titleSlug': 'concatenation-of-consecutive-binary-numbers', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Minimum Incompatibility', 'titleSlug': 'minimum-incompatibility', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Longest Palindromic Subsequence II', 'titleSlug': 'longest-palindromic-subsequence-ii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Invalid Tweets', 'titleSlug': 'invalid-tweets', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Count the Number of Consistent Strings', 'titleSlug': 'count-the-number-of-consistent-strings', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Sum of Absolute Differences in a Sorted Array', 'titleSlug': 'sum-of-absolute-differences-in-a-sorted-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Stone Game VI', 'titleSlug': 'stone-game-vi', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Game Theory', 'slug': 'game-theory'}]}
{'title': 'Delivering Boxes from Storage to Ports', 'titleSlug': 'delivering-boxes-from-storage-to-ports', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}, {'name': 'Monotonic Queue', 'slug': 'monotonic-queue'}]}
{'title': 'Count of Matches in Tournament', 'titleSlug': 'count-of-matches-in-tournament', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Partitioning Into Minimum Number Of Deci-Binary Numbers', 'titleSlug': 'partitioning-into-minimum-number-of-deci-binary-numbers', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Stone Game VII', 'titleSlug': 'stone-game-vii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Game Theory', 'slug': 'game-theory'}]}
{'title': 'Maximum Height by Stacking Cuboids ', 'titleSlug': 'maximum-height-by-stacking-cuboids', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Count Ways to Distribute Candies', 'titleSlug': 'count-ways-to-distribute-candies', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Daily Leads and Partners', 'titleSlug': 'daily-leads-and-partners', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Reformat Phone Number', 'titleSlug': 'reformat-phone-number', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Maximum Erasure Value', 'titleSlug': 'maximum-erasure-value', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Jump Game VI', 'titleSlug': 'jump-game-vi', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Monotonic Queue', 'slug': 'monotonic-queue'}]}
{'title': 'Checking Existence of Edge Length Limited Paths', 'titleSlug': 'checking-existence-of-edge-length-limited-paths', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Number of Distinct Substrings in a String', 'titleSlug': 'number-of-distinct-substrings-in-a-string', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Trie', 'slug': 'trie'}, {'name': 'Rolling Hash', 'slug': 'rolling-hash'}, {'name': 'Suffix Array', 'slug': 'suffix-array'}, {'name': 'Hash Function', 'slug': 'hash-function'}]}
{'title': 'Number of Calls Between Two Persons', 'titleSlug': 'number-of-calls-between-two-persons', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Number of Students Unable to Eat Lunch', 'titleSlug': 'number-of-students-unable-to-eat-lunch', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Average Waiting Time', 'titleSlug': 'average-waiting-time', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Maximum Binary String After Change', 'titleSlug': 'maximum-binary-string-after-change', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Minimum Adjacent Swaps for K Consecutive Ones', 'titleSlug': 'minimum-adjacent-swaps-for-k-consecutive-ones', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Determine if String Halves Are Alike', 'titleSlug': 'determine-if-string-halves-are-alike', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Maximum Number of Eaten Apples', 'titleSlug': 'maximum-number-of-eaten-apples', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Where Will the Ball Fall', 'titleSlug': 'where-will-the-ball-fall', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Maximum XOR With an Element From Array', 'titleSlug': 'maximum-xor-with-an-element-from-array', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Trie', 'slug': 'trie'}]}
{'title': 'Largest Subarray Length K', 'titleSlug': 'largest-subarray-length-k', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Biggest Window Between Visits', 'titleSlug': 'biggest-window-between-visits', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Maximum Units on a Truck', 'titleSlug': 'maximum-units-on-a-truck', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Count Good Meals', 'titleSlug': 'count-good-meals', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}]}
{'title': 'Ways to Split Array Into Three Subarrays', 'titleSlug': 'ways-to-split-array-into-three-subarrays', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Minimum Operations to Make a Subsequence', 'titleSlug': 'minimum-operations-to-make-a-subsequence', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Sum Of Special Evenly-Spaced Elements In Array', 'titleSlug': 'sum-of-special-evenly-spaced-elements-in-array', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Count Apples and Oranges', 'titleSlug': 'count-apples-and-oranges', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Calculate Money in Leetcode Bank', 'titleSlug': 'calculate-money-in-leetcode-bank', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Maximum Score From Removing Substrings', 'titleSlug': 'maximum-score-from-removing-substrings', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Construct the Lexicographically Largest Valid Sequence', 'titleSlug': 'construct-the-lexicographically-largest-valid-sequence', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Backtracking', 'slug': 'backtracking'}]}
{'title': 'Number Of Ways To Reconstruct A Tree', 'titleSlug': 'number-of-ways-to-reconstruct-a-tree', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Decode XORed Array', 'titleSlug': 'decode-xored-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Swapping Nodes in a Linked List', 'titleSlug': 'swapping-nodes-in-a-linked-list', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}]}
{'title': 'Minimize Hamming Distance After Swap Operations', 'titleSlug': 'minimize-hamming-distance-after-swap-operations', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}]}
{'title': 'Find Minimum Time to Finish All Jobs', 'titleSlug': 'find-minimum-time-to-finish-all-jobs', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Checking Existence of Edge Length Limited Paths II', 'titleSlug': 'checking-existence-of-edge-length-limited-paths-ii', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Minimum Spanning Tree', 'slug': 'minimum-spanning-tree'}]}
{'title': 'Number Of Rectangles That Can Form The Largest Square', 'titleSlug': 'number-of-rectangles-that-can-form-the-largest-square', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Tuple with Same Product', 'titleSlug': 'tuple-with-same-product', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Largest Submatrix With Rearrangements', 'titleSlug': 'largest-submatrix-with-rearrangements', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Cat and Mouse II', 'titleSlug': 'cat-and-mouse-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Topological Sort', 'slug': 'topological-sort'}, {'name': 'Memoization', 'slug': 'memoization'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Game Theory', 'slug': 'game-theory'}]}
{'title': 'Find Followers Count', 'titleSlug': 'find-followers-count', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Shortest Path to Get Food', 'titleSlug': 'shortest-path-to-get-food', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'The Number of Employees Which Report to Each Employee', 'titleSlug': 'the-number-of-employees-which-report-to-each-employee', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Find the Highest Altitude', 'titleSlug': 'find-the-highest-altitude', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Minimum Number of People to Teach', 'titleSlug': 'minimum-number-of-people-to-teach', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Decode XORed Permutation', 'titleSlug': 'decode-xored-permutation', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Count Ways to Make Array With Product', 'titleSlug': 'count-ways-to-make-array-with-product', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Latest Time by Replacing Hidden Digits', 'titleSlug': 'latest-time-by-replacing-hidden-digits', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Change Minimum Characters to Satisfy One of Three Conditions', 'titleSlug': 'change-minimum-characters-to-satisfy-one-of-three-conditions', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Find Kth Largest XOR Coordinate Value', 'titleSlug': 'find-kth-largest-xor-coordinate-value', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}, {'name': 'Quickselect', 'slug': 'quickselect'}]}
{'title': 'Building Boxes', 'titleSlug': 'building-boxes', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Find Distance in a Binary Tree', 'titleSlug': 'find-distance-in-a-binary-tree', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Find Total Time Spent by Each Employee', 'titleSlug': 'find-total-time-spent-by-each-employee', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Maximum Number of Balls in a Box', 'titleSlug': 'maximum-number-of-balls-in-a-box', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Restore the Array From Adjacent Pairs', 'titleSlug': 'restore-the-array-from-adjacent-pairs', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}]}
{'title': 'Can You Eat Your Favorite Candy on Your Favorite Day?', 'titleSlug': 'can-you-eat-your-favorite-candy-on-your-favorite-day', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Palindrome Partitioning IV', 'titleSlug': 'palindrome-partitioning-iv', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Maximum Subarray Sum After One Operation', 'titleSlug': 'maximum-subarray-sum-after-one-operation', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Leetflex Banned Accounts', 'titleSlug': 'leetflex-banned-accounts', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Sum of Unique Elements', 'titleSlug': 'sum-of-unique-elements', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Maximum Absolute Sum of Any Subarray', 'titleSlug': 'maximum-absolute-sum-of-any-subarray', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Minimum Length of String After Deleting Similar Ends', 'titleSlug': 'minimum-length-of-string-after-deleting-similar-ends', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Maximum Number of Events That Can Be Attended II', 'titleSlug': 'maximum-number-of-events-that-can-be-attended-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Check if Array Is Sorted and Rotated', 'titleSlug': 'check-if-array-is-sorted-and-rotated', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Maximum Score From Removing Stones', 'titleSlug': 'maximum-score-from-removing-stones', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Largest Merge Of Two Strings', 'titleSlug': 'largest-merge-of-two-strings', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Closest Subsequence Sum', 'titleSlug': 'closest-subsequence-sum', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Design Most Recently Used Queue', 'titleSlug': 'design-most-recently-used-queue', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Recyclable and Low Fat Products', 'titleSlug': 'recyclable-and-low-fat-products', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Minimum Changes To Make Alternating Binary String', 'titleSlug': 'minimum-changes-to-make-alternating-binary-string', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Count Number of Homogenous Substrings', 'titleSlug': 'count-number-of-homogenous-substrings', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Minimum Limit of Balls in a Bag', 'titleSlug': 'minimum-limit-of-balls-in-a-bag', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Minimum Degree of a Connected Trio in a Graph', 'titleSlug': 'minimum-degree-of-a-connected-trio-in-a-graph', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Graph', 'slug': 'graph'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Buildings With an Ocean View', 'titleSlug': 'buildings-with-an-ocean-view', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Longest Nice Substring', 'titleSlug': 'longest-nice-substring', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Form Array by Concatenating Subarrays of Another Array', 'titleSlug': 'form-array-by-concatenating-subarrays-of-another-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'String Matching', 'slug': 'string-matching'}]}
{'title': 'Map of Highest Peak', 'titleSlug': 'map-of-highest-peak', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Tree of Coprimes', 'titleSlug': 'tree-of-coprimes', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Find the Subtasks That Did Not Execute', 'titleSlug': 'find-the-subtasks-that-did-not-execute', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Merge Strings Alternately', 'titleSlug': 'merge-strings-alternately', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Minimum Number of Operations to Move All Balls to Each Box', 'titleSlug': 'minimum-number-of-operations-to-move-all-balls-to-each-box', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Maximum Score from Performing Multiplication Operations', 'titleSlug': 'maximum-score-from-performing-multiplication-operations', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Maximize Palindrome Length From Subsequences', 'titleSlug': 'maximize-palindrome-length-from-subsequences', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Sort Features by Popularity', 'titleSlug': 'sort-features-by-popularity', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Count Items Matching a Rule', 'titleSlug': 'count-items-matching-a-rule', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Closest Dessert Cost', 'titleSlug': 'closest-dessert-cost', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Backtracking', 'slug': 'backtracking'}]}
{'title': 'Equal Sum Arrays With Minimum Number of Operations', 'titleSlug': 'equal-sum-arrays-with-minimum-number-of-operations', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Car Fleet II', 'titleSlug': 'car-fleet-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': "Product's Price for Each Store", 'titleSlug': 'products-price-for-each-store', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Shortest Path in a Hidden Grid', 'titleSlug': 'shortest-path-in-a-hidden-grid', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Interactive', 'slug': 'interactive'}]}
{'title': 'Find Nearest Point That Has the Same X or Y Coordinate', 'titleSlug': 'find-nearest-point-that-has-the-same-x-or-y-coordinate', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Check if Number is a Sum of Powers of Three', 'titleSlug': 'check-if-number-is-a-sum-of-powers-of-three', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Sum of Beauty of All Substrings', 'titleSlug': 'sum-of-beauty-of-all-substrings', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Count Pairs Of Nodes', 'titleSlug': 'count-pairs-of-nodes', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Grand Slam Titles', 'titleSlug': 'grand-slam-titles', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Check if Binary String Has at Most One Segment of Ones', 'titleSlug': 'check-if-binary-string-has-at-most-one-segment-of-ones', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Minimum Elements to Add to Form a Given Sum', 'titleSlug': 'minimum-elements-to-add-to-form-a-given-sum', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Number of Restricted Paths From First to Last Node', 'titleSlug': 'number-of-restricted-paths-from-first-to-last-node', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Topological Sort', 'slug': 'topological-sort'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Shortest Path', 'slug': 'shortest-path'}]}
{'title': 'Make the XOR of All Segments Equal to Zero', 'titleSlug': 'make-the-xor-of-all-segments-equal-to-zero', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Maximize the Beauty of the Garden', 'titleSlug': 'maximize-the-beauty-of-the-garden', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Primary Department for Each Employee', 'titleSlug': 'primary-department-for-each-employee', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Check if One String Swap Can Make Strings Equal', 'titleSlug': 'check-if-one-string-swap-can-make-strings-equal', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Find Center of Star Graph', 'titleSlug': 'find-center-of-star-graph', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Maximum Average Pass Ratio', 'titleSlug': 'maximum-average-pass-ratio', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Maximum Score of a Good Subarray', 'titleSlug': 'maximum-score-of-a-good-subarray', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Count Pairs of Equal Substrings With Minimum Difference', 'titleSlug': 'count-pairs-of-equal-substrings-with-minimum-difference', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Rearrange Products Table', 'titleSlug': 'rearrange-products-table', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Second Largest Digit in a String', 'titleSlug': 'second-largest-digit-in-a-string', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Design Authentication Manager', 'titleSlug': 'design-authentication-manager', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Doubly-Linked List', 'slug': 'doubly-linked-list'}]}
{'title': 'Maximum Number of Consecutive Values You Can Make', 'titleSlug': 'maximum-number-of-consecutive-values-you-can-make', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Maximize Score After N Operations', 'titleSlug': 'maximize-score-after-n-operations', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Number Theory', 'slug': 'number-theory'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Maximum Ascending Subarray Sum', 'titleSlug': 'maximum-ascending-subarray-sum', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Number of Orders in the Backlog', 'titleSlug': 'number-of-orders-in-the-backlog', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Maximum Value at a Given Index in a Bounded Array', 'titleSlug': 'maximum-value-at-a-given-index-in-a-bounded-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Count Pairs With XOR in a Range', 'titleSlug': 'count-pairs-with-xor-in-a-range', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Trie', 'slug': 'trie'}]}
{'title': 'Implement Trie II (Prefix Tree)', 'titleSlug': 'implement-trie-ii-prefix-tree', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Trie', 'slug': 'trie'}]}
{'title': 'Number of Different Integers in a String', 'titleSlug': 'number-of-different-integers-in-a-string', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Minimum Number of Operations to Reinitialize a Permutation', 'titleSlug': 'minimum-number-of-operations-to-reinitialize-a-permutation', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Evaluate the Bracket Pairs of a String', 'titleSlug': 'evaluate-the-bracket-pairs-of-a-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Maximize Number of Nice Divisors', 'titleSlug': 'maximize-number-of-nice-divisors', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Recursion', 'slug': 'recursion'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Ad-Free Sessions', 'titleSlug': 'ad-free-sessions', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Minimum Path Cost in a Hidden Grid', 'titleSlug': 'minimum-path-cost-in-a-hidden-grid', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Interactive', 'slug': 'interactive'}, {'name': 'Shortest Path', 'slug': 'shortest-path'}]}
{'title': 'Find Interview Candidates', 'titleSlug': 'find-interview-candidates', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Determine Color of a Chessboard Square', 'titleSlug': 'determine-color-of-a-chessboard-square', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Sentence Similarity III', 'titleSlug': 'sentence-similarity-iii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Count Nice Pairs in an Array', 'titleSlug': 'count-nice-pairs-in-an-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Maximum Number of Groups Getting Fresh Donuts', 'titleSlug': 'maximum-number-of-groups-getting-fresh-donuts', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Memoization', 'slug': 'memoization'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Truncate Sentence', 'titleSlug': 'truncate-sentence', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Finding the Users Active Minutes', 'titleSlug': 'finding-the-users-active-minutes', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}]}
{'title': 'Minimum Absolute Sum Difference', 'titleSlug': 'minimum-absolute-sum-difference', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Number of Different Subsequences GCDs', 'titleSlug': 'number-of-different-subsequences-gcds', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Counting', 'slug': 'counting'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Maximum Number of Accepted Invitations', 'titleSlug': 'maximum-number-of-accepted-invitations', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Find Customers With Positive Revenue this Year', 'titleSlug': 'find-customers-with-positive-revenue-this-year', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Sign of the Product of an Array', 'titleSlug': 'sign-of-the-product-of-an-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}]}
{'title': 'Find the Winner of the Circular Game', 'titleSlug': 'find-the-winner-of-the-circular-game', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Recursion', 'slug': 'recursion'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Minimum Sideway Jumps', 'titleSlug': 'minimum-sideway-jumps', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Finding MK Average', 'titleSlug': 'finding-mk-average', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Design', 'slug': 'design'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Data Stream', 'slug': 'data-stream'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Faulty Sensor', 'titleSlug': 'faulty-sensor', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}]}
{'title': 'Minimum Operations to Make the Array Increasing', 'titleSlug': 'minimum-operations-to-make-the-array-increasing', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Queries on Number of Points Inside a Circle', 'titleSlug': 'queries-on-number-of-points-inside-a-circle', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Geometry', 'slug': 'geometry'}]}
{'title': 'Maximum XOR for Each Query', 'titleSlug': 'maximum-xor-for-each-query', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Minimum Number of Operations to Make String Sorted', 'titleSlug': 'minimum-number-of-operations-to-make-string-sorted', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}]}
{'title': 'Maximum Transaction Each Day', 'titleSlug': 'maximum-transaction-each-day', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Check if the Sentence Is Pangram', 'titleSlug': 'check-if-the-sentence-is-pangram', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Maximum Ice Cream Bars', 'titleSlug': 'maximum-ice-cream-bars', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Counting Sort', 'slug': 'counting-sort'}]}
{'title': 'Single-Threaded CPU', 'titleSlug': 'single-threaded-cpu', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Find XOR Sum of All Pairs Bitwise AND', 'titleSlug': 'find-xor-sum-of-all-pairs-bitwise-and', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Remove Duplicates From an Unsorted Linked List', 'titleSlug': 'remove-duplicates-from-an-unsorted-linked-list', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Linked List', 'slug': 'linked-list'}]}
{'title': 'Sum of Digits in Base K', 'titleSlug': 'sum-of-digits-in-base-k', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Frequency of the Most Frequent Element', 'titleSlug': 'frequency-of-the-most-frequent-element', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Longest Substring Of All Vowels in Order', 'titleSlug': 'longest-substring-of-all-vowels-in-order', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Maximum Building Height', 'titleSlug': 'maximum-building-height', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'League Statistics', 'titleSlug': 'league-statistics', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Next Palindrome Using Same Digits', 'titleSlug': 'next-palindrome-using-same-digits', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Suspicious Bank Accounts', 'titleSlug': 'suspicious-bank-accounts', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Replace All Digits with Characters', 'titleSlug': 'replace-all-digits-with-characters', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Seat Reservation Manager', 'titleSlug': 'seat-reservation-manager', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Design', 'slug': 'design'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Maximum Element After Decreasing and Rearranging', 'titleSlug': 'maximum-element-after-decreasing-and-rearranging', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Closest Room', 'titleSlug': 'closest-room', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Minimum Distance to the Target Element', 'titleSlug': 'minimum-distance-to-the-target-element', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Splitting a String Into Descending Consecutive Values', 'titleSlug': 'splitting-a-string-into-descending-consecutive-values', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Minimum Adjacent Swaps to Reach the Kth Smallest Number', 'titleSlug': 'minimum-adjacent-swaps-to-reach-the-kth-smallest-number', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Minimum Interval to Include Each Query', 'titleSlug': 'minimum-interval-to-include-each-query', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Line Sweep', 'slug': 'line-sweep'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Distinct Numbers in Each Subarray', 'titleSlug': 'distinct-numbers-in-each-subarray', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Convert Date Format', 'titleSlug': 'convert-date-format', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Maximum Population Year', 'titleSlug': 'maximum-population-year', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Counting', 'slug': 'counting'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Maximum Distance Between a Pair of Values', 'titleSlug': 'maximum-distance-between-a-pair-of-values', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Maximum Subarray Min-Product', 'titleSlug': 'maximum-subarray-min-product', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Largest Color Value in a Directed Graph', 'titleSlug': 'largest-color-value-in-a-directed-graph', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Topological Sort', 'slug': 'topological-sort'}, {'name': 'Memoization', 'slug': 'memoization'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Longest Word With All Prefixes', 'titleSlug': 'longest-word-with-all-prefixes', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Trie', 'slug': 'trie'}]}
{'title': 'Sorting the Sentence', 'titleSlug': 'sorting-the-sentence', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Incremental Memory Leak', 'titleSlug': 'incremental-memory-leak', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Rotating the Box', 'titleSlug': 'rotating-the-box', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Sum of Floored Pairs', 'titleSlug': 'sum-of-floored-pairs', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Sum of All Subset XOR Totals', 'titleSlug': 'sum-of-all-subset-xor-totals', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Minimum Number of Swaps to Make the Binary String Alternating', 'titleSlug': 'minimum-number-of-swaps-to-make-the-binary-string-alternating', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Finding Pairs With a Certain Sum', 'titleSlug': 'finding-pairs-with-a-certain-sum', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Design', 'slug': 'design'}]}
{'title': 'Number of Ways to Rearrange Sticks With K Sticks Visible', 'titleSlug': 'number-of-ways-to-rearrange-sticks-with-k-sticks-visible', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}]}
{'title': 'Orders With Maximum Quantity Above Average', 'titleSlug': 'orders-with-maximum-quantity-above-average', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Product of Two Run-Length Encoded Arrays', 'titleSlug': 'product-of-two-run-length-encoded-arrays', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}]}
{'title': 'Longer Contiguous Segments of Ones than Zeros', 'titleSlug': 'longer-contiguous-segments-of-ones-than-zeros', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Minimum Speed to Arrive on Time', 'titleSlug': 'minimum-speed-to-arrive-on-time', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Jump Game VII', 'titleSlug': 'jump-game-vii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Stone Game VIII', 'titleSlug': 'stone-game-viii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}, {'name': 'Game Theory', 'slug': 'game-theory'}]}
{'title': 'Calculate Special Bonus', 'titleSlug': 'calculate-special-bonus', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Minimize Product Sum of Two Arrays', 'titleSlug': 'minimize-product-sum-of-two-arrays', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Group Employees of the Same Salary', 'titleSlug': 'group-employees-of-the-same-salary', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Substrings of Size Three with Distinct Characters', 'titleSlug': 'substrings-of-size-three-with-distinct-characters', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Minimize Maximum Pair Sum in Array', 'titleSlug': 'minimize-maximum-pair-sum-in-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Get Biggest Three Rhombus Sums in a Grid', 'titleSlug': 'get-biggest-three-rhombus-sums-in-a-grid', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Minimum XOR Sum of Two Arrays', 'titleSlug': 'minimum-xor-sum-of-two-arrays', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Check if Word Equals Summation of Two Words', 'titleSlug': 'check-if-word-equals-summation-of-two-words', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Maximum Value after Insertion', 'titleSlug': 'maximum-value-after-insertion', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Process Tasks Using Servers', 'titleSlug': 'process-tasks-using-servers', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Minimum Skips to Arrive at Meeting On Time', 'titleSlug': 'minimum-skips-to-arrive-at-meeting-on-time', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Egg Drop With 2 Eggs and N Floors', 'titleSlug': 'egg-drop-with-2-eggs-and-n-floors', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Count Pairs in Two Arrays', 'titleSlug': 'count-pairs-in-two-arrays', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Determine Whether Matrix Can Be Obtained By Rotation', 'titleSlug': 'determine-whether-matrix-can-be-obtained-by-rotation', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Reduction Operations to Make the Array Elements Equal', 'titleSlug': 'reduction-operations-to-make-the-array-elements-equal', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Minimum Number of Flips to Make the Binary String Alternating', 'titleSlug': 'minimum-number-of-flips-to-make-the-binary-string-alternating', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Minimum Space Wasted From Packaging', 'titleSlug': 'minimum-space-wasted-from-packaging', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'The Latest Login in 2020', 'titleSlug': 'the-latest-login-in-2020', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Cutting Ribbons', 'titleSlug': 'cutting-ribbons', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Page Recommendations II', 'titleSlug': 'page-recommendations-ii', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Check if All the Integers in a Range Are Covered', 'titleSlug': 'check-if-all-the-integers-in-a-range-are-covered', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Find the Student that Will Replace the Chalk', 'titleSlug': 'find-the-student-that-will-replace-the-chalk', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Simulation', 'slug': 'simulation'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Largest Magic Square', 'titleSlug': 'largest-magic-square', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Minimum Cost to Change the Final Value of Expression', 'titleSlug': 'minimum-cost-to-change-the-final-value-of-expression', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Stack', 'slug': 'stack'}]}
{'title': 'Redistribute Characters to Make All Strings Equal', 'titleSlug': 'redistribute-characters-to-make-all-strings-equal', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Maximum Number of Removable Characters', 'titleSlug': 'maximum-number-of-removable-characters', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Merge Triplets to Form Target Triplet', 'titleSlug': 'merge-triplets-to-form-target-triplet', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'The Earliest and Latest Rounds Where Players Compete', 'titleSlug': 'the-earliest-and-latest-rounds-where-players-compete', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Memoization', 'slug': 'memoization'}]}
{'title': 'Find a Peak Element II', 'titleSlug': 'find-a-peak-element-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Depth of BST Given Insertion Order', 'titleSlug': 'depth-of-bst-given-insertion-order', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Largest Odd Number in String', 'titleSlug': 'largest-odd-number-in-string', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'The Number of Full Rounds You Have Played', 'titleSlug': 'the-number-of-full-rounds-you-have-played', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Count Sub Islands', 'titleSlug': 'count-sub-islands', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Minimum Absolute Difference Queries', 'titleSlug': 'minimum-absolute-difference-queries', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}]}
{'title': 'Count Salary Categories', 'titleSlug': 'count-salary-categories', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Game of Nim', 'titleSlug': 'game-of-nim', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Brainteaser', 'slug': 'brainteaser'}, {'name': 'Game Theory', 'slug': 'game-theory'}]}
{'title': 'Remove One Element to Make the Array Strictly Increasing', 'titleSlug': 'remove-one-element-to-make-the-array-strictly-increasing', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Remove All Occurrences of a Substring', 'titleSlug': 'remove-all-occurrences-of-a-substring', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Maximum Alternating Subsequence Sum', 'titleSlug': 'maximum-alternating-subsequence-sum', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Design Movie Rental System', 'titleSlug': 'design-movie-rental-system', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Maximum Product Difference Between Two Pairs', 'titleSlug': 'maximum-product-difference-between-two-pairs', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Cyclically Rotating a Grid', 'titleSlug': 'cyclically-rotating-a-grid', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Number of Wonderful Substrings', 'titleSlug': 'number-of-wonderful-substrings', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Count Ways to Build Rooms in an Ant Colony', 'titleSlug': 'count-ways-to-build-rooms-in-an-ant-colony', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Topological Sort', 'slug': 'topological-sort'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}]}
{'title': 'Leetcodify Friends Recommendations', 'titleSlug': 'leetcodify-friends-recommendations', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Kth Smallest Subarray Sum', 'titleSlug': 'kth-smallest-subarray-sum', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Leetcodify Similar Friends', 'titleSlug': 'leetcodify-similar-friends', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Build Array from Permutation', 'titleSlug': 'build-array-from-permutation', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Eliminate Maximum Number of Monsters', 'titleSlug': 'eliminate-maximum-number-of-monsters', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Count Good Numbers', 'titleSlug': 'count-good-numbers', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Recursion', 'slug': 'recursion'}]}
{'title': 'Longest Common Subpath', 'titleSlug': 'longest-common-subpath', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Rolling Hash', 'slug': 'rolling-hash'}, {'name': 'Suffix Array', 'slug': 'suffix-array'}, {'name': 'Hash Function', 'slug': 'hash-function'}]}
{'title': 'Erect the Fence II', 'titleSlug': 'erect-the-fence-ii', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Geometry', 'slug': 'geometry'}]}
{'title': 'Count Square Sum Triples', 'titleSlug': 'count-square-sum-triples', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Nearest Exit from Entrance in Maze', 'titleSlug': 'nearest-exit-from-entrance-in-maze', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Sum Game', 'titleSlug': 'sum-game', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Game Theory', 'slug': 'game-theory'}]}
{'title': 'Minimum Cost to Reach Destination in Time', 'titleSlug': 'minimum-cost-to-reach-destination-in-time', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Concatenation of Array', 'titleSlug': 'concatenation-of-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Unique Length-3 Palindromic Subsequences', 'titleSlug': 'unique-length-3-palindromic-subsequences', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Painting a Grid With Three Different Colors', 'titleSlug': 'painting-a-grid-with-three-different-colors', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Merge BSTs to Create Single BST', 'titleSlug': 'merge-bsts-to-create-single-bst', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Check if String Is Decomposable Into Value-Equal Substrings', 'titleSlug': 'check-if-string-is-decomposable-into-value-equal-substrings', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Confirmation Rate', 'titleSlug': 'confirmation-rate', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Maximum Number of Words You Can Type', 'titleSlug': 'maximum-number-of-words-you-can-type', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Add Minimum Number of Rungs', 'titleSlug': 'add-minimum-number-of-rungs', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Maximum Number of Points with Cost', 'titleSlug': 'maximum-number-of-points-with-cost', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Maximum Genetic Difference Query', 'titleSlug': 'maximum-genetic-difference-query', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Trie', 'slug': 'trie'}]}
{'title': 'Users That Actively Request Confirmation Messages', 'titleSlug': 'users-that-actively-request-confirmation-messages', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Longest Common Subsequence Between Sorted Arrays', 'titleSlug': 'longest-common-subsequence-between-sorted-arrays', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Check if All Characters Have Equal Number of Occurrences', 'titleSlug': 'check-if-all-characters-have-equal-number-of-occurrences', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'The Number of the Smallest Unoccupied Chair', 'titleSlug': 'the-number-of-the-smallest-unoccupied-chair', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Describe the Painting', 'titleSlug': 'describe-the-painting', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Number of Visible People in a Queue', 'titleSlug': 'number-of-visible-people-in-a-queue', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Sum of Digits of String After Convert', 'titleSlug': 'sum-of-digits-of-string-after-convert', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Largest Number After Mutating Substring', 'titleSlug': 'largest-number-after-mutating-substring', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Maximum Compatibility Score Sum', 'titleSlug': 'maximum-compatibility-score-sum', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Delete Duplicate Folders in System', 'titleSlug': 'delete-duplicate-folders-in-system', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Trie', 'slug': 'trie'}, {'name': 'Hash Function', 'slug': 'hash-function'}]}
{'title': 'Strong Friendship', 'titleSlug': 'strong-friendship', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Maximum of Minimum Values in All Subarrays', 'titleSlug': 'maximum-of-minimum-values-in-all-subarrays', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'All the Pairs With the Maximum Number of Common Followers', 'titleSlug': 'all-the-pairs-with-the-maximum-number-of-common-followers', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Three Divisors', 'titleSlug': 'three-divisors', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Enumeration', 'slug': 'enumeration'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Maximum Number of Weeks for Which You Can Work', 'titleSlug': 'maximum-number-of-weeks-for-which-you-can-work', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Minimum Garden Perimeter to Collect Enough Apples', 'titleSlug': 'minimum-garden-perimeter-to-collect-enough-apples', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Count Number of Special Subsequences', 'titleSlug': 'count-number-of-special-subsequences', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Minimum Time For K Virus Variants to Spread', 'titleSlug': 'minimum-time-for-k-virus-variants-to-spread', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Geometry', 'slug': 'geometry'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Delete Characters to Make Fancy String', 'titleSlug': 'delete-characters-to-make-fancy-string', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Check if Move is Legal', 'titleSlug': 'check-if-move-is-legal', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Minimum Total Space Wasted With K Resizing Operations', 'titleSlug': 'minimum-total-space-wasted-with-k-resizing-operations', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Maximum Product of the Length of Two Palindromic Substrings', 'titleSlug': 'maximum-product-of-the-length-of-two-palindromic-substrings', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Rolling Hash', 'slug': 'rolling-hash'}, {'name': 'Hash Function', 'slug': 'hash-function'}]}
{'title': 'Check If String Is a Prefix of Array', 'titleSlug': 'check-if-string-is-a-prefix-of-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Remove Stones to Minimize the Total', 'titleSlug': 'remove-stones-to-minimize-the-total', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Minimum Number of Swaps to Make the String Balanced', 'titleSlug': 'minimum-number-of-swaps-to-make-the-string-balanced', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Find the Longest Valid Obstacle Course at Each Position', 'titleSlug': 'find-the-longest-valid-obstacle-course-at-each-position', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}]}
{'title': 'Employees With Missing Information', 'titleSlug': 'employees-with-missing-information', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Binary Searchable Numbers in an Unsorted Array', 'titleSlug': 'binary-searchable-numbers-in-an-unsorted-array', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Number of Strings That Appear as Substrings in Word', 'titleSlug': 'number-of-strings-that-appear-as-substrings-in-word', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Array With Elements Not Equal to Average of Neighbors', 'titleSlug': 'array-with-elements-not-equal-to-average-of-neighbors', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Minimum Non-Zero Product of the Array Elements', 'titleSlug': 'minimum-non-zero-product-of-the-array-elements', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Recursion', 'slug': 'recursion'}]}
{'title': 'Last Day Where You Can Still Cross', 'titleSlug': 'last-day-where-you-can-still-cross', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Find if Path Exists in Graph', 'titleSlug': 'find-if-path-exists-in-graph', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'First and Last Call On the Same Day', 'titleSlug': 'first-and-last-call-on-the-same-day', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Count Nodes Equal to Sum of Descendants', 'titleSlug': 'count-nodes-equal-to-sum-of-descendants', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Minimum Time to Type Word Using Special Typewriter', 'titleSlug': 'minimum-time-to-type-word-using-special-typewriter', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Maximum Matrix Sum', 'titleSlug': 'maximum-matrix-sum', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Number of Ways to Arrive at Destination', 'titleSlug': 'number-of-ways-to-arrive-at-destination', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Topological Sort', 'slug': 'topological-sort'}, {'name': 'Shortest Path', 'slug': 'shortest-path'}]}
{'title': 'Number of Ways to Separate Numbers', 'titleSlug': 'number-of-ways-to-separate-numbers', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Suffix Array', 'slug': 'suffix-array'}]}
{'title': 'Employees Whose Manager Left the Company', 'titleSlug': 'employees-whose-manager-left-the-company', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Find Greatest Common Divisor of Array', 'titleSlug': 'find-greatest-common-divisor-of-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Find Unique Binary String', 'titleSlug': 'find-unique-binary-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Backtracking', 'slug': 'backtracking'}]}
{'title': 'Minimize the Difference Between Target and Chosen Elements', 'titleSlug': 'minimize-the-difference-between-target-and-chosen-elements', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Find Array Given Subset Sums', 'titleSlug': 'find-array-given-subset-sums', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}]}
{'title': 'Widest Pair of Indices With Equal Range Sum', 'titleSlug': 'widest-pair-of-indices-with-equal-range-sum', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Minimum Difference Between Highest and Lowest of K Scores', 'titleSlug': 'minimum-difference-between-highest-and-lowest-of-k-scores', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Find the Kth Largest Integer in the Array', 'titleSlug': 'find-the-kth-largest-integer-in-the-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Quickselect', 'slug': 'quickselect'}]}
{'title': 'Minimum Number of Work Sessions to Finish the Tasks', 'titleSlug': 'minimum-number-of-work-sessions-to-finish-the-tasks', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Number of Unique Good Subsequences', 'titleSlug': 'number-of-unique-good-subsequences', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Find Cutoff Score for Each School', 'titleSlug': 'find-cutoff-score-for-each-school', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Maximum Number of People That Can Be Caught in Tag', 'titleSlug': 'maximum-number-of-people-that-can-be-caught-in-tag', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Count the Number of Experiments', 'titleSlug': 'count-the-number-of-experiments', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Find the Middle Index in Array', 'titleSlug': 'find-the-middle-index-in-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Find All Groups of Farmland', 'titleSlug': 'find-all-groups-of-farmland', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Operations on Tree', 'titleSlug': 'operations-on-tree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Design', 'slug': 'design'}]}
{'title': 'The Number of Good Subsets', 'titleSlug': 'the-number-of-good-subsets', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Counting', 'slug': 'counting'}, {'name': 'Number Theory', 'slug': 'number-theory'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Count Special Quadruplets', 'titleSlug': 'count-special-quadruplets', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'The Number of Weak Characters in the Game', 'titleSlug': 'the-number-of-weak-characters-in-the-game', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'First Day Where You Have Been in All the Rooms', 'titleSlug': 'first-day-where-you-have-been-in-all-the-rooms', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'GCD Sort of an Array', 'titleSlug': 'gcd-sort-of-an-array', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Smallest Greater Multiple Made of Two Digits', 'titleSlug': 'smallest-greater-multiple-made-of-two-digits', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Reverse Prefix of Word', 'titleSlug': 'reverse-prefix-of-word', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}]}
{'title': 'Number of Pairs of Interchangeable Rectangles', 'titleSlug': 'number-of-pairs-of-interchangeable-rectangles', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Counting', 'slug': 'counting'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Maximum Product of the Length of Two Palindromic Subsequences', 'titleSlug': 'maximum-product-of-the-length-of-two-palindromic-subsequences', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Smallest Missing Genetic Value in Each Subtree', 'titleSlug': 'smallest-missing-genetic-value-in-each-subtree', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}]}
{'title': 'The Number of Seniors and Juniors to Join the Company', 'titleSlug': 'the-number-of-seniors-and-juniors-to-join-the-company', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Subtree Removal Game with Fibonacci Tree', 'titleSlug': 'subtree-removal-game-with-fibonacci-tree', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}, {'name': 'Game Theory', 'slug': 'game-theory'}]}
{'title': 'Count Number of Pairs With Absolute Difference K', 'titleSlug': 'count-number-of-pairs-with-absolute-difference-k', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Find Original Array From Doubled Array', 'titleSlug': 'find-original-array-from-doubled-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Maximum Earnings From Taxi', 'titleSlug': 'maximum-earnings-from-taxi', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Minimum Number of Operations to Make Array Continuous', 'titleSlug': 'minimum-number-of-operations-to-make-array-continuous', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'The Number of Seniors and Juniors to Join the Company II', 'titleSlug': 'the-number-of-seniors-and-juniors-to-join-the-company-ii', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Final Value of Variable After Performing Operations', 'titleSlug': 'final-value-of-variable-after-performing-operations', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Sum of Beauty in the Array', 'titleSlug': 'sum-of-beauty-in-the-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Detect Squares', 'titleSlug': 'detect-squares', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Longest Subsequence Repeated k Times', 'titleSlug': 'longest-subsequence-repeated-k-times', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Counting', 'slug': 'counting'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Average Height of Buildings in Each Segment', 'titleSlug': 'average-height-of-buildings-in-each-segment', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Maximum Difference Between Increasing Elements', 'titleSlug': 'maximum-difference-between-increasing-elements', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Grid Game', 'titleSlug': 'grid-game', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Check if Word Can Be Placed In Crossword', 'titleSlug': 'check-if-word-can-be-placed-in-crossword', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'The Score of Students Solving Math Expression', 'titleSlug': 'the-score-of-students-solving-math-expression', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Memoization', 'slug': 'memoization'}]}
{'title': 'Number of Accounts That Did Not Stream', 'titleSlug': 'number-of-accounts-that-did-not-stream', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Brightest Position on Street', 'titleSlug': 'brightest-position-on-street', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Convert 1D Array Into 2D Array', 'titleSlug': 'convert-1d-array-into-2d-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Number of Pairs of Strings With Concatenation Equal to Target', 'titleSlug': 'number-of-pairs-of-strings-with-concatenation-equal-to-target', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Maximize the Confusion of an Exam', 'titleSlug': 'maximize-the-confusion-of-an-exam', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Maximum Number of Ways to Partition an Array', 'titleSlug': 'maximum-number-of-ways-to-partition-an-array', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Counting', 'slug': 'counting'}, {'name': 'Enumeration', 'slug': 'enumeration'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Low-Quality Problems', 'titleSlug': 'low-quality-problems', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Minimum Moves to Convert String', 'titleSlug': 'minimum-moves-to-convert-string', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Find Missing Observations', 'titleSlug': 'find-missing-observations', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Stone Game IX', 'titleSlug': 'stone-game-ix', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Counting', 'slug': 'counting'}, {'name': 'Game Theory', 'slug': 'game-theory'}]}
{'title': 'Smallest K-Length Subsequence With Occurrences of a Letter', 'titleSlug': 'smallest-k-length-subsequence-with-occurrences-of-a-letter', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Count Subarrays With More Ones Than Zeros', 'titleSlug': 'count-subarrays-with-more-ones-than-zeros', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Merge Sort', 'slug': 'merge-sort'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Two Out of Three', 'titleSlug': 'two-out-of-three', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Minimum Operations to Make a Uni-Value Grid', 'titleSlug': 'minimum-operations-to-make-a-uni-value-grid', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Stock Price Fluctuation ', 'titleSlug': 'stock-price-fluctuation', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Data Stream', 'slug': 'data-stream'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Partition Array Into Two Arrays to Minimize Sum Difference', 'titleSlug': 'partition-array-into-two-arrays-to-minimize-sum-difference', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Maximum Alternating Subarray Sum', 'titleSlug': 'maximum-alternating-subarray-sum', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Minimum Number of Moves to Seat Everyone', 'titleSlug': 'minimum-number-of-moves-to-seat-everyone', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Counting Sort', 'slug': 'counting-sort'}]}
{'title': 'Remove Colored Pieces if Both Neighbors are the Same Color', 'titleSlug': 'remove-colored-pieces-if-both-neighbors-are-the-same-color', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Game Theory', 'slug': 'game-theory'}]}
{'title': 'The Time When the Network Becomes Idle', 'titleSlug': 'the-time-when-the-network-becomes-idle', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Kth Smallest Product of Two Sorted Arrays', 'titleSlug': 'kth-smallest-product-of-two-sorted-arrays', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Accepted Candidates From the Interviews', 'titleSlug': 'accepted-candidates-from-the-interviews', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Check if Numbers Are Ascending in a Sentence', 'titleSlug': 'check-if-numbers-are-ascending-in-a-sentence', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Simple Bank System', 'titleSlug': 'simple-bank-system', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Count Number of Maximum Bitwise-OR Subsets', 'titleSlug': 'count-number-of-maximum-bitwise-or-subsets', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Second Minimum Time to Reach Destination', 'titleSlug': 'second-minimum-time-to-reach-destination', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Shortest Path', 'slug': 'shortest-path'}]}
{'title': 'Sort Linked List Already Sorted Using Absolute Values', 'titleSlug': 'sort-linked-list-already-sorted-using-absolute-values', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Number of Valid Words in a Sentence', 'titleSlug': 'number-of-valid-words-in-a-sentence', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Next Greater Numerically Balanced Number', 'titleSlug': 'next-greater-numerically-balanced-number', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Counting', 'slug': 'counting'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Count Nodes With the Highest Score', 'titleSlug': 'count-nodes-with-the-highest-score', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Parallel Courses III', 'titleSlug': 'parallel-courses-iii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Topological Sort', 'slug': 'topological-sort'}]}
{'title': 'The Category of Each Member in the Store', 'titleSlug': 'the-category-of-each-member-in-the-store', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Minimum Cost to Separate Sentence Into Rows', 'titleSlug': 'minimum-cost-to-separate-sentence-into-rows', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Kth Distinct String in an Array', 'titleSlug': 'kth-distinct-string-in-an-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Two Best Non-Overlapping Events', 'titleSlug': 'two-best-non-overlapping-events', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Plates Between Candles', 'titleSlug': 'plates-between-candles', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Number of Valid Move Combinations On Chessboard', 'titleSlug': 'number-of-valid-move-combinations-on-chessboard', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Smallest Index With Equal Value', 'titleSlug': 'smallest-index-with-equal-value', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Find the Minimum and Maximum Number of Nodes Between Critical Points', 'titleSlug': 'find-the-minimum-and-maximum-number-of-nodes-between-critical-points', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}]}
{'title': 'Minimum Operations to Convert Number', 'titleSlug': 'minimum-operations-to-convert-number', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}]}
{'title': 'Check if an Original String Exists Given Two Encoded Strings', 'titleSlug': 'check-if-an-original-string-exists-given-two-encoded-strings', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Number of Spaces Cleaning Robot Cleaned', 'titleSlug': 'number-of-spaces-cleaning-robot-cleaned', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Count Vowel Substrings of a String', 'titleSlug': 'count-vowel-substrings-of-a-string', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Vowels of All Substrings', 'titleSlug': 'vowels-of-all-substrings', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}]}
{'title': 'Minimized Maximum of Products Distributed to Any Store', 'titleSlug': 'minimized-maximum-of-products-distributed-to-any-store', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Maximum Path Quality of a Graph', 'titleSlug': 'maximum-path-quality-of-a-graph', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Account Balance', 'titleSlug': 'account-balance', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Number of Equal Count Substrings', 'titleSlug': 'number-of-equal-count-substrings', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Check Whether Two Strings are Almost Equivalent', 'titleSlug': 'check-whether-two-strings-are-almost-equivalent', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Walking Robot Simulation II', 'titleSlug': 'walking-robot-simulation-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Design', 'slug': 'design'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Most Beautiful Item for Each Query', 'titleSlug': 'most-beautiful-item-for-each-query', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Maximum Number of Tasks You Can Assign', 'titleSlug': 'maximum-number-of-tasks-you-can-assign', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Monotonic Queue', 'slug': 'monotonic-queue'}]}
{'title': 'The Winner University', 'titleSlug': 'the-winner-university', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Time Needed to Buy Tickets', 'titleSlug': 'time-needed-to-buy-tickets', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Reverse Nodes in Even Length Groups', 'titleSlug': 'reverse-nodes-in-even-length-groups', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}]}
{'title': 'Decode the Slanted Ciphertext', 'titleSlug': 'decode-the-slanted-ciphertext', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Process Restricted Friend Requests', 'titleSlug': 'process-restricted-friend-requests', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Paths in Maze That Lead to Same Room', 'titleSlug': 'paths-in-maze-that-lead-to-same-room', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Two Furthest Houses With Different Colors', 'titleSlug': 'two-furthest-houses-with-different-colors', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Watering Plants', 'titleSlug': 'watering-plants', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Range Frequency Queries', 'titleSlug': 'range-frequency-queries', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}]}
{'title': 'Sum of k-Mirror Numbers', 'titleSlug': 'sum-of-k-mirror-numbers', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'The Number of Rich Customers', 'titleSlug': 'the-number-of-rich-customers', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Substrings That Begin and End With the Same Letter', 'titleSlug': 'substrings-that-begin-and-end-with-the-same-letter', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Drop Type 1 Orders for Customers With Type 0 Orders', 'titleSlug': 'drop-type-1-orders-for-customers-with-type-0-orders', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Count Common Words With One Occurrence', 'titleSlug': 'count-common-words-with-one-occurrence', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Minimum Number of Food Buckets to Feed the Hamsters', 'titleSlug': 'minimum-number-of-food-buckets-to-feed-the-hamsters', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Minimum Cost Homecoming of a Robot in a Grid', 'titleSlug': 'minimum-cost-homecoming-of-a-robot-in-a-grid', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Count Fertile Pyramids in a Land', 'titleSlug': 'count-fertile-pyramids-in-a-land', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Find Target Indices After Sorting Array', 'titleSlug': 'find-target-indices-after-sorting-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'K Radius Subarray Averages', 'titleSlug': 'k-radius-subarray-averages', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Removing Minimum and Maximum From Array', 'titleSlug': 'removing-minimum-and-maximum-from-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Find All People With Secret', 'titleSlug': 'find-all-people-with-secret', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Minimum Cost to Reach City With Discounts', 'titleSlug': 'minimum-cost-to-reach-city-with-discounts', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Graph', 'slug': 'graph'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Shortest Path', 'slug': 'shortest-path'}]}
{'title': 'Finding 3-Digit Even Numbers', 'titleSlug': 'finding-3-digit-even-numbers', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Delete the Middle Node of a Linked List', 'titleSlug': 'delete-the-middle-node-of-a-linked-list', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}]}
{'title': 'Step-By-Step Directions From a Binary Tree Node to Another', 'titleSlug': 'step-by-step-directions-from-a-binary-tree-node-to-another', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Valid Arrangement of Pairs', 'titleSlug': 'valid-arrangement-of-pairs', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Eulerian Circuit', 'slug': 'eulerian-circuit'}]}
{'title': 'Subsequence of Size K With the Largest Even Sum', 'titleSlug': 'subsequence-of-size-k-with-the-largest-even-sum', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Find Subsequence of Length K With the Largest Sum', 'titleSlug': 'find-subsequence-of-length-k-with-the-largest-sum', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Find Good Days to Rob the Bank', 'titleSlug': 'find-good-days-to-rob-the-bank', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Detonate the Maximum Bombs', 'titleSlug': 'detonate-the-maximum-bombs', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Geometry', 'slug': 'geometry'}]}
{'title': 'Sequentially Ordinal Rank Tracker', 'titleSlug': 'sequentially-ordinal-rank-tracker', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Design', 'slug': 'design'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Data Stream', 'slug': 'data-stream'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Rings and Rods', 'titleSlug': 'rings-and-rods', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Sum of Subarray Ranges', 'titleSlug': 'sum-of-subarray-ranges', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Watering Plants II', 'titleSlug': 'watering-plants-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Maximum Fruits Harvested After at Most K Steps', 'titleSlug': 'maximum-fruits-harvested-after-at-most-k-steps', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Number of Unique Flavors After Sharing K Candies', 'titleSlug': 'number-of-unique-flavors-after-sharing-k-candies', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Find First Palindromic String in the Array', 'titleSlug': 'find-first-palindromic-string-in-the-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Adding Spaces to a String', 'titleSlug': 'adding-spaces-to-a-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Number of Smooth Descent Periods of a Stock', 'titleSlug': 'number-of-smooth-descent-periods-of-a-stock', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Minimum Operations to Make the Array K-Increasing', 'titleSlug': 'minimum-operations-to-make-the-array-k-increasing', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'The Airport With the Most Traffic', 'titleSlug': 'the-airport-with-the-most-traffic', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Elements in Array After Removing and Replacing Elements', 'titleSlug': 'elements-in-array-after-removing-and-replacing-elements', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Maximum Number of Words Found in Sentences', 'titleSlug': 'maximum-number-of-words-found-in-sentences', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Find All Possible Recipes from Given Supplies', 'titleSlug': 'find-all-possible-recipes-from-given-supplies', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Topological Sort', 'slug': 'topological-sort'}]}
{'title': 'Check if a Parentheses String Can Be Valid', 'titleSlug': 'check-if-a-parentheses-string-can-be-valid', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Abbreviating the Product of a Range', 'titleSlug': 'abbreviating-the-product-of-a-range', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Build the Equation', 'titleSlug': 'build-the-equation', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'A Number After a Double Reversal', 'titleSlug': 'a-number-after-a-double-reversal', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Execution of All Suffix Instructions Staying in a Grid', 'titleSlug': 'execution-of-all-suffix-instructions-staying-in-a-grid', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Intervals Between Identical Elements', 'titleSlug': 'intervals-between-identical-elements', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Recover the Original Array', 'titleSlug': 'recover-the-original-array', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Minimum Operations to Remove Adjacent Ones in Matrix', 'titleSlug': 'minimum-operations-to-remove-adjacent-ones-in-matrix', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': "Check if All A's Appears Before All B's", 'titleSlug': 'check-if-all-as-appears-before-all-bs', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Number of Laser Beams in a Bank', 'titleSlug': 'number-of-laser-beams-in-a-bank', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Destroying Asteroids', 'titleSlug': 'destroying-asteroids', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Maximum Employees to Be Invited to a Meeting', 'titleSlug': 'maximum-employees-to-be-invited-to-a-meeting', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Topological Sort', 'slug': 'topological-sort'}]}
{'title': 'Remove All Ones With Row and Column Flips', 'titleSlug': 'remove-all-ones-with-row-and-column-flips', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Capitalize the Title', 'titleSlug': 'capitalize-the-title', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Maximum Twin Sum of a Linked List', 'titleSlug': 'maximum-twin-sum-of-a-linked-list', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Stack', 'slug': 'stack'}]}
{'title': 'Longest Palindrome by Concatenating Two Letter Words', 'titleSlug': 'longest-palindrome-by-concatenating-two-letter-words', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Stamping the Grid', 'titleSlug': 'stamping-the-grid', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Check if Every Row and Column Contains All Numbers', 'titleSlug': 'check-if-every-row-and-column-contains-all-numbers', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': "Minimum Swaps to Group All 1's Together II", 'titleSlug': 'minimum-swaps-to-group-all-1s-together-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Count Words Obtained After Adding a Letter', 'titleSlug': 'count-words-obtained-after-adding-a-letter', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Earliest Possible Day of Full Bloom', 'titleSlug': 'earliest-possible-day-of-full-bloom', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Pour Water Between Buckets to Make Water Levels Equal', 'titleSlug': 'pour-water-between-buckets-to-make-water-levels-equal', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Divide a String Into Groups of Size k', 'titleSlug': 'divide-a-string-into-groups-of-size-k', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Minimum Moves to Reach Target Score', 'titleSlug': 'minimum-moves-to-reach-target-score', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Solving Questions With Brainpower', 'titleSlug': 'solving-questions-with-brainpower', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Maximum Running Time of N Computers', 'titleSlug': 'maximum-running-time-of-n-computers', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'The Number of Passengers in Each Bus I', 'titleSlug': 'the-number-of-passengers-in-each-bus-i', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Choose Numbers From Two Arrays in Range', 'titleSlug': 'choose-numbers-from-two-arrays-in-range', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Minimum Cost of Buying Candies With Discount', 'titleSlug': 'minimum-cost-of-buying-candies-with-discount', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Count the Hidden Sequences', 'titleSlug': 'count-the-hidden-sequences', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'K Highest Ranked Items Within a Price Range', 'titleSlug': 'k-highest-ranked-items-within-a-price-range', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Number of Ways to Divide a Long Corridor', 'titleSlug': 'number-of-ways-to-divide-a-long-corridor', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Count Elements With Strictly Smaller and Greater Elements ', 'titleSlug': 'count-elements-with-strictly-smaller-and-greater-elements', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Rearrange Array Elements by Sign', 'titleSlug': 'rearrange-array-elements-by-sign', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Find All Lonely Numbers in the Array', 'titleSlug': 'find-all-lonely-numbers-in-the-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Maximum Good People Based on Statements', 'titleSlug': 'maximum-good-people-based-on-statements', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Minimum Number of Lines to Cover Points', 'titleSlug': 'minimum-number-of-lines-to-cover-points', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Geometry', 'slug': 'geometry'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'The Number of Passengers in Each Bus II', 'titleSlug': 'the-number-of-passengers-in-each-bus-ii', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Keep Multiplying Found Values by Two', 'titleSlug': 'keep-multiplying-found-values-by-two', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'All Divisions With the Highest Score of a Binary Array', 'titleSlug': 'all-divisions-with-the-highest-score-of-a-binary-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Find Substring With Given Hash Value', 'titleSlug': 'find-substring-with-given-hash-value', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Rolling Hash', 'slug': 'rolling-hash'}, {'name': 'Hash Function', 'slug': 'hash-function'}]}
{'title': 'Groups of Strings', 'titleSlug': 'groups-of-strings', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Union Find', 'slug': 'union-find'}]}
{'title': 'Amount of New Area Painted Each Day', 'titleSlug': 'amount-of-new-area-painted-each-day', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Order Two Columns Independently', 'titleSlug': 'order-two-columns-independently', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Minimum Sum of Four Digit Number After Splitting Digits', 'titleSlug': 'minimum-sum-of-four-digit-number-after-splitting-digits', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Partition Array According to Given Pivot', 'titleSlug': 'partition-array-according-to-given-pivot', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Minimum Cost to Set Cooking Time', 'titleSlug': 'minimum-cost-to-set-cooking-time', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Minimum Difference in Sums After Removal of Elements', 'titleSlug': 'minimum-difference-in-sums-after-removal-of-elements', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Sort Even and Odd Indices Independently', 'titleSlug': 'sort-even-and-odd-indices-independently', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Smallest Value of the Rearranged Number', 'titleSlug': 'smallest-value-of-the-rearranged-number', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Design Bitset', 'titleSlug': 'design-bitset', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Design', 'slug': 'design'}]}
{'title': 'Minimum Time to Remove All Cars Containing Illegal Goods', 'titleSlug': 'minimum-time-to-remove-all-cars-containing-illegal-goods', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Unique Substrings With Equal Digit Frequency', 'titleSlug': 'unique-substrings-with-equal-digit-frequency', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Rolling Hash', 'slug': 'rolling-hash'}, {'name': 'Counting', 'slug': 'counting'}, {'name': 'Hash Function', 'slug': 'hash-function'}]}
{'title': 'Count Operations to Obtain Zero', 'titleSlug': 'count-operations-to-obtain-zero', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Minimum Operations to Make the Array Alternating', 'titleSlug': 'minimum-operations-to-make-the-array-alternating', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Removing Minimum Number of Magic Beans', 'titleSlug': 'removing-minimum-number-of-magic-beans', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Enumeration', 'slug': 'enumeration'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Maximum AND Sum of Array', 'titleSlug': 'maximum-and-sum-of-array', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Longest Winning Streak', 'titleSlug': 'longest-winning-streak', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Remove All Ones With Row and Column Flips II', 'titleSlug': 'remove-all-ones-with-row-and-column-flips-ii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'The Change in Global Rankings', 'titleSlug': 'the-change-in-global-rankings', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Count Equal and Divisible Pairs in an Array', 'titleSlug': 'count-equal-and-divisible-pairs-in-an-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Find Three Consecutive Integers That Sum to a Given Number', 'titleSlug': 'find-three-consecutive-integers-that-sum-to-a-given-number', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Maximum Split of Positive Even Integers', 'titleSlug': 'maximum-split-of-positive-even-integers', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Count Good Triplets in an Array', 'titleSlug': 'count-good-triplets-in-an-array', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Merge Sort', 'slug': 'merge-sort'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Count Integers With Even Digit Sum', 'titleSlug': 'count-integers-with-even-digit-sum', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Merge Nodes in Between Zeros', 'titleSlug': 'merge-nodes-in-between-zeros', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Construct String With Repeat Limit', 'titleSlug': 'construct-string-with-repeat-limit', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Count Array Pairs Divisible by K', 'titleSlug': 'count-array-pairs-divisible-by-k', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Number of Ways to Build Sturdy Brick Wall', 'titleSlug': 'number-of-ways-to-build-sturdy-brick-wall', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Counting Words With a Given Prefix', 'titleSlug': 'counting-words-with-a-given-prefix', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'String Matching', 'slug': 'string-matching'}]}
{'title': 'Minimum Number of Steps to Make Two Strings Anagram II', 'titleSlug': 'minimum-number-of-steps-to-make-two-strings-anagram-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Minimum Time to Complete Trips', 'titleSlug': 'minimum-time-to-complete-trips', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Minimum Time to Finish the Race', 'titleSlug': 'minimum-time-to-finish-the-race', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Number of Ways to Build House of Cards', 'titleSlug': 'number-of-ways-to-build-house-of-cards', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Most Frequent Number Following Key In an Array', 'titleSlug': 'most-frequent-number-following-key-in-an-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Sort the Jumbled Numbers', 'titleSlug': 'sort-the-jumbled-numbers', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'All Ancestors of a Node in a Directed Acyclic Graph', 'titleSlug': 'all-ancestors-of-a-node-in-a-directed-acyclic-graph', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Topological Sort', 'slug': 'topological-sort'}]}
{'title': 'Minimum Number of Moves to Make Palindrome', 'titleSlug': 'minimum-number-of-moves-to-make-palindrome', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}]}
{'title': 'Cells in a Range on an Excel Sheet', 'titleSlug': 'cells-in-a-range-on-an-excel-sheet', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Append K Integers With Minimal Sum', 'titleSlug': 'append-k-integers-with-minimal-sum', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Create Binary Tree From Descriptions', 'titleSlug': 'create-binary-tree-from-descriptions', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Replace Non-Coprime Numbers in Array', 'titleSlug': 'replace-non-coprime-numbers-in-array', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Number of Single Divisor Triplets', 'titleSlug': 'number-of-single-divisor-triplets', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Finding the Topic of Each Post', 'titleSlug': 'finding-the-topic-of-each-post', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Find All K-Distant Indices in an Array', 'titleSlug': 'find-all-k-distant-indices-in-an-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}]}
{'title': 'Count Artifacts That Can Be Extracted', 'titleSlug': 'count-artifacts-that-can-be-extracted', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Maximize the Topmost Element After K Moves', 'titleSlug': 'maximize-the-topmost-element-after-k-moves', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Minimum Weighted Subgraph With the Required Paths', 'titleSlug': 'minimum-weighted-subgraph-with-the-required-paths', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Graph', 'slug': 'graph'}, {'name': 'Shortest Path', 'slug': 'shortest-path'}]}
{'title': 'Distance to a Cycle in Undirected Graph', 'titleSlug': 'distance-to-a-cycle-in-undirected-graph', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'The Number of Users That Are Eligible for Discount', 'titleSlug': 'the-number-of-users-that-are-eligible-for-discount', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Divide Array Into Equal Pairs', 'titleSlug': 'divide-array-into-equal-pairs', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Maximize Number of Subsequences in a String', 'titleSlug': 'maximize-number-of-subsequences-in-a-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Minimum Operations to Halve Array Sum', 'titleSlug': 'minimum-operations-to-halve-array-sum', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Minimum White Tiles After Covering With Carpets', 'titleSlug': 'minimum-white-tiles-after-covering-with-carpets', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Count Hills and Valleys in an Array', 'titleSlug': 'count-hills-and-valleys-in-an-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Count Collisions on a Road', 'titleSlug': 'count-collisions-on-a-road', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Maximum Points in an Archery Competition', 'titleSlug': 'maximum-points-in-an-archery-competition', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Longest Substring of One Repeating Character', 'titleSlug': 'longest-substring-of-one-repeating-character', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Minimum Health to Beat Game', 'titleSlug': 'minimum-health-to-beat-game', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Find the Difference of Two Arrays', 'titleSlug': 'find-the-difference-of-two-arrays', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}]}
{'title': 'Minimum Deletions to Make Array Beautiful', 'titleSlug': 'minimum-deletions-to-make-array-beautiful', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Find Palindrome With Fixed Length', 'titleSlug': 'find-palindrome-with-fixed-length', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}]}
{'title': 'Maximum Value of K Coins From Piles', 'titleSlug': 'maximum-value-of-k-coins-from-piles', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Maximum Sum Score of Array', 'titleSlug': 'maximum-sum-score-of-array', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Minimum Bit Flips to Convert Number', 'titleSlug': 'minimum-bit-flips-to-convert-number', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Find Triangular Sum of an Array', 'titleSlug': 'find-triangular-sum-of-an-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Simulation', 'slug': 'simulation'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}]}
{'title': 'Number of Ways to Select Buildings', 'titleSlug': 'number-of-ways-to-select-buildings', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Sum of Scores of Built Strings', 'titleSlug': 'sum-of-scores-of-built-strings', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Rolling Hash', 'slug': 'rolling-hash'}, {'name': 'Suffix Array', 'slug': 'suffix-array'}, {'name': 'String Matching', 'slug': 'string-matching'}, {'name': 'Hash Function', 'slug': 'hash-function'}]}
{'title': 'Minimum Number of Operations to Convert Time', 'titleSlug': 'minimum-number-of-operations-to-convert-time', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Find Players With Zero or One Losses', 'titleSlug': 'find-players-with-zero-or-one-losses', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Maximum Candies Allocated to K Children', 'titleSlug': 'maximum-candies-allocated-to-k-children', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Encrypt and Decrypt Strings', 'titleSlug': 'encrypt-and-decrypt-strings', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Trie', 'slug': 'trie'}]}
{'title': 'Users With Two Purchases Within Seven Days', 'titleSlug': 'users-with-two-purchases-within-seven-days', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Check if an Array Is Consecutive', 'titleSlug': 'check-if-an-array-is-consecutive', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'The Users That Are Eligible for Discount', 'titleSlug': 'the-users-that-are-eligible-for-discount', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Largest Number After Digit Swaps by Parity', 'titleSlug': 'largest-number-after-digit-swaps-by-parity', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Minimize Result by Adding Parentheses to Expression', 'titleSlug': 'minimize-result-by-adding-parentheses-to-expression', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Maximum Product After K Increments', 'titleSlug': 'maximum-product-after-k-increments', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Maximum Total Beauty of the Gardens', 'titleSlug': 'maximum-total-beauty-of-the-gardens', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Enumeration', 'slug': 'enumeration'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Add Two Integers', 'titleSlug': 'add-two-integers', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Root Equals Sum of Children', 'titleSlug': 'root-equals-sum-of-children', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Count Positions on Street With Required Brightness', 'titleSlug': 'count-positions-on-street-with-required-brightness', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Number of Times a Driver Was a Passenger', 'titleSlug': 'number-of-times-a-driver-was-a-passenger', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Find Closest Number to Zero', 'titleSlug': 'find-closest-number-to-zero', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Number of Ways to Buy Pens and Pencils', 'titleSlug': 'number-of-ways-to-buy-pens-and-pencils', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Design an ATM Machine', 'titleSlug': 'design-an-atm-machine', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Design', 'slug': 'design'}]}
{'title': 'Maximum Score of a Node Sequence', 'titleSlug': 'maximum-score-of-a-node-sequence', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Calculate Digit Sum of a String', 'titleSlug': 'calculate-digit-sum-of-a-string', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Minimum Rounds to Complete All Tasks', 'titleSlug': 'minimum-rounds-to-complete-all-tasks', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Maximum Trailing Zeros in a Cornered Path', 'titleSlug': 'maximum-trailing-zeros-in-a-cornered-path', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Longest Path With Different Adjacent Characters', 'titleSlug': 'longest-path-with-different-adjacent-characters', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Topological Sort', 'slug': 'topological-sort'}]}
{'title': 'Maximum Cost of Trip With K Highways', 'titleSlug': 'maximum-cost-of-trip-with-k-highways', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Intersection of Multiple Arrays', 'titleSlug': 'intersection-of-multiple-arrays', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Count Lattice Points Inside a Circle', 'titleSlug': 'count-lattice-points-inside-a-circle', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Geometry', 'slug': 'geometry'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Count Number of Rectangles Containing Each Point', 'titleSlug': 'count-number-of-rectangles-containing-each-point', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Number of Flowers in Full Bloom', 'titleSlug': 'number-of-flowers-in-full-bloom', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Dynamic Pivoting of a Table', 'titleSlug': 'dynamic-pivoting-of-a-table', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Dynamic Unpivoting of a Table', 'titleSlug': 'dynamic-unpivoting-of-a-table', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Design Video Sharing Platform', 'titleSlug': 'design-video-sharing-platform', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Count Prefixes of a Given String', 'titleSlug': 'count-prefixes-of-a-given-string', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Minimum Average Difference', 'titleSlug': 'minimum-average-difference', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Count Unguarded Cells in the Grid', 'titleSlug': 'count-unguarded-cells-in-the-grid', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Escape the Spreading Fire', 'titleSlug': 'escape-the-spreading-fire', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Remove Digit From Number to Maximize Result', 'titleSlug': 'remove-digit-from-number-to-maximize-result', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Minimum Consecutive Cards to Pick Up', 'titleSlug': 'minimum-consecutive-cards-to-pick-up', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'K Divisible Elements Subarrays', 'titleSlug': 'k-divisible-elements-subarrays', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Trie', 'slug': 'trie'}, {'name': 'Rolling Hash', 'slug': 'rolling-hash'}, {'name': 'Hash Function', 'slug': 'hash-function'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Total Appeal of A String', 'titleSlug': 'total-appeal-of-a-string', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Make Array Non-decreasing or Non-increasing', 'titleSlug': 'make-array-non-decreasing-or-non-increasing', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Largest 3-Same-Digit Number in String', 'titleSlug': 'largest-3-same-digit-number-in-string', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Count Nodes Equal to Average of Subtree', 'titleSlug': 'count-nodes-equal-to-average-of-subtree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Count Number of Texts', 'titleSlug': 'count-number-of-texts', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': ' Check if There Is a Valid Parentheses String Path', 'titleSlug': 'check-if-there-is-a-valid-parentheses-string-path', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Minimum Number of Keypresses', 'titleSlug': 'minimum-number-of-keypresses', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Find the K-Beauty of a Number', 'titleSlug': 'find-the-k-beauty-of-a-number', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Number of Ways to Split Array', 'titleSlug': 'number-of-ways-to-split-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Maximum White Tiles Covered by a Carpet', 'titleSlug': 'maximum-white-tiles-covered-by-a-carpet', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Substring With Largest Variance', 'titleSlug': 'substring-with-largest-variance', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Find Resultant Array After Removing Anagrams', 'titleSlug': 'find-resultant-array-after-removing-anagrams', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Maximum Consecutive Floors Without Special Floors', 'titleSlug': 'maximum-consecutive-floors-without-special-floors', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Largest Combination With Bitwise AND Greater Than Zero', 'titleSlug': 'largest-combination-with-bitwise-and-greater-than-zero', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Count Integers in Intervals', 'titleSlug': 'count-integers-in-intervals', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Design', 'slug': 'design'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Closest Node to Path in Tree', 'titleSlug': 'closest-node-to-path-in-tree', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}]}
{'title': 'Percentage of Letter in String', 'titleSlug': 'percentage-of-letter-in-string', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Maximum Bags With Full Capacity of Rocks', 'titleSlug': 'maximum-bags-with-full-capacity-of-rocks', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Minimum Lines to Represent a Line Chart', 'titleSlug': 'minimum-lines-to-represent-a-line-chart', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Geometry', 'slug': 'geometry'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Sum of Total Strength of Wizards', 'titleSlug': 'sum-of-total-strength-of-wizards', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Number of People That Can Be Seen in a Grid', 'titleSlug': 'number-of-people-that-can-be-seen-in-a-grid', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Check if Number Has Equal Digit Count and Digit Value', 'titleSlug': 'check-if-number-has-equal-digit-count-and-digit-value', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Sender With Largest Word Count', 'titleSlug': 'sender-with-largest-word-count', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Maximum Total Importance of Roads', 'titleSlug': 'maximum-total-importance-of-roads', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Booking Concert Tickets in Groups', 'titleSlug': 'booking-concert-tickets-in-groups', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}]}
{'title': 'Rearrange Characters to Make Target String', 'titleSlug': 'rearrange-characters-to-make-target-string', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Apply Discount to Prices', 'titleSlug': 'apply-discount-to-prices', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Steps to Make Array Non-decreasing', 'titleSlug': 'steps-to-make-array-non-decreasing', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Minimum Obstacle Removal to Reach Corner', 'titleSlug': 'minimum-obstacle-removal-to-reach-corner', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Shortest Path', 'slug': 'shortest-path'}]}
{'title': 'Maximum Profit From Trading Stocks', 'titleSlug': 'maximum-profit-from-trading-stocks', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Products With Three or More Orders in Two Consecutive Years', 'titleSlug': 'products-with-three-or-more-orders-in-two-consecutive-years', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Min Max Game', 'titleSlug': 'min-max-game', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Partition Array Such That Maximum Difference Is K', 'titleSlug': 'partition-array-such-that-maximum-difference-is-k', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Replace Elements in an Array', 'titleSlug': 'replace-elements-in-an-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Design a Text Editor', 'titleSlug': 'design-a-text-editor', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Simulation', 'slug': 'simulation'}, {'name': 'Doubly-Linked List', 'slug': 'doubly-linked-list'}]}
{'title': 'Jump Game VIII', 'titleSlug': 'jump-game-viii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}, {'name': 'Shortest Path', 'slug': 'shortest-path'}]}
{'title': 'Tasks Count in the Weekend', 'titleSlug': 'tasks-count-in-the-weekend', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Strong Password Checker II', 'titleSlug': 'strong-password-checker-ii', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Successful Pairs of Spells and Potions', 'titleSlug': 'successful-pairs-of-spells-and-potions', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Match Substring After Replacement', 'titleSlug': 'match-substring-after-replacement', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'String Matching', 'slug': 'string-matching'}]}
{'title': 'Count Subarrays With Score Less Than K', 'titleSlug': 'count-subarrays-with-score-less-than-k', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Calculate Amount Paid in Taxes', 'titleSlug': 'calculate-amount-paid-in-taxes', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Minimum Path Cost in a Grid', 'titleSlug': 'minimum-path-cost-in-a-grid', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Fair Distribution of Cookies', 'titleSlug': 'fair-distribution-of-cookies', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Naming a Company', 'titleSlug': 'naming-a-company', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Check for Contradictions in Equations', 'titleSlug': 'check-for-contradictions-in-equations', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Arrange Table by Gender', 'titleSlug': 'arrange-table-by-gender', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Greatest English Letter in Upper and Lower Case', 'titleSlug': 'greatest-english-letter-in-upper-and-lower-case', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Sum of Numbers With Units Digit K', 'titleSlug': 'sum-of-numbers-with-units-digit-k', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Longest Binary Subsequence Less Than or Equal to K', 'titleSlug': 'longest-binary-subsequence-less-than-or-equal-to-k', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Memoization', 'slug': 'memoization'}]}
{'title': 'Selling Pieces of Wood', 'titleSlug': 'selling-pieces-of-wood', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Memoization', 'slug': 'memoization'}]}
{'title': 'Minimum Flips in Binary Tree to Get Result', 'titleSlug': 'minimum-flips-in-binary-tree-to-get-result', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'The First Day of the Maximum Recorded Degree in Each City', 'titleSlug': 'the-first-day-of-the-maximum-recorded-degree-in-each-city', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Count Asterisks', 'titleSlug': 'count-asterisks', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Count Unreachable Pairs of Nodes in an Undirected Graph', 'titleSlug': 'count-unreachable-pairs-of-nodes-in-an-undirected-graph', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Maximum XOR After Operations ', 'titleSlug': 'maximum-xor-after-operations', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Number of Distinct Roll Sequences', 'titleSlug': 'number-of-distinct-roll-sequences', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Memoization', 'slug': 'memoization'}]}
{'title': 'Check if Matrix Is X-Matrix', 'titleSlug': 'check-if-matrix-is-x-matrix', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Count Number of Ways to Place Houses', 'titleSlug': 'count-number-of-ways-to-place-houses', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Maximum Score Of Spliced Array', 'titleSlug': 'maximum-score-of-spliced-array', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Minimum Score After Removals on a Tree', 'titleSlug': 'minimum-score-after-removals-on-a-tree', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}]}
{'title': 'Find Minimum Time to Finish All Jobs II', 'titleSlug': 'find-minimum-time-to-finish-all-jobs-ii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Product Sales Analysis IV', 'titleSlug': 'product-sales-analysis-iv', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Decode the Message', 'titleSlug': 'decode-the-message', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Spiral Matrix IV', 'titleSlug': 'spiral-matrix-iv', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Number of People Aware of a Secret', 'titleSlug': 'number-of-people-aware-of-a-secret', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Number of Increasing Paths in a Grid', 'titleSlug': 'number-of-increasing-paths-in-a-grid', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Topological Sort', 'slug': 'topological-sort'}, {'name': 'Memoization', 'slug': 'memoization'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Product Sales Analysis V', 'titleSlug': 'product-sales-analysis-v', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Valid Palindrome IV', 'titleSlug': 'valid-palindrome-iv', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Evaluate Boolean Binary Tree', 'titleSlug': 'evaluate-boolean-binary-tree', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'The Latest Time to Catch a Bus', 'titleSlug': 'the-latest-time-to-catch-a-bus', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Minimum Sum of Squared Difference', 'titleSlug': 'minimum-sum-of-squared-difference', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Subarray With Elements Greater Than Varying Threshold', 'titleSlug': 'subarray-with-elements-greater-than-varying-threshold', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Minimum Amount of Time to Fill Cups', 'titleSlug': 'minimum-amount-of-time-to-fill-cups', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Smallest Number in Infinite Set', 'titleSlug': 'smallest-number-in-infinite-set', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Move Pieces to Obtain a String', 'titleSlug': 'move-pieces-to-obtain-a-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Count the Number of Ideal Arrays', 'titleSlug': 'count-the-number-of-ideal-arrays', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'All the Matches of the League', 'titleSlug': 'all-the-matches-of-the-league', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Minimum Adjacent Swaps to Make a Valid Array', 'titleSlug': 'minimum-adjacent-swaps-to-make-a-valid-array', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Maximum Number of Pairs in Array', 'titleSlug': 'maximum-number-of-pairs-in-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Max Sum of a Pair With Equal Sum of Digits', 'titleSlug': 'max-sum-of-a-pair-with-equal-sum-of-digits', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Query Kth Smallest Trimmed Number', 'titleSlug': 'query-kth-smallest-trimmed-number', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Radix Sort', 'slug': 'radix-sort'}, {'name': 'Quickselect', 'slug': 'quickselect'}]}
{'title': 'Minimum Deletions to Make Array Divisible', 'titleSlug': 'minimum-deletions-to-make-array-divisible', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Finding the Number of Visible Mountains', 'titleSlug': 'finding-the-number-of-visible-mountains', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Compute the Rank as a Percentage', 'titleSlug': 'compute-the-rank-as-a-percentage', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Best Poker Hand', 'titleSlug': 'best-poker-hand', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Number of Zero-Filled Subarrays', 'titleSlug': 'number-of-zero-filled-subarrays', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}]}
{'title': 'Design a Number Container System', 'titleSlug': 'design-a-number-container-system', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Shortest Impossible Sequence of Rolls', 'titleSlug': 'shortest-impossible-sequence-of-rolls', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'First Letter to Appear Twice', 'titleSlug': 'first-letter-to-appear-twice', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Equal Row and Column Pairs', 'titleSlug': 'equal-row-and-column-pairs', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Design a Food Rating System', 'titleSlug': 'design-a-food-rating-system', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Number of Excellent Pairs', 'titleSlug': 'number-of-excellent-pairs', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Maximum Number of Books You Can Take', 'titleSlug': 'maximum-number-of-books-you-can-take', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Number of Unique Subjects Taught by Each Teacher', 'titleSlug': 'number-of-unique-subjects-taught-by-each-teacher', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Make Array Zero by Subtracting Equal Amounts', 'titleSlug': 'make-array-zero-by-subtracting-equal-amounts', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Maximum Number of Groups Entering a Competition', 'titleSlug': 'maximum-number-of-groups-entering-a-competition', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Find Closest Node to Given Two Nodes', 'titleSlug': 'find-closest-node-to-given-two-nodes', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Longest Cycle in a Graph', 'titleSlug': 'longest-cycle-in-a-graph', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Topological Sort', 'slug': 'topological-sort'}]}
{'title': 'Minimum Costs Using the Train Line', 'titleSlug': 'minimum-costs-using-the-train-line', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Generate the Invoice', 'titleSlug': 'generate-the-invoice', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Merge Similar Items', 'titleSlug': 'merge-similar-items', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Count Number of Bad Pairs', 'titleSlug': 'count-number-of-bad-pairs', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Task Scheduler II', 'titleSlug': 'task-scheduler-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Minimum Replacements to Sort the Array', 'titleSlug': 'minimum-replacements-to-sort-the-array', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Number of Arithmetic Triplets', 'titleSlug': 'number-of-arithmetic-triplets', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Reachable Nodes With Restrictions', 'titleSlug': 'reachable-nodes-with-restrictions', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Check if There is a Valid Partition For The Array', 'titleSlug': 'check-if-there-is-a-valid-partition-for-the-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Longest Ideal Subsequence', 'titleSlug': 'longest-ideal-subsequence', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Minimize Maximum Value in a Grid', 'titleSlug': 'minimize-maximum-value-in-a-grid', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Topological Sort', 'slug': 'topological-sort'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Calculate the Influence of Each Salesperson', 'titleSlug': 'calculate-the-influence-of-each-salesperson', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Largest Local Values in a Matrix', 'titleSlug': 'largest-local-values-in-a-matrix', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Node With Highest Edge Score', 'titleSlug': 'node-with-highest-edge-score', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Construct Smallest Number From DI String', 'titleSlug': 'construct-smallest-number-from-di-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Count Special Integers', 'titleSlug': 'count-special-integers', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Sort the Olympic Table', 'titleSlug': 'sort-the-olympic-table', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Choose Edges to Maximize Score in a Tree', 'titleSlug': 'choose-edges-to-maximize-score-in-a-tree', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}]}
{'title': 'Minimum Recolors to Get K Consecutive Black Blocks', 'titleSlug': 'minimum-recolors-to-get-k-consecutive-black-blocks', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Time Needed to Rearrange a Binary String', 'titleSlug': 'time-needed-to-rearrange-a-binary-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Shifting Letters II', 'titleSlug': 'shifting-letters-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Maximum Segment Sum After Removals', 'titleSlug': 'maximum-segment-sum-after-removals', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Minimum Hours of Training to Win a Competition', 'titleSlug': 'minimum-hours-of-training-to-win-a-competition', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Largest Palindromic Number', 'titleSlug': 'largest-palindromic-number', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Amount of Time for Binary Tree to Be Infected', 'titleSlug': 'amount-of-time-for-binary-tree-to-be-infected', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Find the K-Sum of an Array', 'titleSlug': 'find-the-k-sum-of-an-array', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Median of a Row Wise Sorted Matrix', 'titleSlug': 'median-of-a-row-wise-sorted-matrix', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Change Null Values in a Table to the Previous Value', 'titleSlug': 'change-null-values-in-a-table-to-the-previous-value', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Longest Subsequence With Limited Sum', 'titleSlug': 'longest-subsequence-with-limited-sum', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Removing Stars From a String', 'titleSlug': 'removing-stars-from-a-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Minimum Amount of Time to Collect Garbage', 'titleSlug': 'minimum-amount-of-time-to-collect-garbage', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Build a Matrix With Conditions', 'titleSlug': 'build-a-matrix-with-conditions', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Topological Sort', 'slug': 'topological-sort'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Count Strictly Increasing Subarrays', 'titleSlug': 'count-strictly-increasing-subarrays', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Employees With Deductions', 'titleSlug': 'employees-with-deductions', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Find Subarrays With Equal Sum', 'titleSlug': 'find-subarrays-with-equal-sum', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}]}
{'title': 'Strictly Palindromic Number', 'titleSlug': 'strictly-palindromic-number', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Brainteaser', 'slug': 'brainteaser'}]}
{'title': 'Maximum Rows Covered by Columns', 'titleSlug': 'maximum-rows-covered-by-columns', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Maximum Number of Robots Within Budget', 'titleSlug': 'maximum-number-of-robots-within-budget', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}, {'name': 'Monotonic Queue', 'slug': 'monotonic-queue'}]}
{'title': 'Check Distances Between Same Letters', 'titleSlug': 'check-distances-between-same-letters', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Number of Ways to Reach a Position After Exactly k Steps', 'titleSlug': 'number-of-ways-to-reach-a-position-after-exactly-k-steps', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}]}
{'title': 'Longest Nice Subarray', 'titleSlug': 'longest-nice-subarray', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Meeting Rooms III', 'titleSlug': 'meeting-rooms-iii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Minimum Time to Kill All Monsters', 'titleSlug': 'minimum-time-to-kill-all-monsters', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Most Frequent Even Element', 'titleSlug': 'most-frequent-even-element', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Optimal Partition of String', 'titleSlug': 'optimal-partition-of-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Divide Intervals Into Minimum Number of Groups', 'titleSlug': 'divide-intervals-into-minimum-number-of-groups', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Longest Increasing Subsequence II', 'titleSlug': 'longest-increasing-subsequence-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Monotonic Queue', 'slug': 'monotonic-queue'}]}
{'title': 'Design SQL', 'titleSlug': 'design-sql', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Design', 'slug': 'design'}]}
{'title': 'Count Days Spent Together', 'titleSlug': 'count-days-spent-together', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Maximum Matching of Players With Trainers', 'titleSlug': 'maximum-matching-of-players-with-trainers', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Smallest Subarrays With Maximum Bitwise OR', 'titleSlug': 'smallest-subarrays-with-maximum-bitwise-or', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Minimum Money Required Before Transactions', 'titleSlug': 'minimum-money-required-before-transactions', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Smallest Even Multiple', 'titleSlug': 'smallest-even-multiple', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Length of the Longest Alphabetical Continuous Substring', 'titleSlug': 'length-of-the-longest-alphabetical-continuous-substring', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Reverse Odd Levels of Binary Tree', 'titleSlug': 'reverse-odd-levels-of-binary-tree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Sum of Prefix Scores of Strings', 'titleSlug': 'sum-of-prefix-scores-of-strings', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Trie', 'slug': 'trie'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Closest Fair Integer', 'titleSlug': 'closest-fair-integer', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Sort the People', 'titleSlug': 'sort-the-people', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Longest Subarray With Maximum Bitwise AND', 'titleSlug': 'longest-subarray-with-maximum-bitwise-and', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Brainteaser', 'slug': 'brainteaser'}]}
{'title': 'Find All Good Indices', 'titleSlug': 'find-all-good-indices', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Number of Good Paths', 'titleSlug': 'number-of-good-paths', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Merge Operations to Turn Array Into a Palindrome', 'titleSlug': 'merge-operations-to-turn-array-into-a-palindrome', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Remove Letter To Equalize Frequency', 'titleSlug': 'remove-letter-to-equalize-frequency', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Longest Uploaded Prefix', 'titleSlug': 'longest-uploaded-prefix', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Bitwise XOR of All Pairings', 'titleSlug': 'bitwise-xor-of-all-pairings', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Brainteaser', 'slug': 'brainteaser'}]}
{'title': 'Number of Pairs Satisfying Inequality', 'titleSlug': 'number-of-pairs-satisfying-inequality', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Merge Sort', 'slug': 'merge-sort'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Number of Common Factors', 'titleSlug': 'number-of-common-factors', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Enumeration', 'slug': 'enumeration'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Maximum Sum of an Hourglass', 'titleSlug': 'maximum-sum-of-an-hourglass', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Minimize XOR', 'titleSlug': 'minimize-xor', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Maximum Deletions on a String', 'titleSlug': 'maximum-deletions-on-a-string', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Rolling Hash', 'slug': 'rolling-hash'}, {'name': 'String Matching', 'slug': 'string-matching'}, {'name': 'Hash Function', 'slug': 'hash-function'}]}
{'title': 'Maximize Total Tastiness of Purchased Fruits', 'titleSlug': 'maximize-total-tastiness-of-purchased-fruits', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'The Employee That Worked on the Longest Task', 'titleSlug': 'the-employee-that-worked-on-the-longest-task', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Find The Original Array of Prefix Xor', 'titleSlug': 'find-the-original-array-of-prefix-xor', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Using a Robot to Print the Lexicographically Smallest String', 'titleSlug': 'using-a-robot-to-print-the-lexicographically-smallest-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Paths in Matrix Whose Sum Is Divisible by K', 'titleSlug': 'paths-in-matrix-whose-sum-is-divisible-by-k', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Minimum Split Into Subarrays With GCD Greater Than One', 'titleSlug': 'minimum-split-into-subarrays-with-gcd-greater-than-one', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Number of Valid Clock Times', 'titleSlug': 'number-of-valid-clock-times', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Range Product Queries of Powers', 'titleSlug': 'range-product-queries-of-powers', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Minimize Maximum of Array', 'titleSlug': 'minimize-maximum-of-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Create Components With Same Value', 'titleSlug': 'create-components-with-same-value', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Largest Positive Integer That Exists With Its Negative', 'titleSlug': 'largest-positive-integer-that-exists-with-its-negative', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Count Number of Distinct Integers After Reverse Operations', 'titleSlug': 'count-number-of-distinct-integers-after-reverse-operations', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Sum of Number and Its Reverse', 'titleSlug': 'sum-of-number-and-its-reverse', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Count Subarrays With Fixed Bounds', 'titleSlug': 'count-subarrays-with-fixed-bounds', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Monotonic Queue', 'slug': 'monotonic-queue'}]}
{'title': 'Number of Nodes With Value One', 'titleSlug': 'number-of-nodes-with-value-one', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Determine if Two Events Have Conflict', 'titleSlug': 'determine-if-two-events-have-conflict', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Number of Subarrays With GCD Equal to K', 'titleSlug': 'number-of-subarrays-with-gcd-equal-to-k', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Minimum Cost to Make Array Equal', 'titleSlug': 'minimum-cost-to-make-array-equal', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Minimum Number of Operations to Make Arrays Similar', 'titleSlug': 'minimum-number-of-operations-to-make-arrays-similar', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Number of Distinct Binary Strings After Applying Operations', 'titleSlug': 'number-of-distinct-binary-strings-after-applying-operations', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Odd String Difference', 'titleSlug': 'odd-string-difference', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Words Within Two Edits of Dictionary', 'titleSlug': 'words-within-two-edits-of-dictionary', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Trie', 'slug': 'trie'}]}
{'title': 'Destroy Sequential Targets', 'titleSlug': 'destroy-sequential-targets', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Next Greater Element IV', 'titleSlug': 'next-greater-element-iv', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Average Value of Even Numbers That Are Divisible by Three', 'titleSlug': 'average-value-of-even-numbers-that-are-divisible-by-three', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}]}
{'title': 'Most Popular Video Creator', 'titleSlug': 'most-popular-video-creator', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Minimum Addition to Make Integer Beautiful', 'titleSlug': 'minimum-addition-to-make-integer-beautiful', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Height of Binary Tree After Subtree Removal Queries', 'titleSlug': 'height-of-binary-tree-after-subtree-removal-queries', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Sort Array by Moving Items to Empty Space', 'titleSlug': 'sort-array-by-moving-items-to-empty-space', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Apply Operations to an Array', 'titleSlug': 'apply-operations-to-an-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Maximum Sum of Distinct Subarrays With Length K', 'titleSlug': 'maximum-sum-of-distinct-subarrays-with-length-k', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Total Cost to Hire K Workers', 'titleSlug': 'total-cost-to-hire-k-workers', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Minimum Total Distance Traveled', 'titleSlug': 'minimum-total-distance-traveled', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Minimum Subarrays in a Valid Split', 'titleSlug': 'minimum-subarrays-in-a-valid-split', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Number of Distinct Averages', 'titleSlug': 'number-of-distinct-averages', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Count Ways To Build Good Strings', 'titleSlug': 'count-ways-to-build-good-strings', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Most Profitable Path in a Tree', 'titleSlug': 'most-profitable-path-in-a-tree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Split Message Based on Limit', 'titleSlug': 'split-message-based-on-limit', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Convert the Temperature', 'titleSlug': 'convert-the-temperature', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Number of Subarrays With LCM Equal to K', 'titleSlug': 'number-of-subarrays-with-lcm-equal-to-k', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Minimum Number of Operations to Sort a Binary Tree by Level', 'titleSlug': 'minimum-number-of-operations-to-sort-a-binary-tree-by-level', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Maximum Number of Non-overlapping Palindrome Substrings', 'titleSlug': 'maximum-number-of-non-overlapping-palindrome-substrings', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Minimum Cost to Buy Apples', 'titleSlug': 'minimum-cost-to-buy-apples', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Shortest Path', 'slug': 'shortest-path'}]}
{'title': 'Customers With Strictly Increasing Purchases', 'titleSlug': 'customers-with-strictly-increasing-purchases', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Number of Unequal Triplets in Array', 'titleSlug': 'number-of-unequal-triplets-in-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Closest Nodes Queries in a Binary Search Tree', 'titleSlug': 'closest-nodes-queries-in-a-binary-search-tree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Search Tree', 'slug': 'binary-search-tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Minimum Fuel Cost to Report to the Capital', 'titleSlug': 'minimum-fuel-cost-to-report-to-the-capital', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Number of Beautiful Partitions', 'titleSlug': 'number-of-beautiful-partitions', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Maximum XOR of Two Non-Overlapping Subtrees', 'titleSlug': 'maximum-xor-of-two-non-overlapping-subtrees', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Trie', 'slug': 'trie'}]}
{'title': 'Form a Chemical Bond', 'titleSlug': 'form-a-chemical-bond', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Minimum Cuts to Divide a Circle', 'titleSlug': 'minimum-cuts-to-divide-a-circle', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Geometry', 'slug': 'geometry'}]}
{'title': 'Difference Between Ones and Zeros in Row and Column', 'titleSlug': 'difference-between-ones-and-zeros-in-row-and-column', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Minimum Penalty for a Shop', 'titleSlug': 'minimum-penalty-for-a-shop', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Count Palindromic Subsequences', 'titleSlug': 'count-palindromic-subsequences', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Find the Pivot Integer', 'titleSlug': 'find-the-pivot-integer', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Append Characters to String to Make Subsequence', 'titleSlug': 'append-characters-to-string-to-make-subsequence', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Remove Nodes From Linked List', 'titleSlug': 'remove-nodes-from-linked-list', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Recursion', 'slug': 'recursion'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Count Subarrays With Median K', 'titleSlug': 'count-subarrays-with-median-k', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Number of Substrings With Fixed Ratio', 'titleSlug': 'number-of-substrings-with-fixed-ratio', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Circular Sentence', 'titleSlug': 'circular-sentence', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Divide Players Into Teams of Equal Skill', 'titleSlug': 'divide-players-into-teams-of-equal-skill', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Minimum Score of a Path Between Two Cities', 'titleSlug': 'minimum-score-of-a-path-between-two-cities', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Divide Nodes Into the Maximum Number of Groups', 'titleSlug': 'divide-nodes-into-the-maximum-number-of-groups', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Merge Overlapping Events in the Same Hall', 'titleSlug': 'merge-overlapping-events-in-the-same-hall', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Number of Subarrays Having Even Product', 'titleSlug': 'number-of-subarrays-having-even-product', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Maximum Value of a String in an Array', 'titleSlug': 'maximum-value-of-a-string-in-an-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Maximum Star Sum of a Graph', 'titleSlug': 'maximum-star-sum-of-a-graph', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Frog Jump II', 'titleSlug': 'frog-jump-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Minimum Total Cost to Make Arrays Unequal', 'titleSlug': 'minimum-total-cost-to-make-arrays-unequal', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Delete Greatest Value in Each Row', 'titleSlug': 'delete-greatest-value-in-each-row', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Longest Square Streak in an Array', 'titleSlug': 'longest-square-streak-in-an-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Design Memory Allocator', 'titleSlug': 'design-memory-allocator', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Maximum Number of Points From Grid Queries', 'titleSlug': 'maximum-number-of-points-from-grid-queries', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Concatenate the Name and the Profession', 'titleSlug': 'concatenate-the-name-and-the-profession', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Bitwise OR of All Subsequence Sums', 'titleSlug': 'bitwise-or-of-all-subsequence-sums', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Brainteaser', 'slug': 'brainteaser'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Count Pairs Of Similar Strings', 'titleSlug': 'count-pairs-of-similar-strings', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Smallest Value After Replacing With Sum of Prime Factors', 'titleSlug': 'smallest-value-after-replacing-with-sum-of-prime-factors', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Simulation', 'slug': 'simulation'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Add Edges to Make Degrees of All Nodes Even', 'titleSlug': 'add-edges-to-make-degrees-of-all-nodes-even', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Cycle Length Queries in a Tree', 'titleSlug': 'cycle-length-queries-in-a-tree', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': "Check if There is a Path With Equal Number of 0's And 1's", 'titleSlug': 'check-if-there-is-a-path-with-equal-number-of-0s-and-1s', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Maximum Enemy Forts That Can Be Captured', 'titleSlug': 'maximum-enemy-forts-that-can-be-captured', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}]}
{'title': 'Reward Top K Students', 'titleSlug': 'reward-top-k-students', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Minimize the Maximum of Two Arrays', 'titleSlug': 'minimize-the-maximum-of-two-arrays', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Count Anagrams', 'titleSlug': 'count-anagrams', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Shortest Distance to Target String in a Circular Array', 'titleSlug': 'shortest-distance-to-target-string-in-a-circular-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Take K of Each Character From Left and Right', 'titleSlug': 'take-k-of-each-character-from-left-and-right', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Maximum Tastiness of Candy Basket', 'titleSlug': 'maximum-tastiness-of-candy-basket', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Number of Great Partitions', 'titleSlug': 'number-of-great-partitions', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Count the Number of K-Big Indices', 'titleSlug': 'count-the-number-of-k-big-indices', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Merge Sort', 'slug': 'merge-sort'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Count the Digits That Divide a Number', 'titleSlug': 'count-the-digits-that-divide-a-number', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Distinct Prime Factors of Product of Array', 'titleSlug': 'distinct-prime-factors-of-product-of-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Partition String Into Substrings With Values at Most K', 'titleSlug': 'partition-string-into-substrings-with-values-at-most-k', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Closest Prime Numbers in Range', 'titleSlug': 'closest-prime-numbers-in-range', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Maximum Frequency Score of a Subarray', 'titleSlug': 'maximum-frequency-score-of-a-subarray', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Categorize Box According to Criteria', 'titleSlug': 'categorize-box-according-to-criteria', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Find Consecutive Integers from a Data Stream', 'titleSlug': 'find-consecutive-integers-from-a-data-stream', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Counting', 'slug': 'counting'}, {'name': 'Data Stream', 'slug': 'data-stream'}]}
{'title': 'Find Xor-Beauty of Array', 'titleSlug': 'find-xor-beauty-of-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Maximize the Minimum Powered City', 'titleSlug': 'maximize-the-minimum-powered-city', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Maximum Count of Positive Integer and Negative Integer', 'titleSlug': 'maximum-count-of-positive-integer-and-negative-integer', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Maximal Score After Applying K Operations', 'titleSlug': 'maximal-score-after-applying-k-operations', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Make Number of Distinct Characters Equal', 'titleSlug': 'make-number-of-distinct-characters-equal', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Time to Cross a Bridge', 'titleSlug': 'time-to-cross-a-bridge', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Number of Good Binary Strings', 'titleSlug': 'number-of-good-binary-strings', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Time Taken to Cross the Door', 'titleSlug': 'time-taken-to-cross-the-door', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Difference Between Element Sum and Digit Sum of an Array', 'titleSlug': 'difference-between-element-sum-and-digit-sum-of-an-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}]}
{'title': 'Increment Submatrices by One', 'titleSlug': 'increment-submatrices-by-one', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Count the Number of Good Subarrays', 'titleSlug': 'count-the-number-of-good-subarrays', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Difference Between Maximum and Minimum Price Sum', 'titleSlug': 'difference-between-maximum-and-minimum-price-sum', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}]}
{'title': 'Count the Number of Good Subsequences', 'titleSlug': 'count-the-number-of-good-subsequences', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Minimum Common Value', 'titleSlug': 'minimum-common-value', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Minimum Operations to Make Array Equal II', 'titleSlug': 'minimum-operations-to-make-array-equal-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Maximum Subsequence Score', 'titleSlug': 'maximum-subsequence-score', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Check if Point Is Reachable', 'titleSlug': 'check-if-point-is-reachable', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Alternating Digit Sum', 'titleSlug': 'alternating-digit-sum', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Sort the Students by Their Kth Score', 'titleSlug': 'sort-the-students-by-their-kth-score', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Apply Bitwise Operations to Make Strings Equal', 'titleSlug': 'apply-bitwise-operations-to-make-strings-equal', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Minimum Cost to Split an Array', 'titleSlug': 'minimum-cost-to-split-an-array', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Maximum Price to Fill a Bag', 'titleSlug': 'maximum-price-to-fill-a-bag', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Count Distinct Numbers on Board', 'titleSlug': 'count-distinct-numbers-on-board', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Count Collisions of Monkeys on a Polygon', 'titleSlug': 'count-collisions-of-monkeys-on-a-polygon', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Recursion', 'slug': 'recursion'}]}
{'title': 'Put Marbles in Bags', 'titleSlug': 'put-marbles-in-bags', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Count Increasing Quadruplets', 'titleSlug': 'count-increasing-quadruplets', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Enumeration', 'slug': 'enumeration'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Separate the Digits in an Array', 'titleSlug': 'separate-the-digits-in-an-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Maximum Number of Integers to Choose From a Range I', 'titleSlug': 'maximum-number-of-integers-to-choose-from-a-range-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Maximize Win From Two Segments', 'titleSlug': 'maximize-win-from-two-segments', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Disconnect Path in a Binary Matrix by at Most One Flip', 'titleSlug': 'disconnect-path-in-a-binary-matrix-by-at-most-one-flip', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Maximum Number of Integers to Choose From a Range II', 'titleSlug': 'maximum-number-of-integers-to-choose-from-a-range-ii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Take Gifts From the Richest Pile', 'titleSlug': 'take-gifts-from-the-richest-pile', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Count Vowel Strings in Ranges', 'titleSlug': 'count-vowel-strings-in-ranges', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'House Robber IV', 'titleSlug': 'house-robber-iv', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Rearranging Fruits', 'titleSlug': 'rearranging-fruits', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sort', 'slug': 'sort'}]}
{'title': 'Find the Array Concatenation Value', 'titleSlug': 'find-the-array-concatenation-value', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Count the Number of Fair Pairs', 'titleSlug': 'count-the-number-of-fair-pairs', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Substring XOR Queries', 'titleSlug': 'substring-xor-queries', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Subsequence With the Minimum Score', 'titleSlug': 'subsequence-with-the-minimum-score', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Maximum Difference by Remapping a Digit', 'titleSlug': 'maximum-difference-by-remapping-a-digit', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Minimum Score by Changing Two Elements', 'titleSlug': 'minimum-score-by-changing-two-elements', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Minimum Impossible OR', 'titleSlug': 'minimum-impossible-or', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Brainteaser', 'slug': 'brainteaser'}]}
{'title': 'Handling Sum Queries After Update', 'titleSlug': 'handling-sum-queries-after-update', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}]}
{'title': 'Merge Two 2D Arrays by Summing Values', 'titleSlug': 'merge-two-2d-arrays-by-summing-values', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}]}
{'title': 'Minimum Operations to Reduce an Integer to 0', 'titleSlug': 'minimum-operations-to-reduce-an-integer-to-0', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Count the Number of Square-Free Subsets', 'titleSlug': 'count-the-number-of-square-free-subsets', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Find the String with LCP', 'titleSlug': 'find-the-string-with-lcp', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Left and Right Sum Differences', 'titleSlug': 'left-and-right-sum-differences', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Find the Divisibility Array of a String', 'titleSlug': 'find-the-divisibility-array-of-a-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Find the Maximum Number of Marked Indices', 'titleSlug': 'find-the-maximum-number-of-marked-indices', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Minimum Time to Visit a Cell In a Grid', 'titleSlug': 'minimum-time-to-visit-a-cell-in-a-grid', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Shortest Path', 'slug': 'shortest-path'}]}
{'title': 'Split With Minimum Sum', 'titleSlug': 'split-with-minimum-sum', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Count Total Number of Colored Cells', 'titleSlug': 'count-total-number-of-colored-cells', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Count Ways to Group Overlapping Ranges', 'titleSlug': 'count-ways-to-group-overlapping-ranges', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Count Number of Possible Root Nodes', 'titleSlug': 'count-number-of-possible-root-nodes', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}]}
{'title': 'Pass the Pillow', 'titleSlug': 'pass-the-pillow', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Kth Largest Sum in a Binary Tree', 'titleSlug': 'kth-largest-sum-in-a-binary-tree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Split the Array to Make Coprime Products', 'titleSlug': 'split-the-array-to-make-coprime-products', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Number of Ways to Earn Points', 'titleSlug': 'number-of-ways-to-earn-points', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Count the Number of Vowel Strings in Range', 'titleSlug': 'count-the-number-of-vowel-strings-in-range', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Rearrange Array to Maximize Prefix Score', 'titleSlug': 'rearrange-array-to-maximize-prefix-score', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Count the Number of Beautiful Subarrays', 'titleSlug': 'count-the-number-of-beautiful-subarrays', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Minimum Time to Complete All Tasks', 'titleSlug': 'minimum-time-to-complete-all-tasks', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Design a Todo List', 'titleSlug': 'design-a-todo-list', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Distribute Money to Maximum Children', 'titleSlug': 'distribute-money-to-maximum-children', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Maximize Greatness of an Array', 'titleSlug': 'maximize-greatness-of-an-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Find Score of an Array After Marking All Elements', 'titleSlug': 'find-score-of-an-array-after-marking-all-elements', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Minimum Time to Repair Cars', 'titleSlug': 'minimum-time-to-repair-cars', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Number of Even and Odd Bits', 'titleSlug': 'number-of-even-and-odd-bits', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Check Knight Tour Configuration', 'titleSlug': 'check-knight-tour-configuration', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'The Number of Beautiful Subsets', 'titleSlug': 'the-number-of-beautiful-subsets', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}]}
{'title': 'Smallest Missing Non-negative Integer After Operations', 'titleSlug': 'smallest-missing-non-negative-integer-after-operations', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Make the Prefix Sum Non-negative', 'titleSlug': 'make-the-prefix-sum-non-negative', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'K Items With the Maximum Sum', 'titleSlug': 'k-items-with-the-maximum-sum', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Prime Subtraction Operation', 'titleSlug': 'prime-subtraction-operation', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Minimum Operations to Make All Array Elements Equal', 'titleSlug': 'minimum-operations-to-make-all-array-elements-equal', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Collect Coins in a Tree', 'titleSlug': 'collect-coins-in-a-tree', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Topological Sort', 'slug': 'topological-sort'}]}
{'title': 'Minimum Time to Eat All Grains', 'titleSlug': 'minimum-time-to-eat-all-grains', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Form Smallest Number From Two Digit Arrays', 'titleSlug': 'form-smallest-number-from-two-digit-arrays', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Find the Substring With Maximum Cost', 'titleSlug': 'find-the-substring-with-maximum-cost', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Make K-Subarray Sums Equal', 'titleSlug': 'make-k-subarray-sums-equal', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Shortest Cycle in a Graph', 'titleSlug': 'shortest-cycle-in-a-graph', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Find the Longest Balanced Substring of a Binary String', 'titleSlug': 'find-the-longest-balanced-substring-of-a-binary-string', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Convert an Array Into a 2D Array With Conditions', 'titleSlug': 'convert-an-array-into-a-2d-array-with-conditions', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}]}
{'title': 'Mice and Cheese', 'titleSlug': 'mice-and-cheese', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Minimum Reverse Operations', 'titleSlug': 'minimum-reverse-operations', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Beautiful Pairs', 'titleSlug': 'beautiful-pairs', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Geometry', 'slug': 'geometry'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Prime In Diagonal', 'titleSlug': 'prime-in-diagonal', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Sum of Distances', 'titleSlug': 'sum-of-distances', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Minimize the Maximum Difference of Pairs', 'titleSlug': 'minimize-the-maximum-difference-of-pairs', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Minimum Number of Visited Cells in a Grid', 'titleSlug': 'minimum-number-of-visited-cells-in-a-grid', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Check if Object Instance of Class', 'titleSlug': 'check-if-object-instance-of-class', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Array Prototype Last', 'titleSlug': 'array-prototype-last', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Counter', 'titleSlug': 'counter', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Sleep', 'titleSlug': 'sleep', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Cache With Time Limit', 'titleSlug': 'cache-with-time-limit', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Memoize', 'titleSlug': 'memoize', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Snail Traversal', 'titleSlug': 'snail-traversal', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Flatten Deeply Nested Array', 'titleSlug': 'flatten-deeply-nested-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Array Reduce Transformation', 'titleSlug': 'array-reduce-transformation', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Debounce', 'titleSlug': 'debounce', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': []}
{'title': 'JSON Deep Equal', 'titleSlug': 'json-deep-equal', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': []}
{'title': 'Function Composition', 'titleSlug': 'function-composition', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Memoize II', 'titleSlug': 'memoize-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Group By', 'titleSlug': 'group-by', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Curry', 'titleSlug': 'curry', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': []}
{'title': 'Convert Object to JSON String', 'titleSlug': 'convert-object-to-json-string', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': []}
{'title': 'Filter Elements from Array', 'titleSlug': 'filter-elements-from-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Apply Transform Over Each Element in Array', 'titleSlug': 'apply-transform-over-each-element-in-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Promise Pool', 'titleSlug': 'promise-pool', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': []}
{'title': 'Promise Time Limit', 'titleSlug': 'promise-time-limit', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Count the Number of K-Free Subsets', 'titleSlug': 'count-the-number-of-k-free-subsets', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}]}
{'title': 'Find the Width of Columns of a Grid', 'titleSlug': 'find-the-width-of-columns-of-a-grid', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Find the Score of All Prefixes of an Array', 'titleSlug': 'find-the-score-of-all-prefixes-of-an-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Cousins in Binary Tree II', 'titleSlug': 'cousins-in-binary-tree-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Design Graph With Shortest Path Calculator', 'titleSlug': 'design-graph-with-shortest-path-calculator', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Graph', 'slug': 'graph'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Shortest Path', 'slug': 'shortest-path'}]}
{'title': 'Row With Maximum Ones', 'titleSlug': 'row-with-maximum-ones', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Find the Maximum Divisibility Score', 'titleSlug': 'find-the-maximum-divisibility-score', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Minimum Additions to Make Valid String', 'titleSlug': 'minimum-additions-to-make-valid-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Minimize the Total Price of the Trips', 'titleSlug': 'minimize-the-total-price-of-the-trips', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Color the Triangle Red', 'titleSlug': 'color-the-triangle-red', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}]}
{'title': 'Generate Fibonacci Sequence', 'titleSlug': 'generate-fibonacci-sequence', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Nested Array Generator', 'titleSlug': 'nested-array-generator', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Design Cancellable Function', 'titleSlug': 'design-cancellable-function', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Calculate Delayed Arrival Time', 'titleSlug': 'calculate-delayed-arrival-time', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Sum Multiples', 'titleSlug': 'sum-multiples', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Sliding Subarray Beauty', 'titleSlug': 'sliding-subarray-beauty', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Minimum Number of Operations to Make All Array Elements Equal to 1', 'titleSlug': 'minimum-number-of-operations-to-make-all-array-elements-equal-to-1', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Find Maximal Uncovered Ranges', 'titleSlug': 'find-maximal-uncovered-ranges', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Maximum Sum With Exactly K Elements ', 'titleSlug': 'maximum-sum-with-exactly-k-elements', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Find the Prefix Common Array of Two Arrays', 'titleSlug': 'find-the-prefix-common-array-of-two-arrays', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Maximum Number of Fish in a Grid', 'titleSlug': 'maximum-number-of-fish-in-a-grid', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Make Array Empty', 'titleSlug': 'make-array-empty', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Determine the Winner of a Bowling Game', 'titleSlug': 'determine-the-winner-of-a-bowling-game', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'First Completely Painted Row or Column', 'titleSlug': 'first-completely-painted-row-or-column', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Minimum Cost of a Path With Special Roads', 'titleSlug': 'minimum-cost-of-a-path-with-special-roads', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Shortest Path', 'slug': 'shortest-path'}]}
{'title': 'Lexicographically Smallest Beautiful String', 'titleSlug': 'lexicographically-smallest-beautiful-string', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'The Knight’s Tour', 'titleSlug': 'the-knights-tour', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Counter II', 'titleSlug': 'counter-ii', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Allow One Function Call', 'titleSlug': 'allow-one-function-call', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Create Hello World Function', 'titleSlug': 'create-hello-world-function', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Find Latest Salaries', 'titleSlug': 'find-latest-salaries', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Count Artist Occurrences On Spotify Ranking List', 'titleSlug': 'count-artist-occurrences-on-spotify-ranking-list', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Find the Distinct Difference Array', 'titleSlug': 'find-the-distinct-difference-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}]}
{'title': 'Frequency Tracker', 'titleSlug': 'frequency-tracker', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Design', 'slug': 'design'}]}
{'title': 'Number of Adjacent Elements With the Same Color', 'titleSlug': 'number-of-adjacent-elements-with-the-same-color', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Make Costs of Paths Equal in a Binary Tree', 'titleSlug': 'make-costs-of-paths-equal-in-a-binary-tree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Split a Circular Linked List', 'titleSlug': 'split-a-circular-linked-list', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}]}
{'title': 'Array of Objects to Matrix', 'titleSlug': 'array-of-objects-to-matrix', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': []}
{'title': 'Throttle', 'titleSlug': 'throttle', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': []}
{'title': 'Chunk Array', 'titleSlug': 'chunk-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Number of Senior Citizens', 'titleSlug': 'number-of-senior-citizens', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Sum in a Matrix', 'titleSlug': 'sum-in-a-matrix', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Maximum OR', 'titleSlug': 'maximum-or', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Power of Heroes', 'titleSlug': 'power-of-heroes', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Find the Losers of the Circular Game', 'titleSlug': 'find-the-losers-of-the-circular-game', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Neighboring Bitwise XOR', 'titleSlug': 'neighboring-bitwise-xor', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Maximum Number of Moves in a Grid', 'titleSlug': 'maximum-number-of-moves-in-a-grid', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Count the Number of Complete Components', 'titleSlug': 'count-the-number-of-complete-components', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Immediate Food Delivery III', 'titleSlug': 'immediate-food-delivery-iii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Bikes Last Time Used ', 'titleSlug': 'bikes-last-time-used', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Find Active Users', 'titleSlug': 'find-active-users', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Extract Kth Character From The Rope Tree', 'titleSlug': 'extract-kth-character-from-the-rope-tree', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Infinite Method Object', 'titleSlug': 'infinite-method-object', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': []}
{'title': 'Immutability Helper', 'titleSlug': 'immutability-helper', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': []}
{'title': 'Make Object Immutable', 'titleSlug': 'make-object-immutable', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': []}
{'title': 'Call Function with Custom Context', 'titleSlug': 'call-function-with-custom-context', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Event Emitter', 'titleSlug': 'event-emitter', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Array Wrapper', 'titleSlug': 'array-wrapper', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Minimum String Length After Removing Substrings', 'titleSlug': 'minimum-string-length-after-removing-substrings', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Lexicographically Smallest Palindrome', 'titleSlug': 'lexicographically-smallest-palindrome', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Find the Punishment Number of an Integer', 'titleSlug': 'find-the-punishment-number-of-an-integer', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Backtracking', 'slug': 'backtracking'}]}
{'title': 'Modify Graph Edge Weights', 'titleSlug': 'modify-graph-edge-weights', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Graph', 'slug': 'graph'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Shortest Path', 'slug': 'shortest-path'}]}
{'title': 'Differences Between Two Objects', 'titleSlug': 'differences-between-two-objects', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': []}
{'title': 'Consecutive Transactions with Increasing Amounts', 'titleSlug': 'consecutive-transactions-with-increasing-amounts', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Minimum Operations to Make Numbers Non-positive', 'titleSlug': 'minimum-operations-to-make-numbers-non-positive', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Return Length of Arguments Passed', 'titleSlug': 'return-length-of-arguments-passed', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': []}
{'title': 'To Be Or Not To Be', 'titleSlug': 'to-be-or-not-to-be', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Compact Object', 'titleSlug': 'compact-object', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Buy Two Chocolates', 'titleSlug': 'buy-two-chocolates', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Extra Characters in a String', 'titleSlug': 'extra-characters-in-a-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Trie', 'slug': 'trie'}]}
{'title': 'Maximum Strength of a Group', 'titleSlug': 'maximum-strength-of-a-group', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Greatest Common Divisor Traversal', 'titleSlug': 'greatest-common-divisor-traversal', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Remove Trailing Zeros From a String', 'titleSlug': 'remove-trailing-zeros-from-a-string', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Difference of Number of Distinct Values on Diagonals', 'titleSlug': 'difference-of-number-of-distinct-values-on-diagonals', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Minimum Cost to Make All Characters Equal', 'titleSlug': 'minimum-cost-to-make-all-characters-equal', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Maximum Strictly Increasing Cells in a Matrix', 'titleSlug': 'maximum-strictly-increasing-cells-in-a-matrix', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Memoization', 'slug': 'memoization'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Find Shortest Path with K Hops', 'titleSlug': 'find-shortest-path-with-k-hops', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Graph', 'slug': 'graph'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Shortest Path', 'slug': 'shortest-path'}]}
{'title': 'Timeout Cancellation', 'titleSlug': 'timeout-cancellation', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Minimize String Length', 'titleSlug': 'minimize-string-length', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Semi-Ordered Permutation', 'titleSlug': 'semi-ordered-permutation', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Sum of Matrix After Queries', 'titleSlug': 'sum-of-matrix-after-queries', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}]}
{'title': 'Count of Integers', 'titleSlug': 'count-of-integers', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Popularity Percentage', 'titleSlug': 'popularity-percentage', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Execute Asynchronous Functions in Parallel', 'titleSlug': 'execute-asynchronous-functions-in-parallel', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Join Two Arrays by ID', 'titleSlug': 'join-two-arrays-by-id', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Add Two Promises', 'titleSlug': 'add-two-promises', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Sort By', 'titleSlug': 'sort-by', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Interval Cancellation', 'titleSlug': 'interval-cancellation', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Calculator with Method Chaining', 'titleSlug': 'calculator-with-method-chaining', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Is Object Empty', 'titleSlug': 'is-object-empty', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Count Houses in a Circular Street', 'titleSlug': 'count-houses-in-a-circular-street', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Interactive', 'slug': 'interactive'}]}
{'title': 'Check if The Number is Fascinating', 'titleSlug': 'check-if-the-number-is-fascinating', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}]}
{'title': 'Find the Longest Semi-Repetitive Substring', 'titleSlug': 'find-the-longest-semi-repetitive-substring', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Movement of Robots', 'titleSlug': 'movement-of-robots', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Brainteaser', 'slug': 'brainteaser'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Find a Good Subset of the Matrix', 'titleSlug': 'find-a-good-subset-of-the-matrix', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Neither Minimum nor Maximum', 'titleSlug': 'neither-minimum-nor-maximum', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Lexicographically Smallest String After Substring Operation', 'titleSlug': 'lexicographically-smallest-string-after-substring-operation', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Collecting Chocolates', 'titleSlug': 'collecting-chocolates', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Maximum Sum Queries', 'titleSlug': 'maximum-sum-queries', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Find the Closest Marked Node', 'titleSlug': 'find-the-closest-marked-node', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Shortest Path', 'slug': 'shortest-path'}]}
{'title': 'Count Occurrences in Text', 'titleSlug': 'count-occurrences-in-text', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Total Distance Traveled', 'titleSlug': 'total-distance-traveled', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Find the Value of the Partition', 'titleSlug': 'find-the-value-of-the-partition', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Special Permutations', 'titleSlug': 'special-permutations', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Painting the Walls', 'titleSlug': 'painting-the-walls', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Count Substrings Without Repeating Character', 'titleSlug': 'count-substrings-without-repeating-character', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Find Maximum Number of String Pairs', 'titleSlug': 'find-maximum-number-of-string-pairs', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Construct the Longest New String', 'titleSlug': 'construct-the-longest-new-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Brainteaser', 'slug': 'brainteaser'}]}
{'title': 'Decremental String Concatenation', 'titleSlug': 'decremental-string-concatenation', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Count Zero Request Servers', 'titleSlug': 'count-zero-request-servers', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Number of Beautiful Pairs', 'titleSlug': 'number-of-beautiful-pairs', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Counting', 'slug': 'counting'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Minimum Operations to Make the Integer Zero', 'titleSlug': 'minimum-operations-to-make-the-integer-zero', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Brainteaser', 'slug': 'brainteaser'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Ways to Split Array Into Good Subarrays', 'titleSlug': 'ways-to-split-array-into-good-subarrays', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Robot Collisions', 'titleSlug': 'robot-collisions', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Customers with Maximum Number of Transactions on Consecutive Days', 'titleSlug': 'customers-with-maximum-number-of-transactions-on-consecutive-days', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Count Houses in a Circular Street II', 'titleSlug': 'count-houses-in-a-circular-street-ii', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': []}
{'title': 'Bind Function to Context', 'titleSlug': 'bind-function-to-context', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': []}
{'title': 'Deep Merge of Two Objects', 'titleSlug': 'deep-merge-of-two-objects', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': []}
{'title': 'Query Batching', 'titleSlug': 'query-batching', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': []}
{'title': 'Generate Circular Array Values', 'titleSlug': 'generate-circular-array-values', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': []}
{'title': 'Next Day', 'titleSlug': 'next-day', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': []}
{'title': 'Convert JSON String to Object', 'titleSlug': 'convert-json-string-to-object', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': []}
{'title': 'Longest Even Odd Subarray With Threshold', 'titleSlug': 'longest-even-odd-subarray-with-threshold', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Prime Pairs With Target Sum', 'titleSlug': 'prime-pairs-with-target-sum', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Enumeration', 'slug': 'enumeration'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Continuous Subarrays', 'titleSlug': 'continuous-subarrays', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}, {'name': 'Monotonic Queue', 'slug': 'monotonic-queue'}]}
{'title': 'Sum of Imbalance Numbers of All Subarrays', 'titleSlug': 'sum-of-imbalance-numbers-of-all-subarrays', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Is Array a Preorder of Some \u200cBinary Tree', 'titleSlug': 'is-array-a-preorder-of-some-binary-tree', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Stack', 'slug': 'stack'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Longest Alternating Subarray', 'titleSlug': 'longest-alternating-subarray', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Relocate Marbles', 'titleSlug': 'relocate-marbles', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Partition String Into Minimum Beautiful Substrings', 'titleSlug': 'partition-string-into-minimum-beautiful-substrings', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Backtracking', 'slug': 'backtracking'}]}
{'title': 'Number of Black Blocks', 'titleSlug': 'number-of-black-blocks', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Find the Maximum Achievable Number', 'titleSlug': 'find-the-maximum-achievable-number', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Maximum Number of Jumps to Reach the Last Index', 'titleSlug': 'maximum-number-of-jumps-to-reach-the-last-index', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Longest Non-decreasing Subarray From Two Arrays', 'titleSlug': 'longest-non-decreasing-subarray-from-two-arrays', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Apply Operations to Make All Array Elements Equal to Zero', 'titleSlug': 'apply-operations-to-make-all-array-elements-equal-to-zero', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Height of Special Binary Tree', 'titleSlug': 'height-of-special-binary-tree', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Array Upper Bound', 'titleSlug': 'array-upper-bound', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': []}
{'title': 'Undefined to Null', 'titleSlug': 'undefined-to-null', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': []}
{'title': 'Convert Callback Based Function to Promise Based Function', 'titleSlug': 'convert-callback-based-function-to-promise-based-function', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': []}
{'title': 'Date Range Generator', 'titleSlug': 'date-range-generator', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': []}
{'title': 'Sum of Squares of Special Elements ', 'titleSlug': 'sum-of-squares-of-special-elements', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Maximum Beauty of an Array After Applying Operation', 'titleSlug': 'maximum-beauty-of-an-array-after-applying-operation', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Minimum Index of a Valid Split', 'titleSlug': 'minimum-index-of-a-valid-split', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Length of the Longest Valid Substring', 'titleSlug': 'length-of-the-longest-valid-substring', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Number of Unique Categories', 'titleSlug': 'number-of-unique-categories', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Interactive', 'slug': 'interactive'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Flight Occupancy and Waitlist Analysis', 'titleSlug': 'flight-occupancy-and-waitlist-analysis', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Check if Array is Good', 'titleSlug': 'check-if-array-is-good', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Sort Vowels in a String', 'titleSlug': 'sort-vowels-in-a-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Visit Array Positions to Maximize Score', 'titleSlug': 'visit-array-positions-to-maximize-score', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Ways to Express an Integer as Sum of Powers', 'titleSlug': 'ways-to-express-an-integer-as-sum-of-powers', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Split Strings by Separator', 'titleSlug': 'split-strings-by-separator', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Largest Element in an Array after Merge Operations', 'titleSlug': 'largest-element-in-an-array-after-merge-operations', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Maximum Number of Groups With Increasing Length', 'titleSlug': 'maximum-number-of-groups-with-increasing-length', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Count Paths That Can Form a Palindrome in a Tree', 'titleSlug': 'count-paths-that-can-form-a-palindrome-in-a-tree', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Count Nodes That Are Great Enough', 'titleSlug': 'count-nodes-that-are-great-enough', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Status of Flight Tickets', 'titleSlug': 'status-of-flight-tickets', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': []}
{'title': 'Create Object from Two Arrays', 'titleSlug': 'create-object-from-two-arrays', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': []}
{'title': 'Parallel Execution of Promises for Individual Results Retrieval', 'titleSlug': 'parallel-execution-of-promises-for-individual-results-retrieval', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': []}
{'title': 'Repeat String', 'titleSlug': 'repeat-string', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': []}
{'title': 'Partial Function with Placeholders', 'titleSlug': 'partial-function-with-placeholders', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': []}
{'title': 'Number of Employees Who Met the Target', 'titleSlug': 'number-of-employees-who-met-the-target', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Count Complete Subarrays in an Array', 'titleSlug': 'count-complete-subarrays-in-an-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Shortest String That Contains Three Strings', 'titleSlug': 'shortest-string-that-contains-three-strings', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Count Stepping Numbers in Range', 'titleSlug': 'count-stepping-numbers-in-range', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Find The K-th Lucky Number', 'titleSlug': 'find-the-k-th-lucky-number', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Factorial Generator', 'titleSlug': 'factorial-generator', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': []}
{'title': 'Array Prototype ForEach', 'titleSlug': 'array-prototype-foreach', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': []}
{'title': 'Custom Interval', 'titleSlug': 'custom-interval', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': []}
{'title': 'Account Balance After Rounded Purchase', 'titleSlug': 'account-balance-after-rounded-purchase', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Insert Greatest Common Divisors in Linked List', 'titleSlug': 'insert-greatest-common-divisors-in-linked-list', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Minimum Seconds to Equalize a Circular Array', 'titleSlug': 'minimum-seconds-to-equalize-a-circular-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}]}
{'title': 'Minimum Time to Make Array Sum At Most x', 'titleSlug': 'minimum-time-to-make-array-sum-at-most-x', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Faulty Keyboard', 'titleSlug': 'faulty-keyboard', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Check if it is Possible to Split Array', 'titleSlug': 'check-if-it-is-possible-to-split-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Find the Safest Path in a Grid', 'titleSlug': 'find-the-safest-path-in-a-grid', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Maximum Elegance of a K-Length Subsequence', 'titleSlug': 'maximum-elegance-of-a-k-length-subsequence', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Minimum Time Takes to Reach Destination Without Drowning', 'titleSlug': 'minimum-time-takes-to-reach-destination-without-drowning', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Max Pair Sum in an Array', 'titleSlug': 'max-pair-sum-in-an-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}]}
{'title': 'Double a Number Represented as a Linked List', 'titleSlug': 'double-a-number-represented-as-a-linked-list', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Stack', 'slug': 'stack'}]}
{'title': 'Minimum Absolute Difference Between Elements With Constraint', 'titleSlug': 'minimum-absolute-difference-between-elements-with-constraint', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Apply Operations to Maximize Score', 'titleSlug': 'apply-operations-to-maximize-score', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Minimum Relative Loss After Buying Chocolates', 'titleSlug': 'minimum-relative-loss-after-buying-chocolates', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Election Results', 'titleSlug': 'election-results', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': []}
{'title': 'Delay the Resolution of Each Promise', 'titleSlug': 'delay-the-resolution-of-each-promise', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': []}
{'title': 'Inversion of Object', 'titleSlug': 'inversion-of-object', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': []}
{'title': 'Deep Object Filter', 'titleSlug': 'deep-object-filter', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': []}
{'title': 'Count Pairs Whose Sum is Less than Target', 'titleSlug': 'count-pairs-whose-sum-is-less-than-target', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Make String a Subsequence Using Cyclic Increments', 'titleSlug': 'make-string-a-subsequence-using-cyclic-increments', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Sorting Three Groups', 'titleSlug': 'sorting-three-groups', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Number of Beautiful Integers in the Range', 'titleSlug': 'number-of-beautiful-integers-in-the-range', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Check if a String Is an Acronym of Words', 'titleSlug': 'check-if-a-string-is-an-acronym-of-words', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Determine the Minimum Sum of a k-avoiding Array', 'titleSlug': 'determine-the-minimum-sum-of-a-k-avoiding-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Maximize the Profit as the Salesman', 'titleSlug': 'maximize-the-profit-as-the-salesman', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Find the Longest Equal Subarray', 'titleSlug': 'find-the-longest-equal-subarray', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Maximal Range That Each Element Is Maximum in It', 'titleSlug': 'maximal-range-that-each-element-is-maximum-in-it', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Furthest Point From Origin', 'titleSlug': 'furthest-point-from-origin', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Find the Minimum Possible Sum of a Beautiful Array', 'titleSlug': 'find-the-minimum-possible-sum-of-a-beautiful-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Minimum Operations to Form Subsequence With Target Sum', 'titleSlug': 'minimum-operations-to-form-subsequence-with-target-sum', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Maximize Value of Function in a Ball Passing Game', 'titleSlug': 'maximize-value-of-function-in-a-ball-passing-game', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Total Traveled Distance', 'titleSlug': 'total-traveled-distance', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Maximum Coins Heroes Can Collect', 'titleSlug': 'maximum-coins-heroes-can-collect', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Check if Strings Can be Made Equal With Operations I', 'titleSlug': 'check-if-strings-can-be-made-equal-with-operations-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Check if Strings Can be Made Equal With Operations II', 'titleSlug': 'check-if-strings-can-be-made-equal-with-operations-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Maximum Sum of Almost Unique Subarray', 'titleSlug': 'maximum-sum-of-almost-unique-subarray', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Count K-Subsequences of a String With Maximum Beauty', 'titleSlug': 'count-k-subsequences-of-a-string-with-maximum-beauty', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}]}
{'title': '  Count Symmetric Integers', 'titleSlug': 'count-symmetric-integers', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Minimum Operations to Make a Special Number', 'titleSlug': 'minimum-operations-to-make-a-special-number', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Count of Interesting Subarrays', 'titleSlug': 'count-of-interesting-subarrays', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Minimum Edge Weight Equilibrium Queries in a Tree', 'titleSlug': 'minimum-edge-weight-equilibrium-queries-in-a-tree', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Strongly Connected Component', 'slug': 'strongly-connected-component'}]}
{'title': 'Smallest Number With Given Digit Product', 'titleSlug': 'smallest-number-with-given-digit-product', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Points That Intersect With Cars', 'titleSlug': 'points-that-intersect-with-cars', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Determine if a Cell Is Reachable at a Given Time', 'titleSlug': 'determine-if-a-cell-is-reachable-at-a-given-time', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Minimum Moves to Spread Stones Over Grid', 'titleSlug': 'minimum-moves-to-spread-stones-over-grid', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'String Transformation', 'titleSlug': 'string-transformation', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'String Matching', 'slug': 'string-matching'}]}
{'title': 'Sum of Remoteness of All Cells', 'titleSlug': 'sum-of-remoteness-of-all-cells', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Highest Salaries Difference', 'titleSlug': 'highest-salaries-difference', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Rolling Average Steps', 'titleSlug': 'rolling-average-steps', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Minimum Right Shifts to Sort the Array', 'titleSlug': 'minimum-right-shifts-to-sort-the-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Minimum Array Length After Pair Removals', 'titleSlug': 'minimum-array-length-after-pair-removals', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Count Pairs of Points With Distance k', 'titleSlug': 'count-pairs-of-points-with-distance-k', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Minimum Edge Reversals So Every Node Is Reachable', 'titleSlug': 'minimum-edge-reversals-so-every-node-is-reachable', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Sum of Values at Indices With K Set Bits', 'titleSlug': 'sum-of-values-at-indices-with-k-set-bits', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Happy Students', 'titleSlug': 'happy-students', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Maximum Number of Alloys', 'titleSlug': 'maximum-number-of-alloys', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Maximum Element-Sum of a Complete Subset of Indices', 'titleSlug': 'maximum-element-sum-of-a-complete-subset-of-indices', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Maximum Length of Semi-Decreasing Subarrays', 'titleSlug': 'maximum-length-of-semi-decreasing-subarrays', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Maximum Odd Binary Number', 'titleSlug': 'maximum-odd-binary-number', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Beautiful Towers I', 'titleSlug': 'beautiful-towers-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Beautiful Towers II', 'titleSlug': 'beautiful-towers-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Count Valid Paths in a Tree', 'titleSlug': 'count-valid-paths-in-a-tree', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'The Wording Game', 'titleSlug': 'the-wording-game', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Game Theory', 'slug': 'game-theory'}]}
{'title': 'Minimum Operations to Collect Elements', 'titleSlug': 'minimum-operations-to-collect-elements', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Minimum Number of Operations to Make Array Empty', 'titleSlug': 'minimum-number-of-operations-to-make-array-empty', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Split Array Into Maximum Number of Subarrays', 'titleSlug': 'split-array-into-maximum-number-of-subarrays', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Maximum Number of K-Divisible Components', 'titleSlug': 'maximum-number-of-k-divisible-components', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}]}
{'title': 'Maximum Value of an Ordered Triplet I', 'titleSlug': 'maximum-value-of-an-ordered-triplet-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Maximum Value of an Ordered Triplet II', 'titleSlug': 'maximum-value-of-an-ordered-triplet-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Minimum Size Subarray in Infinite Array', 'titleSlug': 'minimum-size-subarray-in-infinite-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Count Visited Nodes in a Directed Graph', 'titleSlug': 'count-visited-nodes-in-a-directed-graph', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Memoization', 'slug': 'memoization'}]}
{'title': 'Create a DataFrame from List', 'titleSlug': 'create-a-dataframe-from-list', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Get the Size of a DataFrame', 'titleSlug': 'get-the-size-of-a-dataframe', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Display the First Three Rows', 'titleSlug': 'display-the-first-three-rows', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Select Data', 'titleSlug': 'select-data', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Create a New Column', 'titleSlug': 'create-a-new-column', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Drop Duplicate Rows', 'titleSlug': 'drop-duplicate-rows', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Drop Missing Data', 'titleSlug': 'drop-missing-data', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Modify Columns', 'titleSlug': 'modify-columns', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Rename Columns', 'titleSlug': 'rename-columns', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Change Data Type', 'titleSlug': 'change-data-type', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Fill Missing Data', 'titleSlug': 'fill-missing-data', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Reshape Data: Concatenate', 'titleSlug': 'reshape-data-concatenate', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Reshape Data: Pivot', 'titleSlug': 'reshape-data-pivot', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Reshape Data: Melt', 'titleSlug': 'reshape-data-melt', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Method Chaining', 'titleSlug': 'method-chaining', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Minimizing Array After Replacing Pairs With Their Product', 'titleSlug': 'minimizing-array-after-replacing-pairs-with-their-product', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Calculate Orders Within Each Interval', 'titleSlug': 'calculate-orders-within-each-interval', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Divisible and Non-divisible Sums Difference', 'titleSlug': 'divisible-and-non-divisible-sums-difference', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Minimum Processing Time', 'titleSlug': 'minimum-processing-time', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Apply Operations to Make Two Strings Equal', 'titleSlug': 'apply-operations-to-make-two-strings-equal', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Apply Operations on Array to Maximize Sum of Squares', 'titleSlug': 'apply-operations-on-array-to-maximize-sum-of-squares', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Maximum Linear Stock Score', 'titleSlug': 'maximum-linear-stock-score', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}]}
{'title': 'Last Visited Integers', 'titleSlug': 'last-visited-integers', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Longest Unequal Adjacent Groups Subsequence I', 'titleSlug': 'longest-unequal-adjacent-groups-subsequence-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Longest Unequal Adjacent Groups Subsequence II', 'titleSlug': 'longest-unequal-adjacent-groups-subsequence-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Count of Sub-Multisets With Bounded Sum', 'titleSlug': 'count-of-sub-multisets-with-bounded-sum', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Find Indices With Index and Value Difference I', 'titleSlug': 'find-indices-with-index-and-value-difference-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}]}
{'title': 'Shortest and Lexicographically Smallest Beautiful String', 'titleSlug': 'shortest-and-lexicographically-smallest-beautiful-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Find Indices With Index and Value Difference II', 'titleSlug': 'find-indices-with-index-and-value-difference-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}]}
{'title': 'Construct Product Matrix', 'titleSlug': 'construct-product-matrix', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Maximum Profitable Triplets With Increasing Prices I', 'titleSlug': 'maximum-profitable-triplets-with-increasing-prices-i', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}]}
{'title': 'Minimum Sum of Mountain Triplets I', 'titleSlug': 'minimum-sum-of-mountain-triplets-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Minimum Sum of Mountain Triplets II', 'titleSlug': 'minimum-sum-of-mountain-triplets-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Minimum Number of Groups to Create a Valid Assignment', 'titleSlug': 'minimum-number-of-groups-to-create-a-valid-assignment', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Minimum Changes to Make K Semi-palindromes', 'titleSlug': 'minimum-changes-to-make-k-semi-palindromes', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Number of Ways to Reach Destination in the Grid', 'titleSlug': 'number-of-ways-to-reach-destination-in-the-grid', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}]}
{'title': 'Subarrays Distinct Element Sum of Squares I', 'titleSlug': 'subarrays-distinct-element-sum-of-squares-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}]}
{'title': 'Minimum Number of Changes to Make Binary String Beautiful', 'titleSlug': 'minimum-number-of-changes-to-make-binary-string-beautiful', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Length of the Longest Subsequence That Sums to Target', 'titleSlug': 'length-of-the-longest-subsequence-that-sums-to-target', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Subarrays Distinct Element Sum of Squares II', 'titleSlug': 'subarrays-distinct-element-sum-of-squares-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}]}
{'title': 'Find the K-or of an Array', 'titleSlug': 'find-the-k-or-of-an-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Minimum Equal Sum of Two Arrays After Replacing Zeros', 'titleSlug': 'minimum-equal-sum-of-two-arrays-after-replacing-zeros', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Minimum Increment Operations to Make Array Beautiful', 'titleSlug': 'minimum-increment-operations-to-make-array-beautiful', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Maximum Points After Collecting Coins From All Nodes', 'titleSlug': 'maximum-points-after-collecting-coins-from-all-nodes', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Memoization', 'slug': 'memoization'}]}
{'title': 'Maximum Profitable Triplets With Increasing Prices II', 'titleSlug': 'maximum-profitable-triplets-with-increasing-prices-ii', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}]}
{'title': 'Market Analysis III', 'titleSlug': 'market-analysis-iii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Find Champion I', 'titleSlug': 'find-champion-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Find Champion II', 'titleSlug': 'find-champion-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Maximum Score After Applying Operations on a Tree', 'titleSlug': 'maximum-score-after-applying-operations-on-a-tree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}]}
{'title': 'Maximum Balanced Subsequence Sum', 'titleSlug': 'maximum-balanced-subsequence-sum', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}]}
{'title': 'Distribute Candies Among Children III', 'titleSlug': 'distribute-candies-among-children-iii', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}]}
{'title': 'Distribute Candies Among Children I', 'titleSlug': 'distribute-candies-among-children-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Distribute Candies Among Children II', 'titleSlug': 'distribute-candies-among-children-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Number of Strings Which Can Be Rearranged to Contain Substring', 'titleSlug': 'number-of-strings-which-can-be-rearranged-to-contain-substring', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}]}
{'title': 'Maximum Spending After Buying Items', 'titleSlug': 'maximum-spending-after-buying-items', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Maximum Strong Pair XOR I', 'titleSlug': 'maximum-strong-pair-xor-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Trie', 'slug': 'trie'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'High-Access Employees', 'titleSlug': 'high-access-employees', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Minimum Operations to Maximize Last Elements in Arrays', 'titleSlug': 'minimum-operations-to-maximize-last-elements-in-arrays', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Maximum Strong Pair XOR II', 'titleSlug': 'maximum-strong-pair-xor-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Trie', 'slug': 'trie'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Number of Equal Numbers Blocks', 'titleSlug': 'number-of-equal-numbers-blocks', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Interactive', 'slug': 'interactive'}]}
{'title': 'Make Three Strings Equal', 'titleSlug': 'make-three-strings-equal', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Separate Black and White Balls', 'titleSlug': 'separate-black-and-white-balls', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Maximum Xor Product', 'titleSlug': 'maximum-xor-product', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Find Building Where Alice and Bob Can Meet', 'titleSlug': 'find-building-where-alice-and-bob-can-meet', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Maximum GCD-Sum of a Subarray', 'titleSlug': 'maximum-gcd-sum-of-a-subarray', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Find Words Containing Character', 'titleSlug': 'find-words-containing-character', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Maximize Area of Square Hole in Grid', 'titleSlug': 'maximize-area-of-square-hole-in-grid', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Minimum Number of Coins for Fruits', 'titleSlug': 'minimum-number-of-coins-for-fruits', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Monotonic Queue', 'slug': 'monotonic-queue'}]}
{'title': 'Find Maximum Non-decreasing Array Length', 'titleSlug': 'find-maximum-non-decreasing-array-length', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}, {'name': 'Monotonic Queue', 'slug': 'monotonic-queue'}]}
{'title': 'Matrix Similarity After Cyclic Shifts', 'titleSlug': 'matrix-similarity-after-cyclic-shifts', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Count Beautiful Substrings I', 'titleSlug': 'count-beautiful-substrings-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Enumeration', 'slug': 'enumeration'}, {'name': 'Number Theory', 'slug': 'number-theory'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Make Lexicographically Smallest Array by Swapping Elements', 'titleSlug': 'make-lexicographically-smallest-array-by-swapping-elements', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Count Beautiful Substrings II', 'titleSlug': 'count-beautiful-substrings-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Number Theory', 'slug': 'number-theory'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Number of Divisible Substrings', 'titleSlug': 'number-of-divisible-substrings', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Find the Peaks', 'titleSlug': 'find-the-peaks', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Minimum Number of Coins to be Added', 'titleSlug': 'minimum-number-of-coins-to-be-added', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Count Complete Substrings', 'titleSlug': 'count-complete-substrings', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Count the Number of Infection Sequences', 'titleSlug': 'count-the-number-of-infection-sequences', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}]}
{'title': 'Number of Same-End Substrings', 'titleSlug': 'number-of-same-end-substrings', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Find Common Elements Between Two Arrays', 'titleSlug': 'find-common-elements-between-two-arrays', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}]}
{'title': 'Remove Adjacent Almost-Equal Characters', 'titleSlug': 'remove-adjacent-almost-equal-characters', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Length of Longest Subarray With at Most K Frequency', 'titleSlug': 'length-of-longest-subarray-with-at-most-k-frequency', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Number of Possible Sets of Closing Branches', 'titleSlug': 'number-of-possible-sets-of-closing-branches', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Enumeration', 'slug': 'enumeration'}, {'name': 'Shortest Path', 'slug': 'shortest-path'}]}
{'title': 'Count Tested Devices After Test Operations', 'titleSlug': 'count-tested-devices-after-test-operations', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Simulation', 'slug': 'simulation'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Double Modular Exponentiation', 'titleSlug': 'double-modular-exponentiation', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Count Subarrays Where Max Element Appears at Least K Times', 'titleSlug': 'count-subarrays-where-max-element-appears-at-least-k-times', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Count the Number of Good Partitions', 'titleSlug': 'count-the-number-of-good-partitions', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}]}
{'title': 'Number of Divisible Triplet Sums', 'titleSlug': 'number-of-divisible-triplet-sums', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}]}
{'title': 'Find Missing and Repeated Values', 'titleSlug': 'find-missing-and-repeated-values', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Divide Array Into Arrays With Max Difference', 'titleSlug': 'divide-array-into-arrays-with-max-difference', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Minimum Cost to Make Array Equalindromic', 'titleSlug': 'minimum-cost-to-make-array-equalindromic', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Apply Operations to Maximize Frequency Score', 'titleSlug': 'apply-operations-to-maximize-frequency-score', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Minimum Number of Coins for Fruits II', 'titleSlug': 'minimum-number-of-coins-for-fruits-ii', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Monotonic Queue', 'slug': 'monotonic-queue'}]}
{'title': 'Count the Number of Incremovable Subarrays I', 'titleSlug': 'count-the-number-of-incremovable-subarrays-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Find Polygon With the Largest Perimeter', 'titleSlug': 'find-polygon-with-the-largest-perimeter', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Count the Number of Incremovable Subarrays II', 'titleSlug': 'count-the-number-of-incremovable-subarrays-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Find Number of Coins to Place in Tree Nodes', 'titleSlug': 'find-number-of-coins-to-place-in-tree-nodes', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Minimum Number Game', 'titleSlug': 'minimum-number-game', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Maximum Square Area by Removing Fences From a Field', 'titleSlug': 'maximum-square-area-by-removing-fences-from-a-field', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Minimum Cost to Convert String I', 'titleSlug': 'minimum-cost-to-convert-string-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Shortest Path', 'slug': 'shortest-path'}]}
{'title': 'Minimum Cost to Convert String II', 'titleSlug': 'minimum-cost-to-convert-string-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Trie', 'slug': 'trie'}, {'name': 'Shortest Path', 'slug': 'shortest-path'}]}
{'title': 'Symmetric Coordinates', 'titleSlug': 'symmetric-coordinates', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Most Expensive Item That Can Not Be Bought', 'titleSlug': 'most-expensive-item-that-can-not-be-bought', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Check if Bitwise OR Has Trailing Zeros', 'titleSlug': 'check-if-bitwise-or-has-trailing-zeros', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Find Longest Special Substring That Occurs Thrice I', 'titleSlug': 'find-longest-special-substring-that-occurs-thrice-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Find Longest Special Substring That Occurs Thrice II', 'titleSlug': 'find-longest-special-substring-that-occurs-thrice-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Palindrome Rearrangement Queries', 'titleSlug': 'palindrome-rearrangement-queries', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Find Peak Calling Hours for Each City', 'titleSlug': 'find-peak-calling-hours-for-each-city', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Calculate Compressed Mean', 'titleSlug': 'calculate-compressed-mean', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Find Third Transaction', 'titleSlug': 'find-third-transaction', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Find Expensive Cities', 'titleSlug': 'find-expensive-cities', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Manager of the Largest Department', 'titleSlug': 'manager-of-the-largest-department', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Class Performance', 'titleSlug': 'class-performance', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Loan Types', 'titleSlug': 'loan-types', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Top Three Wineries ', 'titleSlug': 'top-three-wineries', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Number of Self-Divisible Permutations', 'titleSlug': 'number-of-self-divisible-permutations', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Number Theory', 'slug': 'number-theory'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Friday Purchases I', 'titleSlug': 'friday-purchases-i', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Friday Purchases II ', 'titleSlug': 'friday-purchases-ii', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Viewers Turned Streamers', 'titleSlug': 'viewers-turned-streamers', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Smallest Missing Integer Greater Than Sequential Prefix Sum', 'titleSlug': 'smallest-missing-integer-greater-than-sequential-prefix-sum', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Minimum Number of Operations to Make Array XOR Equal to K', 'titleSlug': 'minimum-number-of-operations-to-make-array-xor-equal-to-k', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Minimum Number of Operations to Make X and Y Equal', 'titleSlug': 'minimum-number-of-operations-to-make-x-and-y-equal', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Memoization', 'slug': 'memoization'}]}
{'title': 'Count the Number of Powerful Integers', 'titleSlug': 'count-the-number-of-powerful-integers', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Maximum Area of Longest Diagonal Rectangle', 'titleSlug': 'maximum-area-of-longest-diagonal-rectangle', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Minimum Moves to Capture The Queen', 'titleSlug': 'minimum-moves-to-capture-the-queen', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Maximum Size of a Set After Removals', 'titleSlug': 'maximum-size-of-a-set-after-removals', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Maximize the Number of Partitions After Operations', 'titleSlug': 'maximize-the-number-of-partitions-after-operations', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Maximum Subtree of the Same Color', 'titleSlug': 'maximum-subtree-of-the-same-color', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}]}
{'title': 'Count Elements With Maximum Frequency', 'titleSlug': 'count-elements-with-maximum-frequency', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Find Beautiful Indices in the Given Array I', 'titleSlug': 'find-beautiful-indices-in-the-given-array-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Rolling Hash', 'slug': 'rolling-hash'}, {'name': 'String Matching', 'slug': 'string-matching'}, {'name': 'Hash Function', 'slug': 'hash-function'}]}
{'title': 'Maximum Number That Sum of the Prices Is Less Than or Equal to K', 'titleSlug': 'maximum-number-that-sum-of-the-prices-is-less-than-or-equal-to-k', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Find Beautiful Indices in the Given Array II', 'titleSlug': 'find-beautiful-indices-in-the-given-array-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Rolling Hash', 'slug': 'rolling-hash'}, {'name': 'String Matching', 'slug': 'string-matching'}, {'name': 'Hash Function', 'slug': 'hash-function'}]}
{'title': 'Maximum Number of Intersections on the Chart', 'titleSlug': 'maximum-number-of-intersections-on-the-chart', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Geometry', 'slug': 'geometry'}]}
{'title': 'Divide an Array Into Subarrays With Minimum Cost I', 'titleSlug': 'divide-an-array-into-subarrays-with-minimum-cost-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Find if Array Can Be Sorted', 'titleSlug': 'find-if-array-can-be-sorted', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Minimize Length of Array Using Operations', 'titleSlug': 'minimize-length-of-array-using-operations', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Divide an Array Into Subarrays With Minimum Cost II', 'titleSlug': 'divide-an-array-into-subarrays-with-minimum-cost-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Minimum Number of Pushes to Type Word I', 'titleSlug': 'minimum-number-of-pushes-to-type-word-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Count the Number of Houses at a Certain Distance I', 'titleSlug': 'count-the-number-of-houses-at-a-certain-distance-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Minimum Number of Pushes to Type Word II', 'titleSlug': 'minimum-number-of-pushes-to-type-word-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Count the Number of Houses at a Certain Distance II', 'titleSlug': 'count-the-number-of-houses-at-a-certain-distance-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Graph', 'slug': 'graph'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Maximum Number of Removal Queries That Can Be Processed I', 'titleSlug': 'maximum-number-of-removal-queries-that-can-be-processed-i', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Number of Changing Keys', 'titleSlug': 'number-of-changing-keys', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Find the Maximum Number of Elements in Subset', 'titleSlug': 'find-the-maximum-number-of-elements-in-subset', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Alice and Bob Playing Flower Game', 'titleSlug': 'alice-and-bob-playing-flower-game', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Minimize OR of Remaining Elements Using Operations', 'titleSlug': 'minimize-or-of-remaining-elements-using-operations', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Find Pattern in Infinite Stream I', 'titleSlug': 'find-pattern-in-infinite-stream-i', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Rolling Hash', 'slug': 'rolling-hash'}, {'name': 'String Matching', 'slug': 'string-matching'}, {'name': 'Hash Function', 'slug': 'hash-function'}]}
{'title': 'Type of Triangle', 'titleSlug': 'type-of-triangle', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Find the Number of Ways to Place People I', 'titleSlug': 'find-the-number-of-ways-to-place-people-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Geometry', 'slug': 'geometry'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Maximum Good Subarray Sum', 'titleSlug': 'maximum-good-subarray-sum', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Find the Number of Ways to Place People II', 'titleSlug': 'find-the-number-of-ways-to-place-people-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Geometry', 'slug': 'geometry'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Ant on the Boundary', 'titleSlug': 'ant-on-the-boundary', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Simulation', 'slug': 'simulation'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Minimum Time to Revert Word to Initial State I', 'titleSlug': 'minimum-time-to-revert-word-to-initial-state-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Rolling Hash', 'slug': 'rolling-hash'}, {'name': 'String Matching', 'slug': 'string-matching'}, {'name': 'Hash Function', 'slug': 'hash-function'}]}
{'title': 'Find the Grid of Region Average', 'titleSlug': 'find-the-grid-of-region-average', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Minimum Time to Revert Word to Initial State II', 'titleSlug': 'minimum-time-to-revert-word-to-initial-state-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Rolling Hash', 'slug': 'rolling-hash'}, {'name': 'String Matching', 'slug': 'string-matching'}, {'name': 'Hash Function', 'slug': 'hash-function'}]}
{'title': 'Count Numbers With Unique Digits II', 'titleSlug': 'count-numbers-with-unique-digits-ii', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Modify the Matrix', 'titleSlug': 'modify-the-matrix', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Number of Subarrays That Match a Pattern I', 'titleSlug': 'number-of-subarrays-that-match-a-pattern-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Rolling Hash', 'slug': 'rolling-hash'}, {'name': 'String Matching', 'slug': 'string-matching'}, {'name': 'Hash Function', 'slug': 'hash-function'}]}
{'title': 'Maximum Palindromes After Operations', 'titleSlug': 'maximum-palindromes-after-operations', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Number of Subarrays That Match a Pattern II', 'titleSlug': 'number-of-subarrays-that-match-a-pattern-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Rolling Hash', 'slug': 'rolling-hash'}, {'name': 'String Matching', 'slug': 'string-matching'}, {'name': 'Hash Function', 'slug': 'hash-function'}]}
{'title': 'Find Pattern in Infinite Stream II', 'titleSlug': 'find-pattern-in-infinite-stream-ii', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Rolling Hash', 'slug': 'rolling-hash'}, {'name': 'String Matching', 'slug': 'string-matching'}, {'name': 'Hash Function', 'slug': 'hash-function'}]}
{'title': 'Maximum Number of Operations With the Same Score I', 'titleSlug': 'maximum-number-of-operations-with-the-same-score-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Apply Operations to Make String Empty', 'titleSlug': 'apply-operations-to-make-string-empty', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Maximum Number of Operations With the Same Score II', 'titleSlug': 'maximum-number-of-operations-with-the-same-score-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Memoization', 'slug': 'memoization'}]}
{'title': 'Maximize Consecutive Elements in an Array After Modification', 'titleSlug': 'maximize-consecutive-elements-in-an-array-after-modification', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Count Prefix and Suffix Pairs I', 'titleSlug': 'count-prefix-and-suffix-pairs-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Trie', 'slug': 'trie'}, {'name': 'Rolling Hash', 'slug': 'rolling-hash'}, {'name': 'String Matching', 'slug': 'string-matching'}, {'name': 'Hash Function', 'slug': 'hash-function'}]}
{'title': 'Find the Length of the Longest Common Prefix', 'titleSlug': 'find-the-length-of-the-longest-common-prefix', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Trie', 'slug': 'trie'}]}
{'title': 'Most Frequent Prime', 'titleSlug': 'most-frequent-prime', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Counting', 'slug': 'counting'}, {'name': 'Enumeration', 'slug': 'enumeration'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Count Prefix and Suffix Pairs II', 'titleSlug': 'count-prefix-and-suffix-pairs-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Trie', 'slug': 'trie'}, {'name': 'Rolling Hash', 'slug': 'rolling-hash'}, {'name': 'String Matching', 'slug': 'string-matching'}, {'name': 'Hash Function', 'slug': 'hash-function'}]}
{'title': 'Split the Array', 'titleSlug': 'split-the-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Find the Largest Area of Square Inside Two Rectangles', 'titleSlug': 'find-the-largest-area-of-square-inside-two-rectangles', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Geometry', 'slug': 'geometry'}]}
{'title': 'Earliest Second to Mark Indices I', 'titleSlug': 'earliest-second-to-mark-indices-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Earliest Second to Mark Indices II', 'titleSlug': 'earliest-second-to-mark-indices-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Pizza Toppings Cost Analysis', 'titleSlug': 'pizza-toppings-cost-analysis', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Find Candidates for Data Scientist Position', 'titleSlug': 'find-candidates-for-data-scientist-position', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Maximize Items', 'titleSlug': 'maximize-items', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Classifying Triangles by Lengths', 'titleSlug': 'classifying-triangles-by-lengths', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Binary Tree Nodes', 'titleSlug': 'binary-tree-nodes', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Top Percentile Fraud', 'titleSlug': 'top-percentile-fraud', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Snaps Analysis', 'titleSlug': 'snaps-analysis', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Employees Project Allocation', 'titleSlug': 'employees-project-allocation', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Friends With No Mutual Friends', 'titleSlug': 'friends-with-no-mutual-friends', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Find All Unique Email Domains', 'titleSlug': 'find-all-unique-email-domains', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'User Activities within Time Bounds', 'titleSlug': 'user-activities-within-time-bounds', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Calculate Trapping Rain Water', 'titleSlug': 'calculate-trapping-rain-water', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Winner of the Linked List Game', 'titleSlug': 'winner-of-the-linked-list-game', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Linked List', 'slug': 'linked-list'}]}
{'title': 'Linked List Frequency', 'titleSlug': 'linked-list-frequency', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Guess the Number Using Bitwise Questions I', 'titleSlug': 'guess-the-number-using-bitwise-questions-i', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Interactive', 'slug': 'interactive'}]}
{'title': 'Minimum Operations to Exceed Threshold Value I', 'titleSlug': 'minimum-operations-to-exceed-threshold-value-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Minimum Operations to Exceed Threshold Value II', 'titleSlug': 'minimum-operations-to-exceed-threshold-value-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Count Pairs of Connectable Servers in a Weighted Tree Network', 'titleSlug': 'count-pairs-of-connectable-servers-in-a-weighted-tree-network', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}]}
{'title': 'Find the Maximum Sum of Node Values', 'titleSlug': 'find-the-maximum-sum-of-node-values', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Distribute Elements Into Two Arrays I', 'titleSlug': 'distribute-elements-into-two-arrays-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Count Submatrices with Top-Left Element and Sum Less Than k', 'titleSlug': 'count-submatrices-with-top-left-element-and-sum-less-than-k', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Minimum Operations to Write the Letter Y on a Grid', 'titleSlug': 'minimum-operations-to-write-the-letter-y-on-a-grid', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Distribute Elements Into Two Arrays II', 'titleSlug': 'distribute-elements-into-two-arrays-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Maximum Increasing Triplet Value', 'titleSlug': 'maximum-increasing-triplet-value', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Apple Redistribution into Boxes', 'titleSlug': 'apple-redistribution-into-boxes', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Maximize Happiness of Selected Children', 'titleSlug': 'maximize-happiness-of-selected-children', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Shortest Uncommon Substring in an Array', 'titleSlug': 'shortest-uncommon-substring-in-an-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Trie', 'slug': 'trie'}]}
{'title': 'Maximum Strength of K Disjoint Subarrays', 'titleSlug': 'maximum-strength-of-k-disjoint-subarrays', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Match Alphanumerical Pattern in Matrix I', 'titleSlug': 'match-alphanumerical-pattern-in-matrix-i', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Find the Sum of Encrypted Integers', 'titleSlug': 'find-the-sum-of-encrypted-integers', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}]}
{'title': 'Mark Elements on Array by Performing Queries', 'titleSlug': 'mark-elements-on-array-by-performing-queries', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Replace Question Marks in String to Minimize Its Value', 'titleSlug': 'replace-question-marks-in-string-to-minimize-its-value', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Find the Sum of the Power of All Subsequences', 'titleSlug': 'find-the-sum-of-the-power-of-all-subsequences', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Existence of a Substring in a String and Its Reverse', 'titleSlug': 'existence-of-a-substring-in-a-string-and-its-reverse', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Count Substrings Starting and Ending with Given Character', 'titleSlug': 'count-substrings-starting-and-ending-with-given-character', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Minimum Deletions to Make String K-Special', 'titleSlug': 'minimum-deletions-to-make-string-k-special', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Minimum Moves to Pick K Ones', 'titleSlug': 'minimum-moves-to-pick-k-ones', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Find Trending Hashtags', 'titleSlug': 'find-trending-hashtags', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Make String Anti-palindrome', 'titleSlug': 'make-string-anti-palindrome', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Counting Sort', 'slug': 'counting-sort'}]}
{'title': 'Find Bursty Behavior', 'titleSlug': 'find-bursty-behavior', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Maximum Length Substring With Two Occurrences', 'titleSlug': 'maximum-length-substring-with-two-occurrences', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Apply Operations to Make Sum of Array Greater Than or Equal to k', 'titleSlug': 'apply-operations-to-make-sum-of-array-greater-than-or-equal-to-k', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Most Frequent IDs', 'titleSlug': 'most-frequent-ids', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Longest Common Suffix Queries', 'titleSlug': 'longest-common-suffix-queries', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Trie', 'slug': 'trie'}]}
{'title': 'Guess the Number Using Bitwise Questions II', 'titleSlug': 'guess-the-number-using-bitwise-questions-ii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Interactive', 'slug': 'interactive'}]}
{'title': 'Shortest Subarray With OR at Least K I', 'titleSlug': 'shortest-subarray-with-or-at-least-k-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Minimum Levels to Gain More Points', 'titleSlug': 'minimum-levels-to-gain-more-points', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Shortest Subarray With OR at Least K II', 'titleSlug': 'shortest-subarray-with-or-at-least-k-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Find the Sum of Subsequence Powers', 'titleSlug': 'find-the-sum-of-subsequence-powers', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Harshad Number', 'titleSlug': 'harshad-number', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Water Bottles II', 'titleSlug': 'water-bottles-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Count Alternating Subarrays', 'titleSlug': 'count-alternating-subarrays', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}]}
{'title': 'Minimize Manhattan Distances', 'titleSlug': 'minimize-manhattan-distances', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Geometry', 'slug': 'geometry'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Find Trending Hashtags II ', 'titleSlug': 'find-trending-hashtags-ii', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Find Longest Self-Contained Substring', 'titleSlug': 'find-longest-self-contained-substring', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Longest Strictly Increasing or Strictly Decreasing Subarray', 'titleSlug': 'longest-strictly-increasing-or-strictly-decreasing-subarray', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Lexicographically Smallest String After Operations With Constraint', 'titleSlug': 'lexicographically-smallest-string-after-operations-with-constraint', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Minimum Operations to Make Median of Array Equal to K', 'titleSlug': 'minimum-operations-to-make-median-of-array-equal-to-k', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Minimum Cost Walk in Weighted Graph', 'titleSlug': 'minimum-cost-walk-in-weighted-graph', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Find the Index of Permutation', 'titleSlug': 'find-the-index-of-permutation', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Merge Sort', 'slug': 'merge-sort'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Score of a String', 'titleSlug': 'score-of-a-string', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Minimum Rectangles to Cover Points', 'titleSlug': 'minimum-rectangles-to-cover-points', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Minimum Time to Visit Disappearing Nodes', 'titleSlug': 'minimum-time-to-visit-disappearing-nodes', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Shortest Path', 'slug': 'shortest-path'}]}
{'title': 'Find the Number of Subarrays Where Boundary Elements Are Maximum', 'titleSlug': 'find-the-number-of-subarrays-where-boundary-elements-are-maximum', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Latest Time You Can Obtain After Replacing Characters', 'titleSlug': 'latest-time-you-can-obtain-after-replacing-characters', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Maximum Prime Difference', 'titleSlug': 'maximum-prime-difference', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Kth Smallest Amount With Single Denomination Combination', 'titleSlug': 'kth-smallest-amount-with-single-denomination-combination', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Minimum Sum of Values by Dividing Array', 'titleSlug': 'minimum-sum-of-values-by-dividing-array', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Queue', 'slug': 'queue'}]}
{'title': 'Friday Purchase III ', 'titleSlug': 'friday-purchase-iii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Maximum Number of Potholes That Can Be Fixed', 'titleSlug': 'maximum-number-of-potholes-that-can-be-fixed', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Count the Number of Special Characters I', 'titleSlug': 'count-the-number-of-special-characters-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Count the Number of Special Characters II', 'titleSlug': 'count-the-number-of-special-characters-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Minimum Number of Operations to Satisfy Conditions', 'titleSlug': 'minimum-number-of-operations-to-satisfy-conditions', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Find Edges in Shortest Paths', 'titleSlug': 'find-edges-in-shortest-paths', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Shortest Path', 'slug': 'shortest-path'}]}
{'title': 'Find Longest Calls', 'titleSlug': 'find-longest-calls', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Maximum Number That Makes Result of Bitwise AND Zero', 'titleSlug': 'maximum-number-that-makes-result-of-bitwise-and-zero', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Server Utilization Time', 'titleSlug': 'server-utilization-time', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Make a Square with the Same Color', 'titleSlug': 'make-a-square-with-the-same-color', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Right Triangles', 'titleSlug': 'right-triangles', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Find All Possible Stable Binary Arrays I', 'titleSlug': 'find-all-possible-stable-binary-arrays-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Find All Possible Stable Binary Arrays II', 'titleSlug': 'find-all-possible-stable-binary-arrays-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Find the Integer Added to Array I', 'titleSlug': 'find-the-integer-added-to-array-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Find the Integer Added to Array II', 'titleSlug': 'find-the-integer-added-to-array-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Minimum Array End', 'titleSlug': 'minimum-array-end', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Find the Median of the Uniqueness Array', 'titleSlug': 'find-the-median-of-the-uniqueness-array', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Equalize Strings by Adding or Removing Characters at Ends', 'titleSlug': 'equalize-strings-by-adding-or-removing-characters-at-ends', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Hash Function', 'slug': 'hash-function'}]}
{'title': 'Valid Word', 'titleSlug': 'valid-word', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Minimum Number of Operations to Make Word K-Periodic', 'titleSlug': 'minimum-number-of-operations-to-make-word-k-periodic', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Minimum Length of Anagram Concatenation', 'titleSlug': 'minimum-length-of-anagram-concatenation', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Minimum Cost to Equalize Array', 'titleSlug': 'minimum-cost-to-equalize-array', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Consecutive Available Seats II', 'titleSlug': 'consecutive-available-seats-ii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Maximum Hamming Distances', 'titleSlug': 'maximum-hamming-distances', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}]}
{'title': 'Check if Grid Satisfies Conditions', 'titleSlug': 'check-if-grid-satisfies-conditions', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Maximum Points Inside the Square', 'titleSlug': 'maximum-points-inside-the-square', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Minimum Substring Partition of Equal Character Frequency', 'titleSlug': 'minimum-substring-partition-of-equal-character-frequency', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Find Products of Elements of Big Array', 'titleSlug': 'find-products-of-elements-of-big-array', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Permutation Difference between Two Strings', 'titleSlug': 'permutation-difference-between-two-strings', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Taking Maximum Energy From the Mystic Dungeon', 'titleSlug': 'taking-maximum-energy-from-the-mystic-dungeon', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Maximum Difference Score in a Grid', 'titleSlug': 'maximum-difference-score-in-a-grid', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Find the Minimum Cost Array Permutation', 'titleSlug': 'find-the-minimum-cost-array-permutation', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Invalid Tweets II', 'titleSlug': 'invalid-tweets-ii', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Special Array I', 'titleSlug': 'special-array-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Special Array II', 'titleSlug': 'special-array-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Sum of Digit Differences of All Pairs', 'titleSlug': 'sum-of-digit-differences-of-all-pairs', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Find Number of Ways to Reach the K-th Stair', 'titleSlug': 'find-number-of-ways-to-reach-the-k-th-stair', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Memoization', 'slug': 'memoization'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}]}
{'title': 'Maximum Number of Upgradable Servers', 'titleSlug': 'maximum-number-of-upgradable-servers', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Employee Task Duration and Concurrent Tasks', 'titleSlug': 'employee-task-duration-and-concurrent-tasks', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Find the Level of Tree with Minimum Sum', 'titleSlug': 'find-the-level-of-tree-with-minimum-sum', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Find the XOR of Numbers Which Appear Twice', 'titleSlug': 'find-the-xor-of-numbers-which-appear-twice', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Find Occurrences of an Element in an Array', 'titleSlug': 'find-occurrences-of-an-element-in-an-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}]}
{'title': 'Find the Number of Distinct Colors Among the Balls', 'titleSlug': 'find-the-number-of-distinct-colors-among-the-balls', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Block Placement Queries', 'titleSlug': 'block-placement-queries', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}]}
{'title': 'Find the Number of Good Pairs I', 'titleSlug': 'find-the-number-of-good-pairs-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}]}
{'title': 'String Compression III', 'titleSlug': 'string-compression-iii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Find the Number of Good Pairs II', 'titleSlug': 'find-the-number-of-good-pairs-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}]}
{'title': 'Maximum Sum of Subsequence With Non-adjacent Elements', 'titleSlug': 'maximum-sum-of-subsequence-with-non-adjacent-elements', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}]}
{'title': 'Calculate Parking Fees and Duration', 'titleSlug': 'calculate-parking-fees-and-duration', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Better Compression of String', 'titleSlug': 'better-compression-of-string', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Minimum Number of Chairs in a Waiting Room', 'titleSlug': 'minimum-number-of-chairs-in-a-waiting-room', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Count Days Without Meetings', 'titleSlug': 'count-days-without-meetings', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Lexicographically Minimum String After Removing Stars', 'titleSlug': 'lexicographically-minimum-string-after-removing-stars', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Find Subarray With Bitwise OR Closest to K', 'titleSlug': 'find-subarray-with-bitwise-or-closest-to-k', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}]}
{'title': 'Second Day Verification', 'titleSlug': 'second-day-verification', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Bitwise OR of Adjacent Elements', 'titleSlug': 'bitwise-or-of-adjacent-elements', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Clear Digits', 'titleSlug': 'clear-digits', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Find The First Player to win K Games in a Row', 'titleSlug': 'find-the-first-player-to-win-k-games-in-a-row', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Find the Maximum Length of a Good Subsequence I', 'titleSlug': 'find-the-maximum-length-of-a-good-subsequence-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Find the Maximum Length of a Good Subsequence II', 'titleSlug': 'find-the-maximum-length-of-a-good-subsequence-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Find the Child Who Has the Ball After K Seconds', 'titleSlug': 'find-the-child-who-has-the-ball-after-k-seconds', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Find the N-th Value After K Seconds', 'titleSlug': 'find-the-n-th-value-after-k-seconds', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Simulation', 'slug': 'simulation'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Maximum Total Reward Using Operations I', 'titleSlug': 'maximum-total-reward-using-operations-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Maximum Total Reward Using Operations II', 'titleSlug': 'maximum-total-reward-using-operations-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Find Top Scoring Students', 'titleSlug': 'find-top-scoring-students', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'The Number of Ways to Make the Sum', 'titleSlug': 'the-number-of-ways-to-make-the-sum', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Count Pairs That Form a Complete Day I', 'titleSlug': 'count-pairs-that-form-a-complete-day-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Count Pairs That Form a Complete Day II', 'titleSlug': 'count-pairs-that-form-a-complete-day-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Maximum Total Damage With Spell Casting', 'titleSlug': 'maximum-total-damage-with-spell-casting', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Peaks in Array', 'titleSlug': 'peaks-in-array', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}]}
{'title': 'Find Top Scoring Students II', 'titleSlug': 'find-top-scoring-students-ii', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Minimum Moves to Get a Peaceful Board', 'titleSlug': 'minimum-moves-to-get-a-peaceful-board', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Counting Sort', 'slug': 'counting-sort'}]}
{'title': 'Find Minimum Operations to Make All Elements Divisible by Three', 'titleSlug': 'find-minimum-operations-to-make-all-elements-divisible-by-three', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}]}
{'title': 'Minimum Operations to Make Binary Array Elements Equal to One I', 'titleSlug': 'minimum-operations-to-make-binary-array-elements-equal-to-one-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Minimum Operations to Make Binary Array Elements Equal to One II', 'titleSlug': 'minimum-operations-to-make-binary-array-elements-equal-to-one-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Count the Number of Inversions', 'titleSlug': 'count-the-number-of-inversions', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Minimum Average of Smallest and Largest Elements', 'titleSlug': 'minimum-average-of-smallest-and-largest-elements', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Find the Minimum Area to Cover All Ones I', 'titleSlug': 'find-the-minimum-area-to-cover-all-ones-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Maximize Total Cost of Alternating Subarrays', 'titleSlug': 'maximize-total-cost-of-alternating-subarrays', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Find the Minimum Area to Cover All Ones II', 'titleSlug': 'find-the-minimum-area-to-cover-all-ones-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Find Cities in Each State', 'titleSlug': 'find-cities-in-each-state', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Count Triplets with Even XOR Set Bits I', 'titleSlug': 'count-triplets-with-even-xor-set-bits-i', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Maximum Height of a Triangle', 'titleSlug': 'maximum-height-of-a-triangle', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Find the Maximum Length of Valid Subsequence I', 'titleSlug': 'find-the-maximum-length-of-valid-subsequence-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Find the Maximum Length of Valid Subsequence II', 'titleSlug': 'find-the-maximum-length-of-valid-subsequence-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Find Minimum Diameter After Merging Two Trees', 'titleSlug': 'find-minimum-diameter-after-merging-two-trees', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Bitwise User Permissions Analysis', 'titleSlug': 'bitwise-user-permissions-analysis', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Maximum Array Hopping Score I', 'titleSlug': 'maximum-array-hopping-score-i', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Alternating Groups I', 'titleSlug': 'alternating-groups-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Maximum Points After Enemy Battles', 'titleSlug': 'maximum-points-after-enemy-battles', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Alternating Groups II', 'titleSlug': 'alternating-groups-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Number of Subarrays With AND Value of K', 'titleSlug': 'number-of-subarrays-with-and-value-of-k', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}]}
{'title': 'Find the Encrypted String', 'titleSlug': 'find-the-encrypted-string', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Generate Binary Strings Without Adjacent Zeros', 'titleSlug': 'generate-binary-strings-without-adjacent-zeros', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Count Submatrices With Equal Frequency of X and Y', 'titleSlug': 'count-submatrices-with-equal-frequency-of-x-and-y', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Construct String with Minimum Cost', 'titleSlug': 'construct-string-with-minimum-cost', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Suffix Array', 'slug': 'suffix-array'}]}
{'title': 'Year on Year Growth Rate', 'titleSlug': 'year-on-year-growth-rate', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Count Triplets with Even XOR Set Bits II', 'titleSlug': 'count-triplets-with-even-xor-set-bits-ii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Lexicographically Smallest String After a Swap', 'titleSlug': 'lexicographically-smallest-string-after-a-swap', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Delete Nodes From Linked List Present in Array', 'titleSlug': 'delete-nodes-from-linked-list-present-in-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Linked List', 'slug': 'linked-list'}]}
{'title': 'Minimum Cost for Cutting Cake I', 'titleSlug': 'minimum-cost-for-cutting-cake-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Minimum Cost for Cutting Cake II', 'titleSlug': 'minimum-cost-for-cutting-cake-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Odd and Even Transactions', 'titleSlug': 'odd-and-even-transactions', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Maximum Array Hopping Score II', 'titleSlug': 'maximum-array-hopping-score-ii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Find the Winning Player in Coin Game', 'titleSlug': 'find-the-winning-player-in-coin-game', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Simulation', 'slug': 'simulation'}, {'name': 'Game Theory', 'slug': 'game-theory'}]}
{'title': 'Minimum Length of String After Operations', 'titleSlug': 'minimum-length-of-string-after-operations', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Minimum Array Changes to Make Differences Equal', 'titleSlug': 'minimum-array-changes-to-make-differences-equal', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Maximum Score From Grid Operations', 'titleSlug': 'maximum-score-from-grid-operations', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Number of Bit Changes to Make Two Integers Equal', 'titleSlug': 'number-of-bit-changes-to-make-two-integers-equal', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Vowels Game in a String', 'titleSlug': 'vowels-game-in-a-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Brainteaser', 'slug': 'brainteaser'}, {'name': 'Game Theory', 'slug': 'game-theory'}]}
{'title': 'Maximum Number of Operations to Move Ones to the End', 'titleSlug': 'maximum-number-of-operations-to-move-ones-to-the-end', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Minimum Operations to Make Array Equal to Target', 'titleSlug': 'minimum-operations-to-make-array-equal-to-target', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Customer Purchasing Behavior Analysis', 'titleSlug': 'customer-purchasing-behavior-analysis', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Minimum Number of Increasing Subsequence to Be Removed', 'titleSlug': 'minimum-number-of-increasing-subsequence-to-be-removed', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Find if Digit Game Can Be Won', 'titleSlug': 'find-if-digit-game-can-be-won', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}]}
{'title': 'Find the Count of Numbers Which Are Not Special', 'titleSlug': 'find-the-count-of-numbers-which-are-not-special', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Count the Number of Substrings With Dominant Ones', 'titleSlug': 'count-the-number-of-substrings-with-dominant-ones', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Check if the Rectangle Corner Is Reachable', 'titleSlug': 'check-if-the-rectangle-corner-is-reachable', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Geometry', 'slug': 'geometry'}]}
{'title': 'CEO Subordinate Hierarchy', 'titleSlug': 'ceo-subordinate-hierarchy', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Alt and Tab Simulation', 'titleSlug': 'alt-and-tab-simulation', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Find the Number of Winning Players', 'titleSlug': 'find-the-number-of-winning-players', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Minimum Number of Flips to Make Binary Grid Palindromic I', 'titleSlug': 'minimum-number-of-flips-to-make-binary-grid-palindromic-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Minimum Number of Flips to Make Binary Grid Palindromic II', 'titleSlug': 'minimum-number-of-flips-to-make-binary-grid-palindromic-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Time Taken to Mark All Nodes', 'titleSlug': 'time-taken-to-mark-all-nodes', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Design Neighbor Sum Service', 'titleSlug': 'design-neighbor-sum-service', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Shortest Distance After Road Addition Queries I', 'titleSlug': 'shortest-distance-after-road-addition-queries-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Shortest Distance After Road Addition Queries II', 'titleSlug': 'shortest-distance-after-road-addition-queries-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Alternating Groups III', 'titleSlug': 'alternating-groups-iii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}]}
{'title': 'Premier League Table Ranking', 'titleSlug': 'premier-league-table-ranking', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Number of Subsequences with Odd Sum', 'titleSlug': 'number-of-subsequences-with-odd-sum', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}]}
{'title': 'Snake in Matrix', 'titleSlug': 'snake-in-matrix', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Count the Number of Good Nodes', 'titleSlug': 'count-the-number-of-good-nodes', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}]}
{'title': 'Find the Count of Monotonic Pairs I', 'titleSlug': 'find-the-count-of-monotonic-pairs-i', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Find the Count of Monotonic Pairs II', 'titleSlug': 'find-the-count-of-monotonic-pairs-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Premier League Table Ranking II', 'titleSlug': 'premier-league-table-ranking-ii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Construct String with Minimum Cost (Easy)', 'titleSlug': 'construct-string-with-minimum-cost-easy', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': []}
{'title': 'Find the Power of K-Size Subarrays I', 'titleSlug': 'find-the-power-of-k-size-subarrays-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Find the Power of K-Size Subarrays II', 'titleSlug': 'find-the-power-of-k-size-subarrays-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Maximum Value Sum by Placing Three Rooks I', 'titleSlug': 'maximum-value-sum-by-placing-three-rooks-i', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Maximum Value Sum by Placing Three Rooks II', 'titleSlug': 'maximum-value-sum-by-placing-three-rooks-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Count Substrings That Satisfy K-Constraint I', 'titleSlug': 'count-substrings-that-satisfy-k-constraint-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Maximum Energy Boost From Two Drinks', 'titleSlug': 'maximum-energy-boost-from-two-drinks', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Find the Largest Palindrome Divisible by K', 'titleSlug': 'find-the-largest-palindrome-divisible-by-k', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Count Substrings That Satisfy K-Constraint II', 'titleSlug': 'count-substrings-that-satisfy-k-constraint-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Find Overlapping Shifts', 'titleSlug': 'find-overlapping-shifts', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Convert Doubly Linked List to Array I', 'titleSlug': 'convert-doubly-linked-list-to-array-i', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Doubly-Linked List', 'slug': 'doubly-linked-list'}]}
{'title': 'Final Array State After K Multiplication Operations I', 'titleSlug': 'final-array-state-after-k-multiplication-operations-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Count Almost Equal Pairs I', 'titleSlug': 'count-almost-equal-pairs-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Counting', 'slug': 'counting'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Final Array State After K Multiplication Operations II', 'titleSlug': 'final-array-state-after-k-multiplication-operations-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Count Almost Equal Pairs II', 'titleSlug': 'count-almost-equal-pairs-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Counting', 'slug': 'counting'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Find Overlapping Shifts II', 'titleSlug': 'find-overlapping-shifts-ii', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Constructing Two Increasing Arrays', 'titleSlug': 'constructing-two-increasing-arrays', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Find the Key of the Numbers', 'titleSlug': 'find-the-key-of-the-numbers', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Hash Divided String', 'titleSlug': 'hash-divided-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Find the Count of Good Integers', 'titleSlug': 'find-the-count-of-good-integers', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Minimum Amount of Damage Dealt to Bob', 'titleSlug': 'minimum-amount-of-damage-dealt-to-bob', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Check if Two Chessboard Squares Have the Same Color', 'titleSlug': 'check-if-two-chessboard-squares-have-the-same-color', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'K-th Nearest Obstacle Queries', 'titleSlug': 'k-th-nearest-obstacle-queries', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Select Cells in Grid With Maximum Score', 'titleSlug': 'select-cells-in-grid-with-maximum-score', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Maximum XOR Score Subarray Queries', 'titleSlug': 'maximum-xor-score-subarray-queries', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Find Candidates for Data Scientist Position II', 'titleSlug': 'find-candidates-for-data-scientist-position-ii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Maximum Total Area Occupied by Pistons', 'titleSlug': 'maximum-total-area-occupied-by-pistons', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Simulation', 'slug': 'simulation'}, {'name': 'Counting', 'slug': 'counting'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Convert Date to Binary', 'titleSlug': 'convert-date-to-binary', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Maximize Score of Numbers in Ranges', 'titleSlug': 'maximize-score-of-numbers-in-ranges', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Reach End of Array With Max Score', 'titleSlug': 'reach-end-of-array-with-max-score', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Maximum Number of Moves to Kill All Pawns', 'titleSlug': 'maximum-number-of-moves-to-kill-all-pawns', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Game Theory', 'slug': 'game-theory'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Sum of Consecutive Subarrays', 'titleSlug': 'sum-of-consecutive-subarrays', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Find Indices of Stable Mountains', 'titleSlug': 'find-indices-of-stable-mountains', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Find a Safe Walk Through a Grid', 'titleSlug': 'find-a-safe-walk-through-a-grid', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Shortest Path', 'slug': 'shortest-path'}]}
{'title': 'Find the Maximum Sequence Value of Array', 'titleSlug': 'find-the-maximum-sequence-value-of-array', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Length of the Longest Increasing Path', 'titleSlug': 'length-of-the-longest-increasing-path', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'The Two Sneaky Numbers of Digitville', 'titleSlug': 'the-two-sneaky-numbers-of-digitville', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}]}
{'title': 'Maximum Multiplication Score', 'titleSlug': 'maximum-multiplication-score', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Minimum Number of Valid Strings to Form Target I', 'titleSlug': 'minimum-number-of-valid-strings-to-form-target-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Trie', 'slug': 'trie'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Rolling Hash', 'slug': 'rolling-hash'}, {'name': 'String Matching', 'slug': 'string-matching'}, {'name': 'Hash Function', 'slug': 'hash-function'}]}
{'title': 'Minimum Number of Valid Strings to Form Target II', 'titleSlug': 'minimum-number-of-valid-strings-to-form-target-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Rolling Hash', 'slug': 'rolling-hash'}, {'name': 'String Matching', 'slug': 'string-matching'}, {'name': 'Hash Function', 'slug': 'hash-function'}]}
{'title': 'Calculate Product Final Price', 'titleSlug': 'calculate-product-final-price', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Convert Doubly Linked List to Array II', 'titleSlug': 'convert-doubly-linked-list-to-array-ii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Doubly-Linked List', 'slug': 'doubly-linked-list'}]}
{'title': 'Report Spam Message', 'titleSlug': 'report-spam-message', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Minimum Number of Seconds to Make Mountain Height Zero', 'titleSlug': 'minimum-number-of-seconds-to-make-mountain-height-zero', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Count Substrings That Can Be Rearranged to Contain a String I', 'titleSlug': 'count-substrings-that-can-be-rearranged-to-contain-a-string-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Count Substrings That Can Be Rearranged to Contain a String II', 'titleSlug': 'count-substrings-that-can-be-rearranged-to-contain-a-string-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Sum of Consecutive Subsequences', 'titleSlug': 'sum-of-consecutive-subsequences', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Minimum Element After Replacement With Digit Sum', 'titleSlug': 'minimum-element-after-replacement-with-digit-sum', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}]}
{'title': 'Maximize the Total Height of Unique Towers', 'titleSlug': 'maximize-the-total-height-of-unique-towers', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Find the Lexicographically Smallest Valid Sequence', 'titleSlug': 'find-the-lexicographically-smallest-valid-sequence', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Find the Occurrence of First Almost Equal Substring', 'titleSlug': 'find-the-occurrence-of-first-almost-equal-substring', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'String Matching', 'slug': 'string-matching'}]}
{'title': 'Find the K-th Character in String Game I', 'titleSlug': 'find-the-k-th-character-in-string-game-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Recursion', 'slug': 'recursion'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Count of Substrings Containing Every Vowel and K Consonants I', 'titleSlug': 'count-of-substrings-containing-every-vowel-and-k-consonants-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Count of Substrings Containing Every Vowel and K Consonants II', 'titleSlug': 'count-of-substrings-containing-every-vowel-and-k-consonants-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Find the K-th Character in String Game II', 'titleSlug': 'find-the-k-th-character-in-string-game-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Recursion', 'slug': 'recursion'}]}
{'title': 'Find Top Performing Driver', 'titleSlug': 'find-top-performing-driver', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Maximum Possible Number by Binary Concatenation', 'titleSlug': 'maximum-possible-number-by-binary-concatenation', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Remove Methods From Project', 'titleSlug': 'remove-methods-from-project', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Construct 2D Grid Matching Graph Layout', 'titleSlug': 'construct-2d-grid-matching-graph-layout', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Sorted GCD Pair Queries', 'titleSlug': 'sorted-gcd-pair-queries', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}, {'name': 'Counting', 'slug': 'counting'}, {'name': 'Number Theory', 'slug': 'number-theory'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Find the Last Marked Nodes in Tree', 'titleSlug': 'find-the-last-marked-nodes-in-tree', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}]}
{'title': 'Construct the Minimum Bitwise Array I', 'titleSlug': 'construct-the-minimum-bitwise-array-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Construct the Minimum Bitwise Array II', 'titleSlug': 'construct-the-minimum-bitwise-array-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Find Maximum Removals From Source String', 'titleSlug': 'find-maximum-removals-from-source-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Find the Number of Possible Ways for an Event', 'titleSlug': 'find-the-number-of-possible-ways-for-an-event', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}]}
{'title': 'Find X-Sum of All K-Long Subarrays I', 'titleSlug': 'find-x-sum-of-all-k-long-subarrays-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'K-th Largest Perfect Subtree Size in Binary Tree', 'titleSlug': 'k-th-largest-perfect-subtree-size-in-binary-tree', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Count The Number of Winning Sequences', 'titleSlug': 'count-the-number-of-winning-sequences', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Find X-Sum of All K-Long Subarrays II', 'titleSlug': 'find-x-sum-of-all-k-long-subarrays-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Premier League Table Ranking III', 'titleSlug': 'premier-league-table-ranking-iii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Minimize Connected Groups by Inserting Interval', 'titleSlug': 'minimize-connected-groups-by-inserting-interval', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Find the Sequence of Strings Appeared on the Screen', 'titleSlug': 'find-the-sequence-of-strings-appeared-on-the-screen', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Count Substrings With K-Frequency Characters I', 'titleSlug': 'count-substrings-with-k-frequency-characters-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Minimum Division Operations to Make Array Non Decreasing', 'titleSlug': 'minimum-division-operations-to-make-array-non-decreasing', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Check if DFS Strings Are Palindromes', 'titleSlug': 'check-if-dfs-strings-are-palindromes', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Hash Function', 'slug': 'hash-function'}]}
{'title': 'Find Cities in Each State II', 'titleSlug': 'find-cities-in-each-state-ii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Count Substrings With K-Frequency Characters II', 'titleSlug': 'count-substrings-with-k-frequency-characters-ii', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Find the Original Typed String I', 'titleSlug': 'find-the-original-typed-string-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Find Subtree Sizes After Changes', 'titleSlug': 'find-subtree-sizes-after-changes', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}]}
{'title': 'Maximum Points Tourist Can Earn', 'titleSlug': 'maximum-points-tourist-can-earn', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Find the Original Typed String II', 'titleSlug': 'find-the-original-typed-string-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Find the Maximum Factor Score of Array', 'titleSlug': 'find-the-maximum-factor-score-of-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Total Characters in String After Transformations I', 'titleSlug': 'total-characters-in-string-after-transformations-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Find the Number of Subsequences With Equal GCD', 'titleSlug': 'find-the-number-of-subsequences-with-equal-gcd', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Total Characters in String After Transformations II', 'titleSlug': 'total-characters-in-string-after-transformations-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Second Highest Salary II', 'titleSlug': 'second-highest-salary-ii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Find the Number of K-Even Arrays', 'titleSlug': 'find-the-number-of-k-even-arrays', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Check Balanced String', 'titleSlug': 'check-balanced-string', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Find Minimum Time to Reach Last Room I', 'titleSlug': 'find-minimum-time-to-reach-last-room-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Shortest Path', 'slug': 'shortest-path'}]}
{'title': 'Find Minimum Time to Reach Last Room II', 'titleSlug': 'find-minimum-time-to-reach-last-room-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Shortest Path', 'slug': 'shortest-path'}]}
{'title': 'Count Number of Balanced Permutations', 'titleSlug': 'count-number-of-balanced-permutations', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}]}
{'title': 'Maximum Sized Array', 'titleSlug': 'maximum-sized-array', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Smallest Divisible Digit Product I', 'titleSlug': 'smallest-divisible-digit-product-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Maximum Frequency of an Element After Performing Operations I', 'titleSlug': 'maximum-frequency-of-an-element-after-performing-operations-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Maximum Frequency of an Element After Performing Operations II', 'titleSlug': 'maximum-frequency-of-an-element-after-performing-operations-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Smallest Divisible Digit Product II', 'titleSlug': 'smallest-divisible-digit-product-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Adjacent Increasing Subarrays Detection I', 'titleSlug': 'adjacent-increasing-subarrays-detection-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Adjacent Increasing Subarrays Detection II', 'titleSlug': 'adjacent-increasing-subarrays-detection-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Sum of Good Subsequences', 'titleSlug': 'sum-of-good-subsequences', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Count K-Reducible Numbers Less Than N', 'titleSlug': 'count-k-reducible-numbers-less-than-n', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}]}
{'title': 'Minimum Total Operations', 'titleSlug': 'minimum-total-operations', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Make Array Elements Equal to Zero', 'titleSlug': 'make-array-elements-equal-to-zero', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Simulation', 'slug': 'simulation'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Zero Array Transformation I', 'titleSlug': 'zero-array-transformation-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Zero Array Transformation II', 'titleSlug': 'zero-array-transformation-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Minimize the Maximum Adjacent Element Difference', 'titleSlug': 'minimize-the-maximum-adjacent-element-difference', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Books with NULL Ratings', 'titleSlug': 'books-with-null-ratings', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Find Sorted Submatrices With Maximum Element at Most K', 'titleSlug': 'find-sorted-submatrices-with-maximum-element-at-most-k', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Stone Removal Game', 'titleSlug': 'stone-removal-game', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Shift Distance Between Two Strings', 'titleSlug': 'shift-distance-between-two-strings', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Zero Array Transformation III', 'titleSlug': 'zero-array-transformation-iii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Find the Maximum Number of Fruits Collected', 'titleSlug': 'find-the-maximum-number-of-fruits-collected', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Minimum Positive Sum Subarray ', 'titleSlug': 'minimum-positive-sum-subarray', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Rearrange K Substrings to Form Target String', 'titleSlug': 'rearrange-k-substrings-to-form-target-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Minimum Array Sum', 'titleSlug': 'minimum-array-sum', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Maximize Sum of Weights after Edge Removals', 'titleSlug': 'maximize-sum-of-weights-after-edge-removals', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}]}
{'title': 'First Letter Capitalization', 'titleSlug': 'first-letter-capitalization', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Design an Array Statistics Tracker ', 'titleSlug': 'design-an-array-statistics-tracker', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Data Stream', 'slug': 'data-stream'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Smallest Number With All Set Bits', 'titleSlug': 'smallest-number-with-all-set-bits', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Identify the Largest Outlier in an Array', 'titleSlug': 'identify-the-largest-outlier-in-an-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Counting', 'slug': 'counting'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Maximize the Number of Target Nodes After Connecting Trees I', 'titleSlug': 'maximize-the-number-of-target-nodes-after-connecting-trees-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}]}
{'title': 'Maximize the Number of Target Nodes After Connecting Trees II', 'titleSlug': 'maximize-the-number-of-target-nodes-after-connecting-trees-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}]}
{'title': 'First Letter Capitalization II', 'titleSlug': 'first-letter-capitalization-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Minimum Operations to Make Array Values Equal to K', 'titleSlug': 'minimum-operations-to-make-array-values-equal-to-k', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}]}
{'title': 'Minimum Time to Break Locks I', 'titleSlug': 'minimum-time-to-break-locks-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Backtracking', 'slug': 'backtracking'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Digit Operations to Make Two Integers Equal', 'titleSlug': 'digit-operations-to-make-two-integers-equal', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Number Theory', 'slug': 'number-theory'}, {'name': 'Shortest Path', 'slug': 'shortest-path'}]}
{'title': 'Count Connected Components in LCM Graph', 'titleSlug': 'count-connected-components-in-lcm-graph', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Transformed Array', 'titleSlug': 'transformed-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Maximum Area Rectangle With Point Constraints I', 'titleSlug': 'maximum-area-rectangle-with-point-constraints-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Geometry', 'slug': 'geometry'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Maximum Subarray Sum With Length Divisible by K', 'titleSlug': 'maximum-subarray-sum-with-length-divisible-by-k', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Maximum Area Rectangle With Point Constraints II', 'titleSlug': 'maximum-area-rectangle-with-point-constraints-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Geometry', 'slug': 'geometry'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Minimum Runes to Add to Cast Spell', 'titleSlug': 'minimum-runes-to-add-to-cast-spell', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Topological Sort', 'slug': 'topological-sort'}]}
{'title': 'Team Dominance by Pass Success', 'titleSlug': 'team-dominance-by-pass-success', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Minimum Time to Break Locks II', 'titleSlug': 'minimum-time-to-break-locks-ii', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Button with Longest Push Time', 'titleSlug': 'button-with-longest-push-time', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Maximize Amount After Two Days of Conversions', 'titleSlug': 'maximize-amount-after-two-days-of-conversions', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Count Beautiful Splits in an Array', 'titleSlug': 'count-beautiful-splits-in-an-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Minimum Operations to Make Character Frequencies Equal', 'titleSlug': 'minimum-operations-to-make-character-frequencies-equal', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Counting', 'slug': 'counting'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Longest Team Pass Streak', 'titleSlug': 'longest-team-pass-streak', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Design a 3D Binary Matrix with Efficient Layer Tracking', 'titleSlug': 'design-a-3d-binary-matrix-with-efficient-layer-tracking', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Count Subarrays of Length Three With a Condition', 'titleSlug': 'count-subarrays-of-length-three-with-a-condition', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Count Paths With the Given XOR Value', 'titleSlug': 'count-paths-with-the-given-xor-value', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Check if Grid can be Cut into Sections', 'titleSlug': 'check-if-grid-can-be-cut-into-sections', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Subsequences with a Unique Middle Mode I', 'titleSlug': 'subsequences-with-a-unique-middle-mode-i', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}]}
{'title': 'Minimum Number of Operations to Make Elements in Array Distinct', 'titleSlug': 'minimum-number-of-operations-to-make-elements-in-array-distinct', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}]}
{'title': 'Maximum Number of Distinct Elements After Operations', 'titleSlug': 'maximum-number-of-distinct-elements-after-operations', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Smallest Substring With Identical Characters I', 'titleSlug': 'smallest-substring-with-identical-characters-i', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Smallest Substring With Identical Characters II', 'titleSlug': 'smallest-substring-with-identical-characters-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Maximum Number of Matching Indices After Right Shifts', 'titleSlug': 'maximum-number-of-matching-indices-after-right-shifts', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Find Circular Gift Exchange Chains', 'titleSlug': 'find-circular-gift-exchange-chains', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Minimum Operations to Make Columns Strictly Increasing', 'titleSlug': 'minimum-operations-to-make-columns-strictly-increasing', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Find the Lexicographically Largest String From the Box I', 'titleSlug': 'find-the-lexicographically-largest-string-from-the-box-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Count Special Subsequences', 'titleSlug': 'count-special-subsequences', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Count the Number of Arrays with K Matching Adjacent Elements', 'titleSlug': 'count-the-number-of-arrays-with-k-matching-adjacent-elements', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}]}
{'title': 'Find the Lexicographically Largest String From the Box II', 'titleSlug': 'find-the-lexicographically-largest-string-from-the-box-ii', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Substring Matching Pattern', 'titleSlug': 'substring-matching-pattern', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'String Matching', 'slug': 'string-matching'}]}
{'title': 'Design Task Manager', 'titleSlug': 'design-task-manager', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Longest Subsequence With Decreasing Adjacent Difference', 'titleSlug': 'longest-subsequence-with-decreasing-adjacent-difference', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Maximize Subarray Sum After Removing All Occurrences of One Element', 'titleSlug': 'maximize-subarray-sum-after-removing-all-occurrences-of-one-element', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}]}
{'title': 'Maximum Subarray With Equal Products', 'titleSlug': 'maximum-subarray-with-equal-products', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Enumeration', 'slug': 'enumeration'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Find Mirror Score of a String', 'titleSlug': 'find-mirror-score-of-a-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Maximum Coins From K Consecutive Bags', 'titleSlug': 'maximum-coins-from-k-consecutive-bags', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Maximum Score of Non-overlapping Intervals', 'titleSlug': 'maximum-score-of-non-overlapping-intervals', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Find Products with Three Consecutive Digits ', 'titleSlug': 'find-products-with-three-consecutive-digits', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Subsequences with a Unique Middle Mode II', 'titleSlug': 'subsequences-with-a-unique-middle-mode-ii', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}]}
{'title': 'Zigzag Grid Traversal With Skip', 'titleSlug': 'zigzag-grid-traversal-with-skip', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Maximum Amount of Money Robot Can Earn', 'titleSlug': 'maximum-amount-of-money-robot-can-earn', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Minimize the Maximum Edge Weight of Graph', 'titleSlug': 'minimize-the-maximum-edge-weight-of-graph', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Shortest Path', 'slug': 'shortest-path'}]}
{'title': 'Count Non-Decreasing Subarrays After K Operations', 'titleSlug': 'count-non-decreasing-subarrays-after-k-operations', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}, {'name': 'Monotonic Queue', 'slug': 'monotonic-queue'}]}
{'title': 'Find Students Who Improved', 'titleSlug': 'find-students-who-improved', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Minimum Operations to Make Subarray Elements Equal', 'titleSlug': 'minimum-operations-to-make-subarray-elements-equal', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Maximum Difference Between Adjacent Elements in a Circular Array', 'titleSlug': 'maximum-difference-between-adjacent-elements-in-a-circular-array', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Minimum Cost to Make Arrays Identical', 'titleSlug': 'minimum-cost-to-make-arrays-identical', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Longest Special Path', 'titleSlug': 'longest-special-path', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Manhattan Distances of All Arrangements of Pieces', 'titleSlug': 'manhattan-distances-of-all-arrangements-of-pieces', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}]}
{'title': 'Sum of Variable Length Subarrays', 'titleSlug': 'sum-of-variable-length-subarrays', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Maximum and Minimum Sums of at Most Size K Subsequences', 'titleSlug': 'maximum-and-minimum-sums-of-at-most-size-k-subsequences', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}]}
{'title': 'Paint House IV', 'titleSlug': 'paint-house-iv', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Maximum and Minimum Sums of at Most Size K Subarrays', 'titleSlug': 'maximum-and-minimum-sums-of-at-most-size-k-subarrays', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Minimum Unlocked Indices to Sort Nums', 'titleSlug': 'minimum-unlocked-indices-to-sort-nums', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}]}
{'title': 'Count Partitions with Even Sum Difference', 'titleSlug': 'count-partitions-with-even-sum-difference', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Count Mentions Per User', 'titleSlug': 'count-mentions-per-user', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Maximum Frequency After Subarray Operation', 'titleSlug': 'maximum-frequency-after-subarray-operation', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Enumeration', 'slug': 'enumeration'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Frequencies of Shortest Supersequences', 'titleSlug': 'frequencies-of-shortest-supersequences', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Topological Sort', 'slug': 'topological-sort'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Find Valid Emails', 'titleSlug': 'find-valid-emails', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Permutations III', 'titleSlug': 'permutations-iii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Backtracking', 'slug': 'backtracking'}]}
{'title': 'Find Valid Pair of Adjacent Digits in String', 'titleSlug': 'find-valid-pair-of-adjacent-digits-in-string', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Reschedule Meetings for Maximum Free Time I', 'titleSlug': 'reschedule-meetings-for-maximum-free-time-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}]}
{'title': 'Reschedule Meetings for Maximum Free Time II', 'titleSlug': 'reschedule-meetings-for-maximum-free-time-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Minimum Cost Good Caption', 'titleSlug': 'minimum-cost-good-caption', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Maximum Difference Between Even and Odd Frequency I', 'titleSlug': 'maximum-difference-between-even-and-odd-frequency-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Maximum Manhattan Distance After K Changes', 'titleSlug': 'maximum-manhattan-distance-after-k-changes', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Minimum Increments for Target Multiples in an Array', 'titleSlug': 'minimum-increments-for-target-multiples-in-an-array', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Number Theory', 'slug': 'number-theory'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Maximum Difference Between Even and Odd Frequency II', 'titleSlug': 'maximum-difference-between-even-and-odd-frequency-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Enumeration', 'slug': 'enumeration'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Sort Matrix by Diagonals', 'titleSlug': 'sort-matrix-by-diagonals', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Assign Elements to Groups with Constraints', 'titleSlug': 'assign-elements-to-groups-with-constraints', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}]}
{'title': 'Count Substrings Divisible By Last Digit', 'titleSlug': 'count-substrings-divisible-by-last-digit', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Maximize the Minimum Game Score', 'titleSlug': 'maximize-the-minimum-game-score', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Maximum Students on a Single Bench', 'titleSlug': 'maximum-students-on-a-single-bench', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}]}
{'title': 'Find Invalid IP Addresses', 'titleSlug': 'find-invalid-ip-addresses', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Sum of Good Numbers', 'titleSlug': 'sum-of-good-numbers', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Separate Squares I', 'titleSlug': 'separate-squares-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Separate Squares II', 'titleSlug': 'separate-squares-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Line Sweep', 'slug': 'line-sweep'}]}
{'title': 'Shortest Matching Substring', 'titleSlug': 'shortest-matching-substring', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'String Matching', 'slug': 'string-matching'}]}
{'title': 'Find Special Substring of Length K', 'titleSlug': 'find-special-substring-of-length-k', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Eat Pizzas!', 'titleSlug': 'eat-pizzas', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Select K Disjoint Special Substrings', 'titleSlug': 'select-k-disjoint-special-substrings', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Length of Longest V-Shaped Diagonal Segment', 'titleSlug': 'length-of-longest-v-shaped-diagonal-segment', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Memoization', 'slug': 'memoization'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Longest Common Prefix After at Most One Removal', 'titleSlug': 'longest-common-prefix-after-at-most-one-removal', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Check If Digits Are Equal in String After Operations I', 'titleSlug': 'check-if-digits-are-equal-in-string-after-operations-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Simulation', 'slug': 'simulation'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Maximum Sum With at Most K Elements', 'titleSlug': 'maximum-sum-with-at-most-k-elements', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Check If Digits Are Equal in String After Operations II', 'titleSlug': 'check-if-digits-are-equal-in-string-after-operations-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Maximize the Distance Between Points on a Square', 'titleSlug': 'maximize-the-distance-between-points-on-a-square', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Find Products with Valid Serial Numbers', 'titleSlug': 'find-products-with-valid-serial-numbers', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Maximum Coin Collection ', 'titleSlug': 'maximum-coin-collection', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Transform Array by Parity', 'titleSlug': 'transform-array-by-parity', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Find the Number of Copy Arrays', 'titleSlug': 'find-the-number-of-copy-arrays', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}]}
{'title': 'Find Minimum Cost to Remove Array Elements', 'titleSlug': 'find-minimum-cost-to-remove-array-elements', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Permutations IV', 'titleSlug': 'permutations-iv', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Find the Largest Almost Missing Integer', 'titleSlug': 'find-the-largest-almost-missing-integer', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}]}
{'title': 'Longest Palindromic Subsequence After at Most K Operations', 'titleSlug': 'longest-palindromic-subsequence-after-at-most-k-operations', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Sum of K Subarrays With Length at Least M', 'titleSlug': 'sum-of-k-subarrays-with-length-at-least-m', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Lexicographically Smallest Generated String', 'titleSlug': 'lexicographically-smallest-generated-string', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'String Matching', 'slug': 'string-matching'}]}
{'title': 'DNA Pattern Recognition ', 'titleSlug': 'dna-pattern-recognition', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Maximize Profit from Task Assignment', 'titleSlug': 'maximize-profit-from-task-assignment', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Fruits Into Baskets II', 'titleSlug': 'fruits-into-baskets-ii', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Simulation', 'slug': 'simulation'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Choose K Elements With Maximum Sum', 'titleSlug': 'choose-k-elements-with-maximum-sum', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Fruits Into Baskets III', 'titleSlug': 'fruits-into-baskets-iii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Maximize Subarrays After Removing One Conflicting Pair', 'titleSlug': 'maximize-subarrays-after-removing-one-conflicting-pair', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Enumeration', 'slug': 'enumeration'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Apply Substitutions', 'titleSlug': 'apply-substitutions', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Topological Sort', 'slug': 'topological-sort'}]}
{'title': 'Analyze Organization Hierarchy', 'titleSlug': 'analyze-organization-hierarchy', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Unique 3-Digit Even Numbers', 'titleSlug': 'unique-3-digit-even-numbers', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Recursion', 'slug': 'recursion'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Design Spreadsheet', 'titleSlug': 'design-spreadsheet', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Longest Common Prefix of K Strings After Removal', 'titleSlug': 'longest-common-prefix-of-k-strings-after-removal', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Trie', 'slug': 'trie'}]}
{'title': 'Longest Special Path II', 'titleSlug': 'longest-special-path-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Maximum Unique Subarray Sum After Deletion', 'titleSlug': 'maximum-unique-subarray-sum-after-deletion', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Closest Equal Element Queries', 'titleSlug': 'closest-equal-element-queries', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Binary Search', 'slug': 'binary-search'}]}
{'title': 'Zero Array Transformation IV', 'titleSlug': 'zero-array-transformation-iv', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Count Beautiful Numbers', 'titleSlug': 'count-beautiful-numbers', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Phone Number Prefix', 'titleSlug': 'phone-number-prefix', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Trie', 'slug': 'trie'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Maximum Containers on a Ship', 'titleSlug': 'maximum-containers-on-a-ship', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Properties Graph', 'titleSlug': 'properties-graph', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Find the Minimum Amount of Time to Brew Potions', 'titleSlug': 'find-the-minimum-amount-of-time-to-brew-potions', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Simulation', 'slug': 'simulation'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Minimum Operations to Make Array Elements Zero', 'titleSlug': 'minimum-operations-to-make-array-elements-zero', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Maximize Score After Pair Deletions', 'titleSlug': 'maximize-score-after-pair-deletions', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Analyze Subscription Conversion ', 'titleSlug': 'analyze-subscription-conversion', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Reverse Degree of a String', 'titleSlug': 'reverse-degree-of-a-string', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Maximize Active Section with Trade I', 'titleSlug': 'maximize-active-section-with-trade-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Minimum Cost to Divide Array Into Subarrays', 'titleSlug': 'minimum-cost-to-divide-array-into-subarrays', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Maximize Active Section with Trade II', 'titleSlug': 'maximize-active-section-with-trade-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}]}
{'title': 'Minimum Cost to Reach Every Position', 'titleSlug': 'minimum-cost-to-reach-every-position', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}]}
{'title': 'Longest Palindrome After Substring Concatenation I', 'titleSlug': 'longest-palindrome-after-substring-concatenation-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Longest Palindrome After Substring Concatenation II', 'titleSlug': 'longest-palindrome-after-substring-concatenation-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Minimum Operations to Make Elements Within K Subarrays Equal', 'titleSlug': 'minimum-operations-to-make-elements-within-k-subarrays-equal', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Find Time Required to Eliminate Bacterial Strains', 'titleSlug': 'find-time-required-to-eliminate-bacterial-strains', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Minimum Pair Removal to Sort Array I', 'titleSlug': 'minimum-pair-removal-to-sort-array-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Simulation', 'slug': 'simulation'}, {'name': 'Doubly-Linked List', 'slug': 'doubly-linked-list'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Implement Router', 'titleSlug': 'implement-router', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Design', 'slug': 'design'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Maximum Product of Subsequences With an Alternating Sum Equal to K', 'titleSlug': 'maximum-product-of-subsequences-with-an-alternating-sum-equal-to-k', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Minimum Pair Removal to Sort Array II', 'titleSlug': 'minimum-pair-removal-to-sort-array-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Linked List', 'slug': 'linked-list'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Simulation', 'slug': 'simulation'}, {'name': 'Doubly-Linked List', 'slug': 'doubly-linked-list'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Make a Positive Array', 'titleSlug': 'make-a-positive-array', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Minimum Operations to Make Array Sum Divisible by K', 'titleSlug': 'minimum-operations-to-make-array-sum-divisible-by-k', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}]}
{'title': 'Number of Unique XOR Triplets I', 'titleSlug': 'number-of-unique-xor-triplets-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Number of Unique XOR Triplets II', 'titleSlug': 'number-of-unique-xor-triplets-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Shortest Path in a Weighted Tree', 'titleSlug': 'shortest-path-in-a-weighted-tree', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}]}
{'title': 'Find Closest Person', 'titleSlug': 'find-closest-person', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Smallest Palindromic Rearrangement I', 'titleSlug': 'smallest-palindromic-rearrangement-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Counting Sort', 'slug': 'counting-sort'}]}
{'title': 'Smallest Palindromic Rearrangement II', 'titleSlug': 'smallest-palindromic-rearrangement-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Count Numbers with Non-Decreasing Digits ', 'titleSlug': 'count-numbers-with-non-decreasing-digits', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Minimum Threshold for Inversion Pairs Count', 'titleSlug': 'minimum-threshold-for-inversion-pairs-count', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Binary Indexed Tree', 'slug': 'binary-indexed-tree'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}]}
{'title': 'Find Product Recommendation Pairs', 'titleSlug': 'find-product-recommendation-pairs', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Calculate Score After Performing Instructions', 'titleSlug': 'calculate-score-after-performing-instructions', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Make Array Non-decreasing', 'titleSlug': 'make-array-non-decreasing', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Find X Value of Array I', 'titleSlug': 'find-x-value-of-array-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Find X Value of Array II', 'titleSlug': 'find-x-value-of-array-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}]}
{'title': 'Range XOR Queries with Subarray Reversals', 'titleSlug': 'range-xor-queries-with-subarray-reversals', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Binary Tree', 'slug': 'binary-tree'}]}
{'title': 'Find the Most Common Response', 'titleSlug': 'find-the-most-common-response', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Unit Conversion I', 'titleSlug': 'unit-conversion-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Count Cells in Overlapping Horizontal and Vertical Substrings', 'titleSlug': 'count-cells-in-overlapping-horizontal-and-vertical-substrings', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}, {'name': 'Rolling Hash', 'slug': 'rolling-hash'}, {'name': 'String Matching', 'slug': 'string-matching'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Hash Function', 'slug': 'hash-function'}]}
{'title': 'Maximum Profit from Valid Topological Order in DAG', 'titleSlug': 'maximum-profit-from-valid-topological-order-in-dag', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Topological Sort', 'slug': 'topological-sort'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Count Covered Buildings', 'titleSlug': 'count-covered-buildings', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Path Existence Queries in a Graph I', 'titleSlug': 'path-existence-queries-in-a-graph-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Concatenated Divisibility', 'titleSlug': 'concatenated-divisibility', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Path Existence Queries in a Graph II', 'titleSlug': 'path-existence-queries-in-a-graph-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Unit Conversion II', 'titleSlug': 'unit-conversion-ii', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Maximum Product of Two Digits', 'titleSlug': 'maximum-product-of-two-digits', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Fill a Special Grid', 'titleSlug': 'fill-a-special-grid', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Divide and Conquer', 'slug': 'divide-and-conquer'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Merge Operations for Minimum Travel Time', 'titleSlug': 'merge-operations-for-minimum-travel-time', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Find Sum of Array Product of Magical Sequences', 'titleSlug': 'find-sum-of-array-product-of-magical-sequences', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Minimum Time to Visit All Houses', 'titleSlug': 'minimum-time-to-visit-all-houses', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Find Most Frequent Vowel and Consonant', 'titleSlug': 'find-most-frequent-vowel-and-consonant', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Minimum Operations to Convert All Elements to Zero', 'titleSlug': 'minimum-operations-to-convert-all-elements-to-zero', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Maximum Weighted K-Edge Path', 'titleSlug': 'maximum-weighted-k-edge-path', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Subtree Inversion Sum', 'titleSlug': 'subtree-inversion-sum', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}]}
{'title': 'Minimum Deletions for At Most K Distinct Characters', 'titleSlug': 'minimum-deletions-for-at-most-k-distinct-characters', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Equal Sum Grid Partition I', 'titleSlug': 'equal-sum-grid-partition-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Enumeration', 'slug': 'enumeration'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Maximum Sum of Edge Values in a Graph', 'titleSlug': 'maximum-sum-of-edge-values-in-a-graph', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Equal Sum Grid Partition II', 'titleSlug': 'equal-sum-grid-partition-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Matrix', 'slug': 'matrix'}, {'name': 'Enumeration', 'slug': 'enumeration'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Multiply Two Polynomials', 'titleSlug': 'multiply-two-polynomials', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}]}
{'title': 'Smallest Index With Digit Sum Equal to Index', 'titleSlug': 'smallest-index-with-digit-sum-equal-to-index', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}]}
{'title': 'Minimum Swaps to Sort by Digit Sum', 'titleSlug': 'minimum-swaps-to-sort-by-digit-sum', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Grid Teleportation Traversal', 'titleSlug': 'grid-teleportation-traversal', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Minimum Weighted Subgraph With the Required Paths II', 'titleSlug': 'minimum-weighted-subgraph-with-the-required-paths-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}]}
{'title': 'Find Category Recommendation Pairs', 'titleSlug': 'find-category-recommendation-pairs', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Smallest Subarray to Sort in Every Sliding Window', 'titleSlug': 'smallest-subarray-to-sort-in-every-sliding-window', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Monotonic Stack', 'slug': 'monotonic-stack'}]}
{'title': 'Sum of Largest Prime Substrings', 'titleSlug': 'sum-of-largest-prime-substrings', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Find Maximum Number of Non Intersecting Substrings', 'titleSlug': 'find-maximum-number-of-non-intersecting-substrings', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Number of Ways to Assign Edge Weights I', 'titleSlug': 'number-of-ways-to-assign-edge-weights-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}]}
{'title': 'Number of Ways to Assign Edge Weights II', 'titleSlug': 'number-of-ways-to-assign-edge-weights-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}]}
{'title': 'Find Minimum Log Transportation Cost', 'titleSlug': 'find-minimum-log-transportation-cost', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Resulting String After Adjacent Removals', 'titleSlug': 'resulting-string-after-adjacent-removals', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Stack', 'slug': 'stack'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Maximum Profit from Trading Stocks with Discounts', 'titleSlug': 'maximum-profit-from-trading-stocks-with-discounts', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}]}
{'title': 'Lexicographically Smallest String After Adjacent Removals', 'titleSlug': 'lexicographically-smallest-string-after-adjacent-removals', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Seasonal Sales Analysis', 'titleSlug': 'seasonal-sales-analysis', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Sequential Grid Path Cover', 'titleSlug': 'sequential-grid-path-cover', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Recursion', 'slug': 'recursion'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Partition Array into Two Equal Product Subsets', 'titleSlug': 'partition-array-into-two-equal-product-subsets', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Recursion', 'slug': 'recursion'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Minimum Absolute Difference in Sliding Submatrix', 'titleSlug': 'minimum-absolute-difference-in-sliding-submatrix', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Minimum Moves to Clean the Classroom', 'titleSlug': 'minimum-moves-to-clean-the-classroom', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Maximize Count of Distinct Primes After Split', 'titleSlug': 'maximize-count-of-distinct-primes-after-split', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Find Books with No Available Copies', 'titleSlug': 'find-books-with-no-available-copies', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Find the Shortest Superstring II', 'titleSlug': 'find-the-shortest-superstring-ii', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'String', 'slug': 'string'}]}
{'title': 'Maximize Y‑Sum by Picking a Triplet of Distinct X‑Values', 'titleSlug': 'maximize-ysum-by-picking-a-triplet-of-distinct-xvalues', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Sorting', 'slug': 'sorting'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}]}
{'title': 'Best Time to Buy and Sell Stock V', 'titleSlug': 'best-time-to-buy-and-sell-stock-v', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Maximize Subarray GCD Score', 'titleSlug': 'maximize-subarray-gcd-score', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Enumeration', 'slug': 'enumeration'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Maximum Good Subtree Score', 'titleSlug': 'maximum-good-subtree-score', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Transform Array to All Equal Elements', 'titleSlug': 'transform-array-to-all-equal-elements', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Count the Number of Computer Unlocking Permutations', 'titleSlug': 'count-the-number-of-computer-unlocking-permutations', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Brainteaser', 'slug': 'brainteaser'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}]}
{'title': 'Count Partitions With Max-Min Difference at Most K', 'titleSlug': 'count-partitions-with-max-min-difference-at-most-k', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}, {'name': 'Monotonic Queue', 'slug': 'monotonic-queue'}]}
{'title': 'Minimum Steps to Convert String with Operations', 'titleSlug': 'minimum-steps-to-convert-string-with-operations', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Find Consistently Improving Employees', 'titleSlug': 'find-consistently-improving-employees', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Count Odd Letters from Number', 'titleSlug': 'count-odd-letters-from-number', 'difficulty': 'Easy', 'isPaidOnly': True, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Simulation', 'slug': 'simulation'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Generate Tag for Video Caption', 'titleSlug': 'generate-tag-for-video-caption', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Count Special Triplets', 'titleSlug': 'count-special-triplets', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Counting', 'slug': 'counting'}]}
{'title': 'Maximum Product of First and Last Elements of a Subsequence', 'titleSlug': 'maximum-product-of-first-and-last-elements-of-a-subsequence', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Two Pointers', 'slug': 'two-pointers'}]}
{'title': 'Find Weighted Median Node in Tree', 'titleSlug': 'find-weighted-median-node-in-tree', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}]}
{'title': 'Find COVID Recovery Patients', 'titleSlug': 'find-covid-recovery-patients', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Minimum Adjacent Swaps to Alternate Parity', 'titleSlug': 'minimum-adjacent-swaps-to-alternate-parity', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Greedy', 'slug': 'greedy'}]}
{'title': 'Find Maximum Area of a Triangle', 'titleSlug': 'find-maximum-area-of-a-triangle', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Geometry', 'slug': 'geometry'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Count Prime-Gap Balanced Subarrays', 'titleSlug': 'count-prime-gap-balanced-subarrays', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Queue', 'slug': 'queue'}, {'name': 'Sliding Window', 'slug': 'sliding-window'}, {'name': 'Number Theory', 'slug': 'number-theory'}, {'name': 'Monotonic Queue', 'slug': 'monotonic-queue'}]}
{'title': 'Kth Smallest Path XOR Sum', 'titleSlug': 'kth-smallest-path-xor-sum', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Check if Any Element Has Prime Frequency', 'titleSlug': 'check-if-any-element-has-prime-frequency', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Counting', 'slug': 'counting'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Inverse Coin Change', 'titleSlug': 'inverse-coin-change', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}]}
{'title': 'Minimum Increments to Equalize Leaf Paths', 'titleSlug': 'minimum-increments-to-equalize-leaf-paths', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Tree', 'slug': 'tree'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}]}
{'title': 'Minimum Time to Transport All Individuals', 'titleSlug': 'minimum-time-to-transport-all-individuals', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Shortest Path', 'slug': 'shortest-path'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Once Twice', 'titleSlug': 'once-twice', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}]}
{'title': 'Minimum Cost Path with Alternating Directions I', 'titleSlug': 'minimum-cost-path-with-alternating-directions-i', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Brainteaser', 'slug': 'brainteaser'}]}
{'title': 'Partition String ', 'titleSlug': 'partition-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Trie', 'slug': 'trie'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Longest Common Prefix Between Adjacent Strings After Removals', 'titleSlug': 'longest-common-prefix-between-adjacent-strings-after-removals', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Partition Array to Minimize XOR', 'titleSlug': 'partition-array-to-minimize-xor', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Prefix Sum', 'slug': 'prefix-sum'}]}
{'title': 'Maximize Spanning Tree Stability with Upgrades', 'titleSlug': 'maximize-spanning-tree-stability-with-upgrades', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Minimum Spanning Tree', 'slug': 'minimum-spanning-tree'}]}
{'title': 'Find Drivers with Improved Fuel Efficiency', 'titleSlug': 'find-drivers-with-improved-fuel-efficiency', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Hexadecimal and Hexatrigesimal Conversion', 'titleSlug': 'hexadecimal-and-hexatrigesimal-conversion', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'String', 'slug': 'string'}]}
{'title': 'Minimum Cost Path with Alternating Directions II', 'titleSlug': 'minimum-cost-path-with-alternating-directions-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Minimum Time to Reach Destination in Directed Graph', 'titleSlug': 'minimum-time-to-reach-destination-in-directed-graph', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Graph', 'slug': 'graph'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Shortest Path', 'slug': 'shortest-path'}]}
{'title': 'Minimum Stability Factor of Array', 'titleSlug': 'minimum-stability-factor-of-array', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Coupon Code Validator', 'titleSlug': 'coupon-code-validator', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'String', 'slug': 'string'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Power Grid Maintenance', 'titleSlug': 'power-grid-maintenance', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Ordered Set', 'slug': 'ordered-set'}]}
{'title': 'Minimum Time for K Connected Components', 'titleSlug': 'minimum-time-for-k-connected-components', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Minimum Moves to Reach Target in Grid', 'titleSlug': 'minimum-moves-to-reach-target-in-grid', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Minimum Number of Primes to Sum to Target', 'titleSlug': 'minimum-number-of-primes-to-sum-to-target', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Find Overbooked Employees', 'titleSlug': 'find-overbooked-employees', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Database', 'slug': 'database'}]}
{'title': 'Process String with Special Operations I', 'titleSlug': 'process-string-with-special-operations-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Minimize Maximum Component Cost', 'titleSlug': 'minimize-maximum-component-cost', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Sort', 'slug': 'sort'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Graph', 'slug': 'graph'}]}
{'title': 'Process String with Special Operations II', 'titleSlug': 'process-string-with-special-operations-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Longest Palindromic Path in Graph', 'titleSlug': 'longest-palindromic-path-in-graph', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'String', 'slug': 'string'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Bit Manipulation', 'slug': 'bit-manipulation'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Bitmask', 'slug': 'bitmask'}]}
{'title': 'Number of Student Replacements', 'titleSlug': 'number-of-student-replacements', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Simulation', 'slug': 'simulation'}]}
{'title': 'Find Students with Study Spiral Pattern', 'titleSlug': 'find-students-with-study-spiral-pattern', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Split Array by Prime Indices', 'titleSlug': 'split-array-by-prime-indices', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Number Theory', 'slug': 'number-theory'}]}
{'title': 'Count Islands With Total Value Divisible by K', 'titleSlug': 'count-islands-with-total-value-divisible-by-k', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Depth-First Search', 'slug': 'depth-first-search'}, {'name': 'Breadth-First Search', 'slug': 'breadth-first-search'}, {'name': 'Union Find', 'slug': 'union-find'}, {'name': 'Matrix', 'slug': 'matrix'}]}
{'title': 'Network Recovery Pathways', 'titleSlug': 'network-recovery-pathways', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Binary Search', 'slug': 'binary-search'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Graph', 'slug': 'graph'}, {'name': 'Topological Sort', 'slug': 'topological-sort'}, {'name': 'Heap (Priority Queue)', 'slug': 'heap-priority-queue'}, {'name': 'Shortest Path', 'slug': 'shortest-path'}]}
{'title': 'Number of Integers With Popcount-Depth Equal to K I', 'titleSlug': 'number-of-integers-with-popcount-depth-equal-to-k-i', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}, {'name': 'Dynamic Programming', 'slug': 'dynamic-programming'}, {'name': 'Combinatorics', 'slug': 'combinatorics'}]}
{'title': 'Check Divisibility by Digit Sum and Product', 'titleSlug': 'check-divisibility-by-digit-sum-and-product', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': [{'name': 'Math', 'slug': 'math'}]}
{'title': 'Count Number of Trapezoids I', 'titleSlug': 'count-number-of-trapezoids-i', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Geometry', 'slug': 'geometry'}]}
{'title': 'Number of Integers With Popcount-Depth Equal to K II', 'titleSlug': 'number-of-integers-with-popcount-depth-equal-to-k-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Segment Tree', 'slug': 'segment-tree'}]}
{'title': 'Count Number of Trapezoids II', 'titleSlug': 'count-number-of-trapezoids-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Hash Table', 'slug': 'hash-table'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Geometry', 'slug': 'geometry'}]}
{'title': 'Find Stores with Inventory Imbalance', 'titleSlug': 'find-stores-with-inventory-imbalance', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Maximum Median Sum of Subsequences of Size 3', 'titleSlug': 'maximum-median-sum-of-subsequences-of-size-3', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Maximum Number of Subsequences After One Inserting', 'titleSlug': 'maximum-number-of-subsequences-after-one-inserting', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Minimum Jumps to Reach End via Prime Teleportation', 'titleSlug': 'minimum-jumps-to-reach-end-via-prime-teleportation', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Partition Array for Maximum XOR and AND', 'titleSlug': 'partition-array-for-maximum-xor-and-and', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Math', 'slug': 'math'}, {'name': 'Greedy', 'slug': 'greedy'}, {'name': 'Enumeration', 'slug': 'enumeration'}]}
{'title': 'Sort Threats by Severity and Exploitability', 'titleSlug': 'sort-threats-by-severity-and-exploitability', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': [{'name': 'Array', 'slug': 'array'}, {'name': 'Sorting', 'slug': 'sorting'}]}
{'title': 'Subarrays with XOR at Least K', 'titleSlug': 'subarrays-with-xor-at-least-k', 'difficulty': 'Hard', 'isPaidOnly': True, 'topicTags': []}
{'title': 'Earliest Finish Time for Land and Water Rides I', 'titleSlug': 'earliest-finish-time-for-land-and-water-rides-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Minimum Removals to Balance Array', 'titleSlug': 'minimum-removals-to-balance-array', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Earliest Finish Time for Land and Water Rides II', 'titleSlug': 'earliest-finish-time-for-land-and-water-rides-ii', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Threshold Majority Queries', 'titleSlug': 'threshold-majority-queries', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Trionic Array I', 'titleSlug': 'trionic-array-i', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Maximum Balanced Shipments', 'titleSlug': 'maximum-balanced-shipments', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Minimum Time to Activate String', 'titleSlug': 'minimum-time-to-activate-string', 'difficulty': 'Medium', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Trionic Array II', 'titleSlug': 'trionic-array-ii', 'difficulty': 'Hard', 'isPaidOnly': False, 'topicTags': []}
{'title': 'Longest Semi-Repeating Subarray', 'titleSlug': 'longest-semi-repeating-subarray', 'difficulty': 'Medium', 'isPaidOnly': True, 'topicTags': []}
{'title': 'Find Books with Polarized Opinions', 'titleSlug': 'find-books-with-polarized-opinions', 'difficulty': 'Easy', 'isPaidOnly': False, 'topicTags': []}

Process finished with exit code 0
